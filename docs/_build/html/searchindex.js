Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/functional", "reference/generated/inferno.ContextualHook", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Module", "reference/generated/inferno.RecordModule", "reference/generated/inferno.RecordTensor", "reference/generated/inferno.ShapedTensor", "reference/generated/inferno.StateHook", "reference/generated/inferno.astensors", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.exponential_smoothing", "reference/generated/inferno.full", "reference/generated/inferno.functional.Extrapolation", "reference/generated/inferno.functional.FullBounding", "reference/generated/inferno.functional.HalfBounding", "reference/generated/inferno.functional.Interpolation", "reference/generated/inferno.functional.bound_lower_multiplicative", "reference/generated/inferno.functional.bound_lower_power", "reference/generated/inferno.functional.bound_lower_sharp", "reference/generated/inferno.functional.bound_multiplicative", "reference/generated/inferno.functional.bound_power", "reference/generated/inferno.functional.bound_sharp", "reference/generated/inferno.functional.bound_upper_multiplicative", "reference/generated/inferno.functional.bound_upper_power", "reference/generated/inferno.functional.bound_upper_sharp", "reference/generated/inferno.functional.extrap_expdecay", "reference/generated/inferno.functional.extrap_expratedecay", "reference/generated/inferno.functional.extrap_linear_backward", "reference/generated/inferno.functional.extrap_linear_forward", "reference/generated/inferno.functional.extrap_nearest", "reference/generated/inferno.functional.extrap_neighbors", "reference/generated/inferno.functional.extrap_next", "reference/generated/inferno.functional.extrap_previous", "reference/generated/inferno.functional.interp_expdecay", "reference/generated/inferno.functional.interp_expratedecay", "reference/generated/inferno.functional.interp_linear", "reference/generated/inferno.functional.interp_nearest", "reference/generated/inferno.functional.interp_next", "reference/generated/inferno.functional.interp_previous", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.isi", "reference/generated/inferno.learn.CellTrainer", "reference/generated/inferno.learn.IndependentTrainer", "reference/generated/inferno.learn.MSTDPET", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Cell", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.InfernoNeuron", "reference/generated/inferno.neural.InfernoSynapse", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Updatable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding_constant", "reference/generated/inferno.neural.functional.voltage_thresholding_linear", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.BatchShapeMixin", "reference/generated/inferno.neural.mixins.DelayedMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptiveCurrentMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptiveThresholdMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer", "reference/generated/inferno.observe.ConditionalNearestTraceReducer", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.MonitorConstructor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.RecordReducer", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.trace_cumulative", "reference/generated/inferno.trace_cumulative_scaled", "reference/generated/inferno.trace_nearest", "reference/generated/inferno.trace_nearest_scaled", "reference/generated/inferno.types.ManyToMany", "reference/generated/inferno.types.ManyToManyMethod", "reference/generated/inferno.types.ManyToOne", "reference/generated/inferno.types.ManyToOneMethod", "reference/generated/inferno.types.OneToMany", "reference/generated/inferno.types.OneToManyMethod", "reference/generated/inferno.types.OneToOne", "reference/generated/inferno.types.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/functional.md", "reference/generated/inferno.ContextualHook.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RecordModule.rst", "reference/generated/inferno.RecordTensor.rst", "reference/generated/inferno.ShapedTensor.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.astensors.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.exponential_smoothing.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.functional.Extrapolation.rst", "reference/generated/inferno.functional.FullBounding.rst", "reference/generated/inferno.functional.HalfBounding.rst", "reference/generated/inferno.functional.Interpolation.rst", "reference/generated/inferno.functional.bound_lower_multiplicative.rst", "reference/generated/inferno.functional.bound_lower_power.rst", "reference/generated/inferno.functional.bound_lower_sharp.rst", "reference/generated/inferno.functional.bound_multiplicative.rst", "reference/generated/inferno.functional.bound_power.rst", "reference/generated/inferno.functional.bound_sharp.rst", "reference/generated/inferno.functional.bound_upper_multiplicative.rst", "reference/generated/inferno.functional.bound_upper_power.rst", "reference/generated/inferno.functional.bound_upper_sharp.rst", "reference/generated/inferno.functional.extrap_expdecay.rst", "reference/generated/inferno.functional.extrap_expratedecay.rst", "reference/generated/inferno.functional.extrap_linear_backward.rst", "reference/generated/inferno.functional.extrap_linear_forward.rst", "reference/generated/inferno.functional.extrap_nearest.rst", "reference/generated/inferno.functional.extrap_neighbors.rst", "reference/generated/inferno.functional.extrap_next.rst", "reference/generated/inferno.functional.extrap_previous.rst", "reference/generated/inferno.functional.interp_expdecay.rst", "reference/generated/inferno.functional.interp_expratedecay.rst", "reference/generated/inferno.functional.interp_linear.rst", "reference/generated/inferno.functional.interp_nearest.rst", "reference/generated/inferno.functional.interp_next.rst", "reference/generated/inferno.functional.interp_previous.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.isi.rst", "reference/generated/inferno.learn.CellTrainer.rst", "reference/generated/inferno.learn.IndependentTrainer.rst", "reference/generated/inferno.learn.MSTDPET.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Cell.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.InfernoNeuron.rst", "reference/generated/inferno.neural.InfernoSynapse.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Updatable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_constant.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_linear.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.BatchShapeMixin.rst", "reference/generated/inferno.neural.mixins.DelayedMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptiveCurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptiveThresholdMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ConditionalNearestTraceReducer.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.MonitorConstructor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.RecordReducer.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.trace_cumulative.rst", "reference/generated/inferno.trace_cumulative_scaled.rst", "reference/generated/inferno.trace_nearest.rst", "reference/generated/inferno.trace_nearest_scaled.rst", "reference/generated/inferno.types.ManyToMany.rst", "reference/generated/inferno.types.ManyToManyMethod.rst", "reference/generated/inferno.types.ManyToOne.rst", "reference/generated/inferno.types.ManyToOneMethod.rst", "reference/generated/inferno.types.OneToMany.rst", "reference/generated/inferno.types.OneToManyMethod.rst", "reference/generated/inferno.types.OneToOne.rst", "reference/generated/inferno.types.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.functional", "ContextualHook", "DimensionalModule", "Hook", "Module", "RecordModule", "RecordTensor", "ShapedTensor", "StateHook", "astensors", "empty", "exp", "exponential_smoothing", "full", "Extrapolation", "FullBounding", "HalfBounding", "Interpolation", "bound_lower_multiplicative", "bound_lower_power", "bound_lower_sharp", "bound_multiplicative", "bound_power", "bound_sharp", "bound_upper_multiplicative", "bound_upper_power", "bound_upper_sharp", "extrap_expdecay", "extrap_expratedecay", "extrap_linear_backward", "extrap_linear_forward", "extrap_nearest", "extrap_neighbors", "extrap_next", "extrap_previous", "interp_expdecay", "interp_expratedecay", "interp_linear", "interp_nearest", "interp_next", "interp_previous", "holt_linear_smoothing", "isi", "CellTrainer", "IndependentTrainer", "MSTDPET", "MaxRateClassifier", "STDP", "ALIF", "AdEx", "Biclique", "Cell", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "InfernoNeuron", "InfernoSynapse", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Updatable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding_constant", "voltage_thresholding_linear", "BatchMixin", "BatchShapeMixin", "DelayedMixin", "ShapeMixin", "AdaptiveCurrentMixin", "AdaptiveThresholdMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "ConditionalCumulativeTraceReducer", "ConditionalNearestTraceReducer", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "InputMonitor", "Monitor", "MonitorConstructor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "RecordReducer", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "sqrt", "LogNormal", "Normal", "Poisson", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"unlik": [0, 11, 13, 66, 67], "artifici": 0, "neuron": [0, 47, 50, 51, 52, 53, 54, 55, 56, 58, 62, 63, 64, 66, 67, 68, 69, 70, 77, 78, 86, 87, 88, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 165, 170], "typic": [0, 2, 9, 165, 166, 168], "found": [0, 9], "ann": 0, "snn": 0, "ar": [0, 2, 7, 10, 11, 12, 14, 48, 50, 51, 52, 54, 55, 58, 59, 62, 65, 68, 69, 70, 71, 72, 73, 76, 77, 82, 83, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 100, 102, 108, 110, 113, 120, 123, 124, 125, 130, 136, 139, 140, 141, 143, 145, 163, 165, 166, 167, 168], "fundament": 0, "state": [0, 3, 7, 9, 10, 11, 12, 13, 17, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 82, 98, 99, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 131, 132, 133, 134, 142, 143, 144, 145], "In": [0, 2, 3, 9, 10, 11, 130, 165, 167, 170], "biolog": [0, 2, 3, 167], "electr": [0, 166, 167, 168, 170], "potenti": [0, 2, 3, 26, 27, 28, 29, 30, 31, 50, 52, 53, 54, 56, 62, 63, 64, 66, 68, 69, 74, 77, 86, 87, 88, 96, 97, 98, 99, 108, 165, 166, 167, 168, 170], "differ": [0, 10, 11, 49, 50, 51, 52, 53, 54, 60, 61, 62, 64, 68, 69, 77, 86, 88, 96, 97, 99, 110, 111, 112, 113, 114, 119, 120, 123, 127, 142, 144, 166, 167, 168], "between": [0, 10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 55, 58, 60, 61, 65, 70, 76, 78, 91, 92, 93, 94, 95, 102, 117, 118, 119, 120, 121, 122, 123, 127, 129, 130, 132, 133, 165, 168], "interior": 0, "exterior": 0, "cell": [0, 48, 49, 50, 52, 53, 54, 55, 62, 64, 68, 69, 70, 77, 78, 96, 97, 165, 166, 167, 168], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 108, 110, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 141, 143, 145, 165, 166, 167, 168, 170], "drive": 0, "forc": [0, 13], "behind": [0, 2], "gener": [0, 2, 3, 11, 12, 47, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 108, 115, 139, 140, 141, 154, 163, 165, 166, 168], "action": [0, 2, 3, 53, 54, 56, 62, 63, 64, 66, 68, 69, 74, 77, 86, 87, 88, 98, 99, 108, 166, 167, 168, 170], "thi": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 64, 65, 66, 67, 68, 70, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 100, 102, 103, 115, 117, 118, 120, 123, 124, 125, 128, 130, 131, 134, 141, 143, 145, 154, 165, 166, 167, 168, 170], "extend": [0, 9, 115, 154], "simplifi": [0, 170], "us": [0, 2, 3, 6, 8, 9, 11, 12, 14, 19, 20, 21, 22, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 66, 67, 68, 70, 71, 72, 73, 77, 78, 80, 82, 86, 88, 91, 96, 97, 110, 111, 112, 113, 114, 117, 118, 120, 123, 125, 126, 139, 140, 141, 143, 145, 167, 168], "when": [0, 2, 6, 8, 9, 10, 11, 12, 13, 14, 34, 35, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 64, 68, 70, 71, 72, 73, 75, 78, 82, 86, 87, 88, 98, 99, 104, 105, 110, 111, 112, 113, 114, 119, 120, 124, 125, 127, 128, 134, 166, 167], "": [0, 2, 8, 9, 10, 12, 13, 17, 46, 48, 50, 52, 54, 57, 62, 65, 68, 70, 75, 76, 77, 78, 81, 86, 88, 91, 92, 93, 94, 95, 97, 116, 117, 118, 120, 121, 123, 125, 131, 132, 133, 134, 136, 143, 145, 166, 167, 168], "import": [0, 2, 9, 55], "treat": [0, 50, 52, 60, 61, 110, 111, 112, 113, 114], "variabl": [0, 9, 50, 52], "separ": [0, 59, 65, 76], "each": [0, 2, 7, 8, 10, 11, 12, 48, 50, 51, 55, 60, 61, 65, 70, 76, 100, 102, 123, 166, 167, 168, 170], "sampl": [0, 10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 65, 76, 91, 92, 94, 95, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 139, 140, 141, 154], "present": [0, 7, 10, 48, 50, 51, 52, 53, 54, 55, 58, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 79, 83, 84, 85, 100, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 123, 166], "dure": [0, 3, 66, 74, 108], "fix": [0, 3, 53, 54, 62, 63, 64, 68, 69, 77, 141, 168], "hyperparamet": [0, 2, 50, 52, 65, 76, 163], "meanwhil": [0, 3], "do": [0, 48, 165], "need": [0, 9, 10, 11, 12, 65, 91, 92, 134, 165], "duplic": [0, 48], "instead": [0, 2, 167], "broadcast": [0, 58, 61, 86, 87, 88, 89, 90], "batch": [0, 47, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 80, 86, 87, 88, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 110, 111, 113, 114], "some": [0, 2, 3, 10, 12, 121, 143, 145], "paramet": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 154, 155, 166, 168], "mai": [0, 2, 3, 9, 11, 48, 50, 52, 55, 59], "includ": [0, 9, 50, 52, 53, 54, 58, 64, 66, 67, 68, 70, 74, 76, 81, 94, 95, 101, 104, 105, 163], "adapt": [0, 3, 53, 54, 64, 66, 68, 86, 87, 88, 89, 90, 104, 105, 142, 143, 144, 145, 163], "behavior": [0, 10, 50, 51, 52, 53, 54, 64, 65, 68, 91, 92, 104, 105, 163, 166, 167], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "input": [0, 2, 6, 7, 8, 14, 15, 16, 18, 48, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 110, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 137, 138, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 166, 167, 168, 170], "A": [0, 2, 7, 10, 12, 50, 52, 53, 54, 64, 68, 104, 105, 117, 118, 119, 127, 132, 133, 141, 142, 143, 144, 145], "common": [0, 60, 61, 67, 74, 79, 80, 120, 124, 125, 126, 128, 134, 165], "exampl": [0, 7, 12, 55, 89, 90, 168], "an": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 15, 23, 26, 29, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 82, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 104, 105, 108, 110, 111, 112, 113, 114, 119, 120, 122, 123, 127, 134, 141, 146, 147, 148, 149, 150, 151, 166, 167, 168, 170], "threshold": [0, 53, 54, 64, 68, 87, 88, 90, 98, 99, 104, 105, 163, 167, 168], "where": [0, 2, 10, 11, 12, 25, 28, 31, 47, 48, 50, 51, 52, 55, 58, 59, 65, 70, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 108, 110, 111, 113, 114, 121, 123, 125, 126, 165, 166, 167, 168, 170], "defin": [0, 2, 65, 66, 67, 76, 167], "minimum": [0, 7, 12, 20, 21, 65, 91, 92, 136], "membran": [0, 3, 53, 54, 56, 62, 63, 64, 66, 68, 69, 74, 77, 86, 87, 88, 96, 97, 98, 99, 106, 109, 166, 167, 168], "which": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 16, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 141, 154, 165, 166, 167, 168, 170], "spike": [0, 2, 47, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 74, 76, 77, 79, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 99, 108, 110, 112, 113, 114, 163, 167, 168, 170], "These": [0, 51, 55, 61, 166, 167], "should": [0, 6, 7, 8, 9, 10, 11, 12, 13, 19, 22, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 86, 87, 88, 91, 92, 104, 105, 110, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134], "share": [0, 48, 50, 102], "across": [0, 11, 12, 48, 50, 53, 54, 55, 62, 64, 68, 69, 71, 72, 73, 77, 96, 97, 166, 167, 168], "all": [0, 2, 10, 11, 12, 14, 47, 48, 49, 50, 55, 70, 71, 73, 75, 81, 82, 91, 92, 93, 94, 95, 116, 117, 119, 120, 123, 125, 131, 132, 136, 142, 143, 167], "contribut": [0, 117, 118, 132, 133], "portion": 0, "updat": [0, 2, 10, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 68, 70, 78, 86, 87, 88, 98, 99, 104, 105, 126, 142, 143, 144, 145, 165], "also": [0, 3, 7, 10, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 50, 52, 53, 54, 58, 59, 64, 66, 68, 70, 71, 72, 73, 78, 93, 104, 105, 143, 145, 167, 168], "appli": [0, 2, 3, 11, 13, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 48, 49, 50, 53, 55, 57, 59, 70, 71, 72, 73, 75, 78, 81, 82, 86, 87, 88, 89, 90, 166, 167, 168, 170], "weight": [0, 2, 50, 51, 52, 58, 59, 71, 72, 73, 83, 84, 85, 165], "bias": [0, 58, 59, 71, 72, 73, 83, 84], "handl": [0, 9, 49], "same": [0, 7, 9, 10, 11, 12, 48, 59, 104, 105, 117, 118, 119, 121, 122, 123, 126, 127, 129, 130, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 168], "wai": [0, 2, 6, 9, 100, 102, 134], "can": [0, 2, 3, 8, 9, 10, 11, 12, 48, 49, 50, 52, 53, 54, 64, 66, 68, 70, 78, 104, 105, 120, 124, 125, 128, 134, 165, 167, 168], "done": [0, 86, 87, 88], "either": [0, 7, 10, 11, 12, 51, 55, 83, 88, 120, 166], "reduc": [0, 2, 12, 48, 50, 51, 52, 53, 54, 55, 64, 82, 86, 87, 88, 104, 105, 120, 123, 124, 125, 128, 130, 134], "output": [0, 6, 8, 13, 15, 18, 46, 51, 55, 56, 58, 59, 65, 70, 71, 72, 73, 76, 78, 91, 92, 93, 94, 95, 98, 99, 115, 122, 125, 128, 132, 133, 135, 137, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 168], "along": [0, 7, 10, 50, 52, 55, 59, 75, 86, 87, 88, 103, 116, 123, 126, 136], "dimens": [0, 7, 10, 11, 12, 47, 50, 51, 52, 53, 54, 55, 58, 59, 64, 65, 67, 68, 71, 72, 73, 75, 76, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 116, 123, 136], "The": [0, 2, 3, 7, 10, 11, 12, 13, 19, 22, 47, 48, 49, 50, 51, 52, 55, 56, 59, 61, 65, 70, 76, 78, 82, 89, 90, 91, 92, 94, 95, 110, 113, 120, 122, 123, 124, 126, 128, 132, 133, 134, 139, 141, 143, 145, 166, 168], "former": [0, 166], "more": [0, 3, 7, 11, 12, 50, 52, 53, 54, 60, 61, 62, 63, 64, 68, 69, 77, 82, 86, 87, 88, 163, 166], "effici": [0, 48], "make": [0, 11, 126], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 163], "perform": [0, 2, 8, 10, 11, 17, 46, 50, 51, 52, 57, 59, 75, 123, 141, 142, 143, 144, 145, 165], "inferno": [0, 2, 48, 49, 55, 66, 67, 70, 163, 165, 167, 168], "object": [0, 8, 9, 12, 13, 48, 49, 70, 78, 80, 81, 82, 85, 100, 102, 104, 105, 106, 107, 109, 111, 114], "orient": 0, "interfac": [0, 66, 67], "automat": [0, 7, 9, 11, 12, 48, 51, 66, 67, 70, 86, 87, 88, 125], "But": 0, "certain": 0, "case": [0, 2, 25, 28, 31, 36, 43, 52, 60, 61, 75, 108, 116, 118, 125, 127, 133, 143, 144, 145, 165, 170], "function": [0, 6, 8, 9, 11, 13, 16, 34, 35, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 75, 78, 79, 81, 82, 86, 87, 88, 98, 99, 104, 105, 110, 111, 112, 113, 114, 115, 120, 122, 124, 125, 128, 132, 133, 134, 138, 139, 140, 141, 143, 145, 154, 165, 170], "might": 0, "necessari": 0, "hand": [0, 120], "detail": [0, 50, 52, 53, 54, 59, 60, 61, 62, 63, 64, 68, 69, 77, 86, 87, 88, 163], "inform": [0, 6, 7, 8, 11, 58, 74, 79, 82, 166], "process": [0, 48, 50, 52, 55, 65, 70, 91, 92], "arxiv": [0, 166], "1909": 0, "02549": 0, "becaus": [0, 48], "over": [0, 2, 10, 11, 48, 50, 51, 52, 53, 54, 59, 64, 71, 72, 73, 93, 102, 104, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 166, 167, 168, 170], "unit": [0, 10, 11, 49, 50, 52, 117, 118, 119, 121, 122, 127, 129, 130, 132, 133, 170], "relev": [0, 13], "comput": [0, 2, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 47, 51, 58, 65, 70, 76, 78, 102, 136, 139, 140, 141], "match": [0, 9, 11, 71, 72, 73, 117, 118, 119, 122, 127, 132, 133, 142, 143, 144, 145], "theoret": 0, "continu": [0, 139], "descript": [0, 163], "specifi": [0, 2, 7, 11, 12, 15, 18, 48, 49, 50, 51, 52, 55, 56, 67, 70, 75, 78, 79, 82, 100, 102, 115, 116, 120, 128, 134, 135, 137, 154, 155], "length": [0, 2, 10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133, 165, 166, 167, 168, 170], "given": [0, 7, 9, 10, 11, 12, 47, 48, 50, 51, 52, 55, 56, 67, 70, 76, 78, 79, 94, 95, 98, 99, 103, 123, 125, 126, 131, 139, 140, 141, 163, 166, 167, 170], "millisecond": [0, 53, 54, 58, 62, 63, 64, 65, 66, 67, 68, 69, 74, 77, 79, 102, 107, 117, 118, 119, 123, 127, 132, 133], "On": 0, "step": [0, 3, 10, 11, 17, 19, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 108, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133, 142, 143, 144, 145, 165, 166, 167, 168, 170], "amount": [0, 2, 51, 53, 54, 59, 64, 68, 86, 87, 141], "ha": [0, 9, 12, 48, 50, 58, 59, 70, 71, 72, 73, 78, 104, 105, 120, 123, 125, 131, 134, 168, 170], "elaps": 0, "subtract": [0, 11, 120], "from": [0, 2, 7, 9, 10, 11, 12, 15, 18, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 50, 51, 52, 55, 56, 58, 59, 60, 61, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 91, 92, 97, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 154, 155, 165, 168, 170], "remain": [0, 66, 74, 86, 87, 88, 98, 99, 107, 108, 121, 166], "inclus": [0, 57], "bound": [0, 2, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 57, 60, 61, 88, 110, 111, 112, 113, 114], "zero": [0, 7, 10, 11, 12, 47, 59, 71, 72, 73, 75, 116, 120, 141], "equal": [0, 2, 11, 55, 65, 76, 91, 92, 100, 102, 165], "consid": [0, 2, 10, 11, 12, 17, 46, 50, 117, 118, 119, 122, 123, 125, 127, 131, 132, 133, 141, 142, 143, 144, 145, 165, 167], "out": [0, 2, 10, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 61, 110, 111, 112, 113, 114], "its": [0, 2, 7, 9, 10, 11, 12, 48, 49, 55, 56, 58, 65, 70, 82, 91, 92, 120, 165, 168, 170], "therefor": [0, 7, 11], "evenli": [0, 11], "divis": 0, "simualt": [0, 53, 54, 59, 60, 61, 62, 64, 68, 69, 71, 72, 73, 77], "practic": [0, 2], "round": [0, 11], "up": [0, 11], "next": [0, 10, 11, 34, 35, 38, 42, 44, 53, 123], "integ": [0, 3, 10, 11], "multipl": [0, 2, 3, 11, 23, 26, 29, 47, 48, 50, 52, 59, 64, 99, 117, 118, 125, 130, 131, 132, 133], "size": [0, 7, 10, 11, 12, 15, 18, 50, 51, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 80, 86, 87, 88, 91, 92, 93, 94, 95, 100, 101, 102, 103, 110, 111, 113, 114, 115, 135, 154, 155], "affect": [0, 3, 11, 50, 143, 145, 163], "onli": [0, 2, 8, 9, 11, 12, 13, 48, 50, 52, 57, 59, 60, 66, 67, 70, 75, 82, 103, 120], "data": [0, 10, 11, 12, 15, 18, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 58, 59, 71, 72, 73, 104, 105, 106, 107, 109, 111, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 135, 136, 137, 154, 155], "pass": [0, 6, 8, 10, 11, 13, 48, 50, 52, 53, 54, 55, 58, 59, 64, 68, 70, 71, 72, 73, 78, 104, 105, 110, 111, 112, 113, 114, 120, 124, 125, 128, 134, 170], "through": [0, 3, 11, 58, 59, 71, 72, 73, 170], "itself": [0, 8, 13, 49, 55, 58], "special": 0, "must": [0, 6, 7, 8, 9, 11, 12, 13, 48, 49, 55, 58, 59, 61, 66, 67, 70, 74, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 100, 102, 122, 123, 125, 126, 128, 132, 133, 143, 145], "load": [0, 9], "principl": 0, "modul": [0, 6, 7, 8, 10, 11, 12, 13, 48, 49, 50, 51, 55, 56, 57, 58, 65, 66, 70, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 100, 101, 102, 103, 120, 124, 125, 126, 128, 131, 134, 147, 149, 151, 153, 163], "record": [0, 10, 11, 67, 102, 120, 123, 124, 125, 128, 130, 131, 134], "e": [0, 2, 6, 7, 9, 10, 16, 47, 48, 49, 70, 76, 93, 94, 95, 139, 140, 141, 168], "g": [0, 9, 47, 48, 49, 70], "synaps": [0, 56, 58, 59, 60, 61, 67, 70, 71, 72, 73, 78, 80, 110, 111, 112, 113, 114], "while": [0, 3, 53, 54, 62, 63, 64, 68, 69, 77, 98, 99, 125], "durat": [0, 10, 11, 102, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133], "chang": [0, 7, 9, 10, 11, 12, 48, 49, 50, 52, 58, 59, 71, 72, 121, 165, 166, 170], "underli": [0, 2, 11, 59, 70, 78, 120, 121, 123, 124, 125, 128, 134, 167, 168], "structur": [0, 11, 55], "note": [0, 9, 50, 165, 167, 170], "properti": [0, 2, 7, 8, 9, 10, 11, 12, 13, 15, 18, 48, 51, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 123, 125, 127, 130, 131, 132, 133, 135, 137, 139, 140, 141, 154, 155, 167], "setter": [0, 11, 12, 73, 104, 105, 110, 113], "modifi": [0, 6, 7, 8, 10, 11, 12, 15, 18, 70, 115, 120, 124, 125, 128, 134, 135, 137, 154, 155], "after": [0, 2, 7, 8, 10, 11, 12, 50, 52, 53, 54, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 77, 79, 81, 83, 84, 85, 86, 87, 88, 98, 120, 124, 125, 128, 134, 136, 166, 167, 168], "phenomenon": 2, "rate": [2, 33, 41, 50, 51, 52, 64, 65, 76, 88, 91, 92, 94, 95, 141, 165, 166, 167, 168], "quantiti": 2, "decreas": [2, 165, 166], "proport": [2, 51, 166, 167], "current": [2, 3, 10, 11, 12, 13, 17, 46, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 86, 89, 96, 97, 98, 99, 104, 106, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 125, 127, 129, 131, 132, 133, 142, 143, 144, 145, 163, 165, 167, 168], "valu": [2, 3, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 46, 47, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 93, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 166, 167, 168, 170], "It": [2, 11, 48, 50, 52, 66, 70, 168], "describ": [2, 163, 165], "differenti": 2, "equat": 2, "tau": [2, 32, 40, 121, 143], "frac": [2, 11, 32, 34, 35, 40, 42, 50, 51, 52, 53, 54, 59, 62, 64, 68, 69, 77, 86, 87, 91, 92, 97, 117, 118, 119, 121, 127, 132, 133, 139, 140, 141, 142, 143, 144, 145, 165, 166, 167, 168], "dn": 2, "dt": [2, 10, 11, 53, 54, 58, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 102, 117, 118, 119, 127, 130, 132, 133, 165, 166, 167, 168], "n": [2, 11, 50, 52, 65, 71, 72, 73, 89, 90, 91, 92, 139, 140, 141], "solut": [2, 165, 166, 167], "t": [2, 7, 10, 11, 17, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 68, 69, 70, 76, 77, 78, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 108, 117, 118, 119, 121, 127, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 170], "n_0": [2, 10, 47, 51, 65, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 110, 111, 113, 114], "0": [2, 10, 11, 12, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 76, 77, 86, 87, 88, 108, 116, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 155, 165, 168, 170], "oft": 2, "neural": [2, 48, 55, 70], "network": [2, 48, 70], "simul": [2, 3, 47, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 80, 86, 87, 88, 96, 97, 98, 99, 102, 117, 118, 119, 123, 127, 132, 133, 166, 167, 168, 170], "involv": 2, "discret": [2, 10, 11, 19, 117, 118, 119, 123, 127, 132, 133, 141, 168, 170], "timestep": [2, 53], "those": [2, 12, 48, 53, 55, 58, 78], "thei": [2, 93, 124, 165], "often": [2, 165, 168], "appear": 2, "form": [2, 6, 8, 9], "exp": [2, 32, 33, 40, 41, 50, 51, 52, 53, 54, 62, 64, 69, 87, 96, 117, 118, 119, 121, 127, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "left": [2, 11, 32, 33, 34, 35, 40, 41, 42, 50, 51, 52, 53, 54, 59, 62, 64, 68, 69, 73, 77, 86, 87, 88, 96, 97, 99, 117, 118, 119, 120, 121, 127, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "right": [2, 11, 32, 33, 34, 35, 40, 41, 42, 50, 51, 52, 53, 54, 59, 62, 64, 68, 69, 73, 77, 86, 87, 88, 96, 97, 99, 117, 118, 119, 120, 121, 127, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "wa": [2, 7, 10, 12, 19, 22, 48, 53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 120], "solv": 2, "analyt": 2, "approxim": [2, 54, 62, 68, 77, 86, 88, 93, 97, 165, 166, 168], "via": [2, 7, 48, 49, 70], "euler": [2, 54, 62, 68, 77, 86, 88, 97], "method": [2, 6, 7, 9, 10, 14, 48, 49, 50, 52, 54, 56, 58, 59, 62, 65, 68, 71, 72, 73, 77, 82, 86, 88, 91, 92, 93, 97, 123, 125, 134], "both": [2, 7, 19, 50, 120], "repres": [2, 7, 58, 61, 67, 74, 79, 101, 103, 168], "select": [2, 10, 11, 43, 44, 45, 50, 52, 67, 79, 110, 111, 112, 113, 114, 123], "model": [2, 3, 166], "term": [2, 50, 52, 88, 165, 167], "long": [2, 12, 165], "live": [2, 7, 11, 12], "correspond": [2, 9, 11, 12, 48, 53, 54, 55, 62, 63, 64, 66, 68, 69, 70, 74, 77, 82, 86, 87, 88, 98, 99, 108, 110, 113, 139, 140], "under": [2, 168], "relat": [2, 103, 163, 168], "ne": 2, "k": [2, 51, 86, 87, 88, 89, 90, 141, 143, 147, 149, 151, 153], "That": 2, "repeat": 2, "applic": [2, 117, 118, 119, 121, 122, 127, 129, 132, 133], "1": [2, 7, 10, 11, 12, 17, 23, 25, 26, 28, 29, 31, 46, 47, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 76, 77, 88, 89, 90, 91, 92, 93, 108, 116, 121, 135, 139, 140, 141, 163, 165, 166, 168, 170], "start": [2, 12, 19, 168], "To": [2, 7, 10, 11, 13, 15, 18, 65, 91, 92, 115, 135, 154, 155, 166, 167], "outsid": [2, 123], "notion": 2, "life": 2, "we": [2, 9], "ln": 2, "b": [2, 46, 50, 51, 58, 59, 65, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 110, 111, 113, 114, 120, 134], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 141], "sometim": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31], "lambda": [2, 33, 41, 51, 141, 167], "context": [2, 165, 166], "frequent": 2, "aris": 2, "care": [2, 82], "histori": [2, 10, 11, 50, 52, 67, 130], "activ": [2, 7], "formal": 2, "sum": [2, 50, 51, 52, 53, 54, 55, 64, 68, 104, 105], "previou": [2, 12, 34, 35, 39, 40, 41, 42, 45, 51, 60, 61, 110, 111, 113, 114, 123, 129], "occur": [2, 7, 10, 11, 12, 13, 50, 51, 52, 57, 60, 61, 75, 110, 111, 112, 113, 114, 141, 166, 167, 168, 170], "howev": [2, 48, 50, 134], "purpos": [2, 50, 132, 133], "comparison": 2, "grow": 2, "complex": [2, 16, 17, 18, 46, 75, 116, 117, 118, 119, 127, 132, 133, 137, 138, 142, 143, 144, 145], "quadrat": [2, 68, 77, 97, 163], "respect": [2, 13, 50, 52, 55, 59, 70, 71, 72, 73, 83, 125], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 47, 51, 55, 70, 78, 117, 118, 143, 145, 167], "than": [2, 11, 47, 48, 51, 55, 70, 78, 91, 92, 93, 117, 118, 143, 145, 167, 168], "everi": [2, 12, 48, 50, 52, 65, 70, 91, 92], "prior": [2, 10, 11, 12, 13, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 66, 74, 102, 108, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133, 142, 143, 165], "leav": [2, 167], "tau_x": [2, 117, 118, 119, 127, 132, 133, 142, 143, 144, 145], "dx": 2, "x": [2, 16, 17, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 68, 71, 72, 73, 117, 118, 119, 121, 127, 132, 133, 138, 139, 140, 142, 143, 144, 145, 170], "sum_f": 2, "f": [2, 34, 35, 50, 52, 59, 65, 76, 91, 92, 93, 108, 165], "amplitud": [2, 117, 118, 119, 127, 132, 133, 142, 143, 144, 145], "set": [2, 7, 9, 10, 11, 12, 15, 18, 48, 50, 52, 53, 54, 58, 59, 64, 65, 68, 70, 71, 72, 81, 82, 86, 87, 88, 91, 92, 100, 102, 115, 118, 127, 130, 133, 135, 142, 144, 154, 155, 165, 167, 168], "construct": [2, 15, 18, 60, 61, 67, 70, 79, 80, 115, 120, 124, 125, 126, 128, 134, 135, 154, 155], "evalu": [2, 7, 8, 13, 48, 53, 54, 64, 68, 124], "otherwis": [2, 9, 11, 12, 36, 43, 58, 60, 61, 65, 76, 81, 108, 128, 143], "interpret": 2, "follow": [2, 3, 6, 8, 11, 12, 58, 76, 94, 95, 121, 139, 140, 167], "whenev": 2, "add": [2, 9, 11, 12, 48, 49, 50, 52, 55, 70, 78, 81, 100, 102, 117, 119, 130, 132, 142, 143, 145], "j": [2, 117, 118, 132, 133, 143, 145], "true": [2, 6, 8, 10, 11, 12, 13, 48, 50, 51, 52, 53, 54, 57, 58, 62, 63, 64, 65, 68, 69, 70, 75, 76, 77, 81, 91, 92, 120, 124, 125, 128, 134, 141, 165], "event": [2, 122, 141], "sum_j": 2, "text": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 43, 47, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 76, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 139, 140, 141, 143, 165, 166, 167, 168, 170], "m": [2, 47, 50, 52, 53, 54, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 76, 77, 80, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 110, 111, 112, 113, 114, 166, 167, 168, 170], "most": [2, 10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 55, 58, 65, 91, 92, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 165, 166], "recent": [2, 10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 58, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 165], "runtim": 2, "cdot": [2, 10, 11, 47, 51, 59, 65, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 110, 111, 113, 114, 123, 165], "iverson": [2, 165], "bracket": [2, 165], "inner": [2, 59, 71, 72, 73, 165], "statement": [2, 165], "fals": [2, 7, 10, 11, 12, 13, 47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 65, 70, 71, 72, 73, 75, 76, 78, 83, 84, 85, 120, 123, 124, 128, 134, 165], "begin": [2, 17, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 46, 50, 52, 53, 54, 59, 60, 61, 64, 68, 108, 118, 121, 127, 133, 143, 144, 145, 165, 166, 167, 168, 170], "neq": [2, 52, 170], "end": [2, 12, 17, 19, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 46, 47, 50, 52, 53, 54, 59, 60, 61, 64, 68, 108, 118, 121, 127, 133, 134, 143, 144, 145, 165, 166, 167, 168, 170], "further": [2, 6, 8], "new": [2, 7, 9, 10, 11, 12, 48, 51, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 100, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 118, 119, 123, 127, 130, 132, 133, 142, 143, 144, 145], "observ": [2, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 56, 60, 61, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 131, 132, 133, 134, 139, 140, 142, 143, 144, 145], "h": [2, 59, 117, 118, 119, 127, 132, 133, 142, 143, 144, 145], "meet": 2, "criterion": [2, 117, 118, 122, 132, 133], "ad": [2, 7, 10, 12, 48, 55, 59, 65, 70, 75, 78, 82, 83, 84, 85, 91, 92, 102, 116, 123], "so": [2, 9, 11, 48, 50, 66, 121, 170], "mid": [2, 139, 140, 141], "f_a": 2, "tradition": 2, "connect": [2, 55, 56, 59, 70, 71, 72, 73, 78, 79, 80, 83, 84, 85, 165], "especi": [2, 55], "learn": [2, 50, 51, 52, 53, 54, 58, 59, 64, 68, 71, 72, 73], "contain": [2, 9, 11, 12, 22, 46, 98, 99, 108, 110, 113], "depress": [2, 23, 24, 25, 26, 27, 28, 50, 52, 165, 166], "compon": [2, 143, 145, 166, 167], "techniqu": 2, "limit": [2, 9, 11, 20, 21, 23, 24, 25, 29, 30, 31, 50, 52, 53, 54, 60, 61, 64, 68, 104, 105, 110, 111, 112, 113, 114], "rang": [2, 10, 11, 57, 123], "align": [2, 10, 11, 17, 32, 33, 34, 35, 36, 37, 38, 39, 46, 50, 53, 54, 59, 64, 68, 121, 165, 166, 167, 168], "a_": [2, 165], "v": 2, "v_": [2, 53, 54, 62, 64, 68, 69, 77, 86, 88, 96, 97, 98, 99, 166, 167, 168], "max": [2, 20, 26, 27, 28, 29, 30, 31, 50, 52, 53, 54, 55, 57, 64, 68, 88, 104, 105, 136, 166], "mu_": [2, 24, 27, 30], "eta_": [2, 50, 52], "min": [2, 20, 23, 24, 25, 26, 27, 28, 55, 57, 136], "adjust": [2, 34, 35, 165], "magnitud": [2, 50, 165, 166], "ltp": [2, 50, 52, 165], "ltd": [2, 50, 52, 165], "being": [2, 9, 10, 12, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 51, 53, 54, 55, 56, 59, 60, 61, 62, 64, 65, 68, 69, 70, 76, 77, 78, 91, 92, 93, 94, 95, 101, 103, 120, 124, 125, 128, 134], "upper": [2, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 57], "lower": [2, 20, 21, 23, 24, 25, 26, 27, 28, 57, 88, 166], "origin": [2, 50, 52, 53, 54, 64, 68, 104, 105, 123], "order": [2, 7, 9, 10, 49, 55, 75, 116, 123], "penal": 2, "penalti": 2, "control": [2, 12, 50, 52, 64, 68, 77, 97, 99, 168], "refer": [2, 6, 7, 9, 12, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 50, 52, 53, 54, 59, 60, 61, 62, 63, 64, 68, 69, 77, 82, 86, 87, 88, 125, 163], "power": [2, 23, 24, 26, 27, 29, 30], "law": 2, "theta": [2, 25, 28, 31, 53, 64, 98, 99, 166, 167, 168], "nonneg": [2, 91, 92, 93, 94, 95], "filter": [2, 59, 120, 124, 128, 134], "ani": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 48, 49, 50, 52, 56, 58, 61, 70, 73, 78, 83, 84, 110, 111, 112, 113, 114, 120, 123, 124, 125, 128, 134, 167, 168, 170], "would": [2, 7, 10, 12, 13], "move": [2, 11, 49, 121], "beyond": 2, "hold": [2, 11], "int_": 2, "infti": [2, 53, 64, 90, 166, 167, 168], "neg": [2, 7, 11, 20, 26, 27, 28, 118, 133, 145], "argument": [2, 6, 8, 11, 13, 48, 50, 51, 52, 55, 56, 58, 59, 66, 70, 71, 72, 73, 78, 110, 111, 112, 113, 114, 117, 118, 120, 123, 125, 131, 134, 139, 140, 141], "posit": [2, 7, 20, 47, 56, 70, 123], "geq": [2, 25, 28, 31, 98, 99], "deriv": [2, 12, 110, 113, 139, 168], "d": [2, 10, 11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111, 113, 114, 123, 166, 167], "And": [2, 59], "integr": [2, 53, 54, 62, 63, 64, 66, 67, 69, 74, 77, 79, 96, 97, 143, 145, 163, 170], "have": [3, 7, 11, 12, 47, 48, 56, 59, 70, 71, 72, 100, 102, 122, 123, 132, 133, 143, 145], "two": [3, 7, 11, 12, 19, 22, 50, 55, 58, 59, 166, 168], "kind": 3, "absolut": [3, 53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 96, 97, 98, 99, 108, 119, 127, 142, 144], "arp": [3, 108], "rel": [3, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 56, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 139, 140], "rrp": 3, "cannot": [3, 7, 9, 10, 11, 12, 56, 166], "presynapt": [3, 50, 52, 53, 54, 60, 61, 62, 63, 64, 68, 69, 77, 89, 96, 97, 98, 99, 165, 166, 167, 170], "doe": [3, 7, 9, 10, 11, 48, 55, 70, 78, 103, 110, 113, 141, 170], "depolar": [3, 168], "repolar": 3, "hyperpolar": 3, "mean": [3, 50, 52, 53, 54, 55, 64, 104, 105, 120, 124, 125, 128, 134, 139, 140, 141], "difficult": 3, "fire": [3, 53, 54, 62, 63, 64, 69, 77, 90, 163, 165, 166], "imposs": 3, "time": [3, 7, 10, 11, 13, 17, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 144, 145, 163, 166, 167, 168, 170], "voltag": [3, 53, 54, 56, 62, 63, 64, 66, 68, 69, 74, 77, 86, 87, 88, 90, 96, 97, 98, 99, 109, 163, 167, 168], "reset": [3, 10, 11, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 88, 98, 99, 130, 166, 167, 168], "determin": [3, 14, 15, 18, 48, 59, 71, 72, 73, 94, 115, 119, 127, 135, 137, 154, 155], "strongli": 3, "constant": [3, 32, 33, 40, 41, 50, 52, 53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 96, 97, 117, 118, 119, 121, 127, 132, 133, 165, 166, 167, 168], "wherea": [3, 7, 10, 48], "other": [3, 9, 51, 55, 57, 70, 75, 78, 120, 124, 128, 134, 167], "parameter": [3, 32, 33, 40, 41, 76, 94, 95, 165], "class": [6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153], "prehook": [6, 8, 13, 120, 124, 125, 128, 134], "str": [6, 7, 8, 9, 10, 11, 12, 48, 49, 50, 52, 55, 56, 57, 58, 70, 74, 75, 78, 79, 81, 82, 100, 102, 108, 110, 111, 112, 113, 114, 120, 125, 126, 130, 134, 139, 140, 141], "none": [6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 26, 27, 28, 34, 35, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 100, 102, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 154, 155], "posthook": [6, 8, 120, 124, 125, 128, 134], "prehook_kwarg": [6, 8, 125], "dict": [6, 7, 8, 9, 11, 12, 49, 55, 56, 70, 78, 110, 111, 112, 113, 114, 125, 139, 140, 141], "posthook_kwarg": [6, 8, 125], "train_upd": [6, 8, 13, 57, 75, 120, 124, 125, 128, 134], "bool": [6, 7, 8, 10, 11, 12, 13, 15, 18, 47, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 91, 92, 110, 112, 113, 114, 115, 119, 120, 122, 123, 124, 125, 127, 128, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 154, 155], "eval_upd": [6, 8, 13, 57, 75, 120, 124, 125, 128, 134], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "hook": [6, 13, 48, 57, 70, 75, 120, 125, 134], "provid": [6, 8, 9, 11, 55, 78, 103, 136], "forward": [6, 8, 11, 13, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 120, 123, 124, 125, 128, 131, 134], "subclass": [6, 13, 48, 49, 50, 58, 66, 67, 70, 74, 79, 81, 123, 125], "manag": [6, 8, 67, 82, 98, 99], "safe": [6, 8, 70], "garbag": 6, "collector": 6, "without": [6, 10, 11, 49, 66, 125, 131, 143, 145, 166, 167, 168], "cyclic": 6, "option": [6, 7, 8, 10, 11, 12, 13, 15, 18, 34, 35, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 98, 103, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 154, 155], "name": [6, 7, 9, 10, 11, 12, 48, 49, 50, 52, 55, 56, 57, 70, 75, 78, 82, 100, 102, 125, 130, 134, 139, 140, 141], "execut": [6, 13, 125], "default": [6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 34, 35, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 104, 105, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 154, 155], "keyword": [6, 8, 11, 48, 50, 52, 55, 56, 58, 59, 70, 71, 72, 73, 78, 110, 111, 112, 113, 114, 125], "register_forward_pre_hook": [6, 8, 125], "register_forward_hook": [6, 8, 125], "run": [6, 8, 13, 53, 54, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 75, 77, 79, 120], "train": [6, 8, 13, 47, 48, 49, 50, 53, 54, 56, 57, 64, 65, 68, 75, 76, 91, 92, 93, 94, 95, 120, 124, 125, 128, 134, 163], "mode": [6, 8, 13, 48, 50, 52, 53, 54, 57, 60, 61, 64, 68, 74, 75, 120, 124, 125, 128, 134], "eval": [6, 8, 13, 57, 75, 120, 124, 125, 128, 134], "rais": [6, 7, 8, 9, 10, 11, 12, 13, 16, 48, 49, 55, 56, 58, 66, 67, 70, 74, 78, 79, 81, 123, 125, 166], "runtimeerror": [6, 7, 8, 10, 11, 12, 48, 55, 56, 70, 78, 81, 125], "least": [6, 7, 8, 12, 55], "one": [6, 8, 11, 48, 50, 52, 53, 54, 55, 64, 68, 70, 72, 73, 78, 104, 105, 148, 149, 150, 151, 152, 153, 166], "If": [6, 7, 8, 10, 11, 12, 14, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 62, 64, 65, 68, 69, 70, 71, 72, 73, 77, 78, 81, 83, 86, 87, 88, 91, 92, 104, 105, 120, 124, 125, 126, 128, 131], "signatur": [6, 8, 60, 61, 67, 79, 120, 124, 125, 128, 134], "arg": [6, 8, 9, 19, 20, 21, 22, 55, 67, 78, 79, 80, 123, 125, 126, 131, 146, 147, 148, 149, 150, 151, 152, 153], "Or": [6, 8], "with_kwarg": [6, 8], "kwarg": [6, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 120, 123, 125, 126, 131, 146, 147, 148, 149, 150, 151, 152, 153], "see": [6, 8, 50, 52, 82, 115, 125, 154, 167, 168], "constraint": [7, 10, 11, 12, 100, 102], "tupl": [7, 11, 12, 14, 15, 18, 19, 32, 33, 34, 35, 36, 37, 38, 39, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 82, 98, 99, 101, 103, 104, 105, 115, 116, 120, 124, 128, 134, 135, 136, 139, 140, 154, 155], "int": [7, 10, 11, 12, 15, 16, 17, 18, 46, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 82, 91, 92, 94, 95, 100, 101, 103, 104, 105, 115, 116, 117, 118, 119, 127, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 154, 155], "support": [7, 10, 59, 60, 61, 67, 71, 72, 73, 79, 80, 102, 165], "dimension": [7, 12, 59], "constrain": [7, 10, 11, 12, 100, 102], "buffer": [7, 9, 10, 11, 12, 66, 67, 100], "dim": [7, 10, 11, 12, 67, 75, 80, 103, 116, 136], "attribut": [7, 9, 10, 11, 12, 48, 51, 56, 57, 70, 75, 81, 82, 100, 102, 108, 110, 113, 120, 126, 130, 134, 168], "valueerror": [7, 10, 11, 12, 48, 55, 70, 78], "persist": [7, 11, 12, 66], "dictionari": [7, 9, 10, 11, 12, 49, 55, 70, 78], "themselv": 7, "uniqu": [7, 11, 12, 48, 55, 56], "element": [7, 10, 11, 12, 14, 50, 51, 55, 59, 70, 71, 72, 73, 75, 78, 91, 92, 93, 94, 95, 103, 116, 117, 118, 119, 122, 127, 132, 133, 142, 143, 144, 145], "For": [7, 11, 12, 50, 52, 53, 54, 60, 61, 62, 63, 64, 68, 69, 70, 77, 86, 87, 88, 89, 90, 117, 118, 119, 120, 121, 127, 132, 133, 134, 165], "place": [7, 11, 12, 49, 70, 100], "tensor": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155], "three": [7, 55], "sinc": [7, 22, 65, 91, 92, 122], "scalar": [7, 10, 11, 14, 15, 18, 115, 135, 139, 140, 141, 154, 155], "ignor": [7, 8, 11, 12, 13, 120, 124, 128, 134], "compat": [7, 9, 10, 11, 12], "test": [7, 11, 12, 48, 119, 120, 122, 124, 127, 128, 132, 133, 134, 139, 140, 141, 143, 145], "torch": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "type": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "classmethod": [7, 11, 12, 60, 61, 67, 79, 120, 124, 125, 128, 134, 139, 140, 141], "compatible_": 7, "compatible_lik": 7, "iter": [7, 48, 55, 65, 70, 76, 92, 95], "creat": [7, 10, 11, 12, 48, 55, 59, 70, 71, 72, 78, 82, 83, 84, 85], "shape": [7, 12, 15, 18, 19, 22, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 80, 101, 103, 104, 105, 115, 135, 137, 154, 155], "like": [7, 9, 10, 11, 12, 15, 18, 19, 22, 50, 52, 53, 54, 58, 59, 64, 67, 68, 71, 72, 73, 79, 104, 105, 115, 135, 137, 154, 155, 163], "nn": [7, 9, 11, 12, 13, 48, 49, 57, 75], "_description_": [7, 10, 93], "compatible_like_": 7, "suffici": 7, "made": [7, 9, 11, 12, 82, 123], "sort": 7, "result": [7, 10, 11, 19, 22, 51, 55, 58, 59, 78, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133, 139, 140, 141], "first": [7, 10, 11, 19, 47, 55, 60, 61, 70, 78, 89, 90, 91, 93, 94, 167], "last": [7, 10, 47, 50, 52, 56, 58, 66, 74, 86, 87, 88, 108, 122, 123, 125, 170], "increas": [7, 12, 53, 54, 62, 64, 68, 77, 86, 87, 97, 165, 166, 168], "deregister_constrain": [7, 10], "deregist": [7, 8, 10, 48], "isn": [7, 10], "call": [7, 8, 9, 10, 11, 12, 13, 48, 49, 50, 52, 56, 57, 58, 66, 70, 75, 78, 83, 84, 85, 120, 123, 124, 125, 128, 131, 134, 141, 165, 167, 168], "noth": [7, 10, 110, 113], "fulli": [7, 9, 10, 57, 75], "qualifi": [7, 9, 10, 57, 75], "string": [7, 9, 10, 55, 57, 75], "regist": [7, 8, 9, 10, 11, 12, 13, 48, 49, 57, 58, 59, 70, 71, 72, 75, 78, 83, 84, 85, 100, 102, 120, 124, 125, 126, 128, 134], "number": [7, 10, 11, 12, 16, 47, 48, 51, 55, 58, 59, 65, 71, 72, 73, 74, 76, 82, 86, 87, 88, 91, 92, 93, 94, 95, 103, 110, 111, 113, 114, 115, 123, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 154], "requir": [7, 9, 11, 12, 15, 18, 47, 49, 50, 52, 56, 59, 83, 84, 85, 115, 123, 135, 137, 143, 145, 154, 155], "dims_": 7, "extra_repr": [7, 58, 74, 79], "extra": [7, 9, 48, 58, 74, 79], "represent": [7, 70], "print": 7, "custom": [7, 50, 52, 53, 54, 55, 64, 68, 104, 105], "you": [7, 9], "re": 7, "implement": [7, 9, 13, 48, 49, 50, 53, 54, 55, 58, 62, 66, 67, 68, 70, 74, 77, 78, 79, 81, 86, 88, 97, 98, 99, 123, 125, 163, 166, 167], "your": [7, 9], "own": [7, 12, 48, 49, 56], "singl": [7, 12, 13, 22, 49, 55, 78, 128], "line": 7, "multi": 7, "accept": [7, 56], "liveconstrain": [7, 10], "enforc": [7, 9], "assign": [7, 9, 11, 12, 51, 73, 104, 105], "reconstrain": [7, 10, 11, 12], "exist": [7, 9, 10, 12, 47, 48, 51, 53, 55, 70, 78, 81, 82, 123, 125, 165], "ahead": [7, 10], "realloc": [7, 10], "remov": [7, 10, 11, 12, 48], "longer": [7, 10, 11, 125], "valid": [7, 9, 10, 11, 12, 55, 58, 70, 78, 82, 125, 139, 140, 141], "self": [7, 10, 11, 48, 56, 130], "register_constrain": [7, 10], "invalid": [7, 9, 10, 12, 50, 52, 82], "attributeerror": [7, 9, 10, 48, 55, 70, 78], "get_paramet": [7, 10], "point": [7, 47, 65, 91, 92, 141, 168], "callabl": [8, 14, 19, 20, 21, 22, 34, 35, 50, 52, 53, 54, 55, 64, 68, 82, 104, 105, 110, 113, 120, 124, 128, 134, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153], "removablehandl": 8, "befor": [8, 9, 10, 11, 12, 34, 35, 50, 52, 55, 57, 59, 73, 75, 78, 110, 111, 113, 114, 120, 123, 124, 128, 134, 136, 166, 168], "still": [8, 11, 12, 48, 59, 65, 82, 91, 92, 119, 127, 142, 144], "evalexec": 8, "pytorch": [8, 9, 11, 50, 52, 53, 54, 64, 68, 104, 105, 141], "typeerror": [8, 9], "instanc": [8, 9, 12, 48, 58, 81, 120, 134, 165], "warn": 8, "runtimewarn": 8, "alreadi": [8, 11, 12, 48, 55, 70, 78, 128, 134], "registr": [8, 70], "trainexec": 8, "extens": 9, "similar": [9, 50, 52, 53, 54, 64, 68, 104, 105, 143, 145], "regular": 9, "enabl": 9, "simpl": [9, 17, 89, 90], "export": 9, "exact": [9, 10, 11, 122], "kei": [9, 11, 12, 70], "insert": [9, 10, 11, 55], "addition": [9, 166], "check": [9, 12, 143, 145], "__setattr__": 9, "__init__": 9, "parent": [9, 82], "child": 9, "constructor": [9, 48, 50, 52, 59, 60, 61, 67, 71, 72, 73, 79, 80, 83, 84, 85, 120, 124, 125, 126, 128, 134], "get_extra": 9, "target": [9, 10, 70, 119, 120, 124, 125, 126, 127, 128, 134, 139, 140, 142, 144], "throw": 9, "error": [9, 55, 70, 78], "similarli": 9, "specif": [9, 58, 81, 139, 168], "get_submodul": 9, "look": 9, "referenc": [9, 56, 125], "path": [9, 48, 126], "termin": 9, "resolv": [9, 48], "someth": 9, "get_extra_st": 9, "state_dict": 9, "set_extra_st": 9, "store": [9, 10, 11, 50, 51, 52, 67, 73, 102, 103, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134], "build": 9, "picklabl": 9, "ensur": [9, 12], "work": [9, 66, 67, 128, 163], "serial": 9, "backward": [9, 11], "guarante": [9, 48], "break": 9, "pickl": 9, "register_extra": 9, "manner": [9, 123], "register_buff": 9, "except": [9, 11, 13, 55, 57, 75, 117, 118, 143, 145, 165, 167], "access": [9, 11, 70, 78], "keyerror": 9, "empti": [9, 11, 12, 124], "dot": [9, 48, 56, 120, 134], "notat": [9, 120, 134], "python": [9, 55], "identifi": [9, 55, 56], "load_state_dict": 9, "within": [9, 10, 11], "step_tim": [10, 11, 19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 76, 77, 80, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133, 168], "float": [10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "dimensionalmodul": 10, "index": [10, 11, 58, 123], "restor": 10, "pointer": [10, 11], "slice": [10, 12, 65, 76, 92, 95], "overwrit": [10, 11], "preserv": [10, 11, 12, 53, 54, 64, 68, 123], "latest_first": 10, "offset": [10, 11, 56, 58], "full": [10, 137], "nativ": 10, "storag": [10, 11, 123], "latest": [10, 11, 17, 46, 118, 125, 127, 131, 133, 142, 143, 144, 145], "roll": 10, "By": [10, 120], "zeroth": 10, "window": 10, "locat": [10, 11, 139, 140], "oper": [10, 11, 12, 59, 120, 123], "overwritten": [10, 11], "retriev": [10, 11, 48, 110, 111, 113, 114], "increment": 10, "write": [10, 11], "recordsz": [10, 11], "interp": [10, 11], "interpol": [10, 11, 40, 41, 42, 43, 44, 45, 60, 61, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "toler": [10, 11, 110, 111, 112, 113, 114, 119, 123, 127, 142, 143, 144, 145], "1e": [10, 11, 75, 116, 123], "06": [10, 11], "ever": [10, 11], "attempt": [10, 11, 104, 105], "regardless": [10, 11, 12, 13, 48], "maximum": [10, 11, 20, 21, 47, 50, 51, 52, 59, 60, 61, 65, 67, 71, 72, 73, 76, 79, 80, 93, 102, 110, 111, 112, 113, 114, 123, 136], "co": [10, 11, 50, 52, 60, 61, 110, 111, 112, 113, 114], "6": [10, 11, 165, 166, 168], "ldot": [10, 11, 47, 51, 65, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 123], "mimic": 10, "gather": [10, 51], "thrown": 10, "avoid": [10, 78, 82], "clamp": [10, 48, 70, 93], "owner": [11, 12], "persist_data": [11, 12], "persist_constraint": [11, 12], "persist_tempor": 11, "strict": [11, 12], "shapedtensor": [11, 100], "read": 11, "peek": [11, 123, 125, 131], "pop": 11, "readrang": 11, "push": [11, 123, 131], "writerang": 11, "belong": [11, 12], "tempor": [11, 123], "linkedattribut": [11, 12], "alia": [11, 12, 56, 63], "recordtensorattribut": 11, "oldest": [11, 123], "uniniti": [11, 15], "depend": [11, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 49, 50, 52, 53, 58, 66, 67, 87, 88, 90, 100, 101, 102, 128, 163, 167], "associ": [11, 12, 48, 49, 65, 70, 76, 81], "shift": 11, "transpar": 11, "equival": [11, 12, 23, 26, 29, 117, 118, 123, 165, 167], "attr": [11, 12, 48, 56, 57, 58, 75, 100, 102, 120, 126, 130, 134], "decr": 11, "po": [11, 20, 26, 27, 28], "deiniti": 11, "use_uniniti": 11, "uninitializedbuff": [11, 12], "uninitializedparamet": [11, 12], "devic": [11, 15, 18, 49, 115, 135, 137, 154, 155], "gradient": [11, 15, 18, 83, 84, 85, 115, 135, 137, 154, 155], "initi": [11, 12, 50, 52, 56, 59, 65, 71, 72, 73, 76, 82, 83, 84, 85, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 131], "reassign": [11, 70], "uninit": 11, "newest": 11, "entir": 11, "logic": [11, 55, 70, 78, 98, 99, 143, 145], "divid": 11, "alwai": 11, "although": [11, 82, 141, 165, 168], "larger": 11, "incr": 11, "dtype": [11, 15, 18, 115, 122, 132, 133, 135, 137, 139, 140, 141, 154, 155], "fill": [11, 12, 18, 115, 123, 135, 137, 154, 155], "exclud": [11, 51, 58, 59, 67, 71, 72, 73, 80, 101, 103], "overrid": [11, 15, 18, 48, 50, 51, 52, 115, 135, 137, 154, 155], "tyoe": 11, "ob": [11, 17, 46, 117, 118, 119, 121, 122, 127, 129, 132, 133], "extrap": 11, "extrapol": [11, 32, 33, 34, 35, 36, 37, 38, 39], "inplac": 11, "extrap_kwarg": 11, "written": [11, 165], "cast": 11, "back": [11, 167], "neighbor": [11, 32, 33, 34, 35, 36, 37, 38, 39, 165], "nearest": [11, 19, 22, 43, 50, 52, 60, 61, 118, 127, 133], "no_grad": 11, "plu": 11, "s_0": [11, 17, 46, 121, 123], "scatter": 11, "riski": 11, "onc": [11, 48], "unsupport": [11, 12], "getter": 11, "delet": [11, 12, 48, 50, 55, 58, 70, 78, 81, 82], "indic": [11, 12], "decrement": 11, "unalt": [11, 12], "advanc": 11, "code": 11, "put": [11, 48], "promot": 11, "sequenti": 11, "interv": [11, 47, 59, 65, 71, 72, 73, 76, 91, 92, 94, 95], "l": [11, 58], "edit": [11, 12], "shapetensor": 11, "account": 11, "them": [11, 51, 55, 108, 120, 124, 125, 128, 134, 163], "newli": [11, 12, 58, 80, 126], "lceil": 11, "delta": [11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 53, 54, 60, 61, 62, 64, 65, 68, 69, 76, 77, 86, 87, 88, 91, 92, 93, 96, 97, 117, 118, 119, 121, 127, 132, 133, 142, 143, 144, 145, 163, 165, 166, 167, 168], "rceil": 11, "interp_kwarg": [11, 111, 114], "previous": [11, 13, 57, 75], "distinct": [11, 123], "prevent": [11, 12, 13], "act": [11, 13], "etc": [11, 47, 70], "possibl": [11, 48, 51, 123], "caus": 11, "convert": [11, 14], "tot": 11, "hat": 11, "conveni": [12, 78], "neither": [12, 70], "nor": [12, 70], "final": [12, 47, 55, 102, 123], "count": [12, 74, 103, 119, 127, 141, 142, 144], "goe": [12, 166], "shapedtensorattribut": 12, "satisfi": 12, "_": [12, 139, 140, 141, 165], "_data": 12, "_constraint": 12, "alter": [12, 48, 49, 59, 71, 72, 103, 130], "resiz": 12, "cut": 12, "off": [12, 48, 108], "toward": [12, 68, 77, 97, 167, 168], "unconstrain": 12, "static": 12, "preserve_tail": 12, "version": 12, "built": 12, "reshap": [12, 55, 58, 59, 66, 67, 71, 72, 73], "tail": 12, "kept": 12, "head": 12, "append": 12, "assum": [12, 32, 33, 50, 52, 55, 58, 66, 78, 104, 105, 120], "higher": 12, "expand": [12, 50, 59], "strictli": [12, 48, 141], "met": 12, "as_prehook": [13, 57, 75, 134], "prepend": [13, 57, 75, 120, 124, 128, 134], "always_cal": [13, 57, 75], "contextualhook": [13, 125], "abc": [13, 49, 58, 70, 74, 79, 81, 123, 130, 131], "interact": 13, "even": [13, 48, 50, 52, 55, 57, 70, 75, 78, 120, 134], "trigger": [13, 166, 167, 168], "here": [13, 19, 22, 48, 163], "ignore_mod": 13, "unregist": 13, "normal": [13, 51, 57, 136, 139, 170], "manual": [13, 78], "configur": 13, "abstract": [13, 49, 58, 70, 74, 79, 81, 123, 130, 131], "notimplementederror": [13, 48, 49, 58, 66, 67, 70, 74, 79, 123, 125], "convers": 14, "non": [14, 139, 140, 141], "leftmost": 14, "unspecifi": [14, 55], "layout": [15, 18, 115, 135, 137, 154, 155], "requires_grad": [15, 18, 83, 84, 85, 115, 135, 137, 154, 155], "ndarrai": [16, 138], "agnost": [16, 138], "exponenti": [16, 17, 32, 33, 40, 41, 46, 50, 52, 53, 54, 62, 64, 65, 68, 69, 77, 86, 87, 88, 91, 92, 96, 97, 117, 118, 119, 121, 127, 132, 133, 142, 143, 144, 145, 163, 166], "y": [16, 71, 72, 73, 138, 167], "numpi": [16, 138], "level": [17, 46], "alpha": [17, 46, 121], "smooth": [17, 46, 121], "x_0": [17, 46, 121], "s_": [17, 46, 121], "x_": [17, 46, 50, 52, 121, 143, 165], "s_t": [17, 46, 121], "factor": [17, 46, 121, 168], "revis": [17, 46], "protocol": [19, 20, 21, 22, 80, 126, 146, 147, 148, 149, 150, 151, 152, 153], "prev_data": [19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "next_data": [19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "sample_at": [19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "total": [19, 22, 51, 166, 167, 168, 170], "2": [19, 36, 59, 64, 139, 140, 141, 163, 168], "second": [19, 55, 70, 78, 117, 118, 167], "subsequ": [19, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "param": [20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 81, 82], "part": 20, "scale": [20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 50, 51, 52, 65, 75, 76, 94, 95, 116, 117, 118, 132, 133, 139, 140, 143, 145, 165], "partial": [21, 48, 59, 60, 61, 67, 71, 72, 73, 79, 120, 124, 125, 128, 134], "soft": [23, 24, 26, 27, 29, 30], "expon": [23, 24, 26, 27, 29, 30], "u_": [23, 24, 25, 26, 27, 28, 29, 30, 31], "p": [23, 24, 25, 26, 27, 28, 29, 30, 31, 75, 116, 139, 140, 141, 165], "p_": [23, 24, 25, 26, 27, 28, 29, 30, 31], "sharp": [25, 28, 31, 54, 62, 168], "hard": [25, 28, 31], "u": [26, 27, 28], "upper_pow": 27, "lower_pow": 27, "time_const": [32, 40, 62, 63, 69, 77, 86, 87, 96, 97, 117, 118, 119, 127, 132, 133], "decai": [32, 33, 40, 41, 50, 51, 52, 53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 96, 97, 117, 118, 119, 127, 132, 133, 142, 143, 144, 145, 166, 167], "dynam": [32, 33, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 82, 96, 97, 98, 99, 166, 167, 168], "t_": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 108, 165], "rate_const": [33, 41], "linearli": [34, 35, 65, 76], "ident": [34, 35, 55, 78, 124], "closest": 36, "leq": [36, 119, 127, 139, 140, 141, 142, 144], "linearlli": 42, "trend": 46, "beta": 46, "holt": 46, "linear": [46, 53, 71, 72, 73, 86, 87, 88, 89, 90, 96, 121, 163, 168], "b_0": 46, "x_1": 46, "b_": 46, "b_t": 46, "time_first": 47, "transform": [47, 55, 71, 72, 73, 78], "inter": [47, 49, 65, 91, 92], "pad": [47, 55, 59], "nan": 47, "could": 47, "fewer": 47, "calcul": [47, 50, 51, 52, 120, 123, 165, 167], "interspik": 47, "c": [47, 55, 59], "popul": 47, "amongst": [47, 48], "trainer": [48, 49, 50], "layer": [48, 49, 50, 52, 55, 56, 78], "monitor": [48, 49, 50, 52, 56, 70, 120, 124, 126, 128, 134, 166], "likewis": [48, 49, 165], "add_cel": [48, 55, 70, 78], "auxiliari": [48, 49, 50, 52], "add_monitor": 48, "monitorconstructor": [48, 120, 124, 125, 128, 134], "tag": 48, "trainabl": [48, 49, 50, 52, 58, 82], "seper": [48, 56], "alias": 48, "pool": [48, 56], "bypass": 48, "less": [48, 91, 92], "cours": 48, "yield": [48, 65, 70, 76, 92, 95], "clear": [48, 50, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 77, 79, 81, 82, 120, 123, 125, 131], "addit": [48, 50, 58, 59, 64, 65, 71, 72, 73, 81, 91, 92, 99, 143, 145, 166, 167], "overridden": [48, 50, 52, 125, 131], "well": [48, 50, 84, 163], "doesn": [48, 50, 55, 70, 78, 86, 87, 88], "del_cel": [48, 55, 70, 78], "again": [48, 55], "del_monitor": 48, "get_cel": [48, 70], "get": [48, 49, 65, 70, 91, 92], "get_monitor": 48, "togeth": [48, 165], "named_cel": [48, 70], "named_monitor": 48, "named_monitors_of": 48, "associt": 48, "cumul": [48, 50, 52, 70, 117, 119, 132, 139, 140, 141, 165], "celltrain": 49, "moduledict": 49, "register_cel": [49, 50, 52], "alongsid": 49, "lr_post": [50, 52], "lr_pre": [50, 52], "tc_post": [50, 52], "tc_pre": [50, 52], "tc_elig": 50, "delai": [50, 52, 56, 58, 59, 60, 61, 67, 71, 72, 73, 79, 80, 83, 102, 163], "interp_toler": [50, 52], "batch_reduct": [50, 52, 53, 54, 64, 68, 104, 105], "field_reduct": [50, 52], "independenttrain": [50, 52], "plastic": [50, 52, 163], "elig": [50, 163], "trace": [50, 52, 117, 118, 119, 127, 132, 133, 142, 143, 144, 145, 163], "w": [50, 52, 59, 71, 72, 73, 165], "gamma": [50, 141, 165], "r": [50, 139, 140, 141, 165, 167], "z_": 50, "post": [50, 52, 58, 59, 71, 72, 73, 120, 165], "pre": [50, 52, 58, 59, 71, 72, 73, 120, 165], "tau_z": [50, 165], "tau_": [50, 52, 165], "t_n": [50, 52, 165], "sign": [50, 52], "reinforc": 50, "split": 50, "sgn": [50, 52], "hebbian": [50, 52, 163], "anti": [50, 52, 165], "postsynapt": [50, 52, 58, 66, 74, 86, 87, 88, 108, 165, 166], "trace_mod": [50, 52], "liter": [50, 52, 55, 60, 61], "recept": [50, 52], "field": [50, 52, 167, 168], "desir": [50, 52, 75, 116, 134, 139, 140], "expect": [50, 52, 59, 65, 70, 71, 72, 73, 76, 91, 92, 93, 94, 95, 128, 139, 140, 141], "basi": [50, 52], "keep": [50, 52, 53, 54, 64, 68, 104, 105], "visit": [50, 52, 53, 54, 60, 61, 62, 63, 64, 68, 69, 77, 86, 87, 88, 89, 90], "zoo": [50, 52, 53, 54, 60, 61, 62, 63, 64, 68, 69, 77, 86, 87, 88, 89, 90], "reward": [50, 165], "num_class": 51, "classifi": 51, "per": [51, 59, 110, 111, 113, 114], "intern": [51, 73], "multipli": [51, 143, 145, 167], "b_k": [51, 54, 68, 86, 88, 166, 168], "group": [51, 53, 54, 55, 58, 60, 61, 62, 64, 67, 68, 69, 74, 77, 78, 79, 80, 86, 87, 88, 101, 103], "decay_r": 51, "logit": 51, "label": 51, "infer": 51, "ground": 51, "truth": 51, "predict": 51, "were": [51, 55], "averag": [51, 86, 87, 88, 121], "nclass": 51, "ndim": 51, "l_1": 51, "raw": 51, "recalcul": 51, "bigl": 52, "f_": [52, 108, 143, 165], "bigr": 52, "x_n": 52, "tau_n": 52, "rest_v": [53, 54, 62, 63, 64, 68, 69, 77, 86, 88, 96, 97, 99], "reset_v": [53, 54, 62, 63, 68, 69, 77, 98], "thresh_eq_v": [53, 64, 168], "refrac_t": [53, 54, 62, 63, 64, 68, 69, 77, 98, 99], "tc_membran": [53, 54, 64, 68], "tc_adapt": [53, 54, 68], "spike_incr": [53, 54, 64, 68, 86, 87], "resist": [53, 54, 62, 63, 64, 68, 69, 77, 96, 97, 167], "batch_siz": [53, 54, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 77, 80, 100, 101], "adaptivethresholdmixin": [53, 64], "voltagemixin": [53, 54, 62, 63, 64, 68, 69, 77], "spikerefractorymixin": [53, 54, 62, 63, 64, 68, 69, 77], "infernoneuron": [53, 54, 62, 63, 64, 68, 69, 77], "leaki": [53, 63, 64, 69, 163], "v_m": [53, 54, 62, 64, 68, 69, 77, 86, 88, 96, 97, 98, 99, 166, 167, 168], "rest": [53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 86, 88, 96, 97, 99, 166, 167, 168], "r_mi": [53, 54, 62, 64, 68, 69, 77, 96, 97, 167, 168], "tau_m": [53, 54, 62, 64, 68, 69, 77, 96, 97, 167, 168], "theta_": [53, 64, 88, 90, 166, 167, 168], "sum_k": [53, 54, 64, 68, 166, 167, 168], "theta_k": [53, 64, 87, 88, 90, 166, 167], "tau_k": [53, 54, 68, 86, 87, 166, 167, 168], "leftarrow": [53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 98, 99, 166, 167, 168], "d_k": [53, 64, 68, 166, 167, 168], "equilibrium": [53, 54, 62, 64, 68, 69, 77, 86, 88, 90, 96, 97, 99, 166, 167, 168], "mv": [53, 54, 62, 64, 68, 69, 77, 86, 87, 88, 90, 96, 97, 98, 99, 109, 166, 167, 168], "refractori": [53, 54, 62, 63, 64, 65, 66, 68, 69, 74, 77, 86, 87, 88, 91, 92, 96, 97, 98, 99, 107, 108], "period": [53, 54, 62, 63, 64, 65, 66, 68, 69, 74, 77, 86, 87, 88, 91, 92, 96, 97, 98, 99, 107, 108], "r_m": [53, 54, 62, 64, 68, 69, 77, 96, 97, 167], "omega": [53, 54, 62, 64, 68, 69, 77, 96, 97, 167], "keep_adapt": [53, 54, 64, 68], "refrac_lock": [53, 54, 62, 63, 64, 68, 69, 77], "na": [53, 54, 62, 63, 64, 68, 69, 77, 86, 89, 96, 97, 98, 99, 106, 110, 111, 112, 166, 167, 168, 170], "rheobase_v": [54, 62], "thresh_v": [54, 62, 63, 68, 69, 77, 98, 99, 168], "voltage_coupl": [54, 68, 86], "adaptivecurrentmixin": [54, 68], "delta_t": [54, 62, 168], "v_t": [54, 62, 168], "i_x": [54, 61, 68, 166, 168, 170], "w_k": [54, 68, 86, 89, 166, 168], "a_k": [54, 86, 87, 88, 166, 168], "approach": [54, 62, 168], "rapidli": [54, 62], "steep": [54, 62, 168], "natur": [54, 62, 68, 77, 97, 139, 140, 141], "abov": [54, 62, 166, 168], "rheobas": [54, 62, 168], "strength": [54, 68, 77, 86, 97], "coupl": [54, 68, 86, 166, 168], "mu": [54, 68, 86, 139, 140, 166, 167, 168], "onetoon": [55, 59, 71, 72, 73, 78, 98, 99, 122, 132, 133], "combin": 55, "stack": 55, "prod": [55, 71, 72, 73], "complet": 55, "bipartit": 55, "graph": 55, "third": 55, "take": [55, 93, 128, 138, 146, 147, 148, 149, 150, 151, 152, 153], "einop": 55, "produc": [55, 56], "receiv": [55, 78, 124, 165], "ouput": 55, "__call__": [55, 70], "captur": [55, 78], "py": [55, 58, 59, 70, 71, 72, 73, 78], "meth": [55, 58, 59, 71, 72, 73, 78], "specifyi": [55, 70, 78], "add_connect": [55, 70, 78], "add_neuron": [55, 70, 78], "hasn": [55, 70, 78], "been": [55, 70, 78, 123], "pair": [55, 56, 70, 78], "del_connect": [55, 70, 78], "del_neuron": [55, 70, 78], "wire": [55, 70, 78, 165], "topologi": [55, 78], "submodul": [56, 126], "compos": [56, 58, 120], "local_remap": 56, "local": 56, "remap": 56, "callback": 56, "realign": 56, "postspik": 56, "postvoltag": 56, "millivolt": [56, 66, 74, 109], "precurr": 56, "syncurr": [56, 58], "synapt": [56, 58, 59, 60, 61, 67, 71, 72, 73, 79, 110, 111, 112, 113], "prespik": 56, "synspik": [56, 58], "statehook": [57, 75], "batched_inshap": 58, "batched_outshap": [58, 71, 72, 73], "batchsz": [58, 66, 74, 100], "bia": [58, 59, 71, 72, 73, 83, 84], "learnabl": [58, 59, 71, 72, 73, 83, 84, 85], "clearabl": 58, "defaultupdat": [58, 81], "exclude_weight": 58, "exclude_bia": 58, "exclude_delai": 58, "delayedbi": 58, "maxmimum": 58, "inshap": [58, 59, 71, 72, 73], "insiz": 58, "cach": 58, "refresh": 58, "like_input": [58, 59, 71, 72, 73], "like_synapt": [58, 59, 71, 72, 73], "outshap": [58, 59, 71, 72, 73], "outsiz": 58, "postsyn_recept": [58, 59, 71, 72, 73], "presyn_recept": [58, 59, 71, 72, 73], "selector": [58, 59, 60, 61, 67, 71, 72, 73, 79, 110, 111, 113, 114], "height": 59, "width": 59, "channel": 59, "kernel": 59, "stride": 59, "dilat": 59, "synapseconstructor": [59, 60, 61, 67, 71, 72, 73, 79], "weight_init": [59, 71, 72, 73], "bias_init": [59, 71, 72, 73], "delay_init": [59, 71, 72, 73], "weightbiasdelaymixin": [59, 71, 72, 73], "convolut": 59, "spatial": 59, "plane": 59, "kh": 59, "kw": 59, "delay_": [59, 71, 72, 83], "effect": [59, 71, 72, 166, 168], "unless": [59, 71, 72, 125, 131], "later": [59, 71, 72], "uniform": [59, 71, 72, 73], "random": [59, 71, 72, 73, 115, 139, 140, 141, 154], "rand": [59, 71, 72, 73, 154], "anoth": 59, "h_": 59, "w_": 59, "formula": 59, "document": 59, "lfloor": [59, 141], "p_h": 59, "d_h": 59, "k_h": 59, "s_h": 59, "rfloor": [59, 141], "p_w": 59, "d_w": 59, "k_w": 59, "s_w": 59, "ph": 59, "pw": 59, "side": [59, 167], "dh": 59, "dw": [59, 165], "sh": [59, 117, 118, 132, 133, 143, 145], "sw": 59, "reli": 59, "upon": [59, 168], "consequenti": 59, "memori": 59, "spike_q": [60, 61], "interp_mod": [60, 61], "interp_tol": [60, 61], "current_overbound": [60, 61, 110, 112, 113], "spike_overbound": [60, 61, 110, 112, 113], "spikederivedcurrentmixin": 60, "infernosynaps": [60, 61], "memoryless": [60, 61], "respond": [60, 61, 166], "instantan": [60, 61], "q": [60, 61, 170], "charg": [60, 61, 170], "carri": [60, 61, 170], "pc": [60, 61, 170], "replac": [60, 61, 110, 111, 112, 113, 114], "cuba": [60, 61, 163], "variant": [60, 61, 163], "partialconstructor": [60, 61, 67, 79, 120, 124, 125, 128, 134], "spikecurrentmixin": 61, "passthrough": [61, 129], "inject": 61, "glif": [63, 64, 163, 166, 167], "lif": [63, 163], "reset_v_add": 64, "reset_v_mul": 64, "rc_adapt": 64, "lambda_k": [64, 167], "m_v": [64, 99, 167], "b_v": [64, 99, 167], "unitless": [64, 68, 77, 97, 99, 142, 143, 144, 145, 168], "frequenc": [65, 76, 91, 92, 93, 94, 95, 166], "refrac": [65, 66, 74, 86, 87, 88, 91, 92, 98, 99, 107, 108], "compens": [65, 91, 92, 141], "generatormixin": [65, 76], "refractorystepmixin": 65, "encod": [65, 76], "poisson": [65, 76, 91, 92, 93, 94, 95], "distribut": [65, 76, 91, 92, 93, 94, 95, 139, 140, 141], "randomli": [65, 91, 92], "hz": [65, 76, 91, 92, 93, 94, 95], "pseudorandom": [65, 76, 91, 92, 94, 95, 115, 139, 140, 141, 154], "allow": [65, 91, 92, 119, 123, 127, 142, 144, 166], "distanc": [65, 91, 92], "th": [65, 86, 87, 88, 91, 92], "onlin": [65, 76], "intens": [65, 76], "hertz": [65, 76], "pin": 65, "batchshapemixin": [66, 67], "librari": [66, 67], "mixin": [66, 67, 83, 84, 85, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "delayedmixin": 67, "nanoamper": [67, 79, 106, 111, 113], "current_at": [67, 79, 111, 113], "spike_at": [67, 79, 110, 114], "boolean": [67, 79], "crit_v": [68, 77, 97], "affin": [68, 77, 97], "crit": [68, 77, 97, 168], "drift": [68, 77, 97], "awai": [68, 77, 97, 168], "simultan": 70, "proxi": 70, "connection_nam": [70, 78], "neuron_nam": [70, 78], "primarili": 70, "connection_kwarg": [70, 78], "neuron_kwarg": [70, 78], "capture_intermedi": [70, 78], "turn": [70, 120, 134], "unpack": [70, 124], "get_connect": 70, "get_neuron": 70, "named_connect": 70, "named_neuron": 70, "named_synaps": 70, "accumul": [70, 81, 82], "in_shap": 71, "out_shap": 71, "interc": [71, 73], "m_0": 71, "unbatch": [71, 72, 73], "odot": [72, 73], "inputoutput": [72, 73], "i_n": 73, "lineardens": 73, "creation": 73, "mask": [73, 96, 97, 143, 145], "batchedshap": [74, 101], "epsilon": [75, 116, 119, 127, 142, 144], "12": [75, 116, 166], "norm": [75, 116], "demonin": [75, 116], "stepmixin": 76, "replic": [76, 94, 95, 103], "bindsnet": [76, 94, 95], "invers": [76, 94, 95, 167, 170], "wrap": [78, 120, 128, 134], "serial_c": 78, "serial_n": 78, "updatesom": 81, "reduct": 82, "taken": 82, "collis": 82, "small": 82, "_get_": 82, "_set_": 82, "_del_": 82, "weakli": 82, "weightbiasmixin": 83, "inherit": [83, 84, 85], "weight_": [83, 84, 85], "bias_": [83, 84], "weightmixin": 84, "maintain": [86, 87, 88, 98, 99], "adapt_r": 88, "rebound_r": 88, "adapt_reset_min": 88, "permit": [88, 143, 145], "adap": [89, 90], "i_": 89, "optioon": [91, 92], "nonsens": [91, 92], "1000": [91, 92], "inhomogen": 93, "exce": 93, "greater": 93, "masked_input": [96, 97], "held": [98, 99], "v_slope": 99, "v_intercept": 99, "0th": [100, 124], "add_batch": 100, "shapemixin": 101, "batchmixin": [101, 103], "concept": [101, 103], "recordtensor": [102, 130], "add_delai": 102, "offer": 103, "current_adapt": 104, "additon": [104, 105], "lead": [104, 105], "unreduc": [104, 105], "threshold_adap": 105, "absrefrac": 108, "refractorymixin": 108, "driven": 109, "to_spik": 110, "current_interp": [110, 112, 113], "current_interp_kwarg": [110, 112, 113], "spike_interp": [110, 112, 113], "spike_interp_kwarg": [110, 112, 113], "currentmixin": [110, 112], "therefrom": [110, 113], "overbound": [111, 114], "primit": [111, 112, 114], "spikemixin": [112, 113], "to_curr": 113, "randn": 115, "foldreduc": [117, 118, 119, 121, 122, 127, 129, 132, 133], "condit": [117, 118, 142, 143, 144, 145, 168], "lvert": [117, 119, 127, 132, 142, 143, 144], "scaledcumulativetracereduc": 117, "fold": [117, 118, 119, 121, 122, 123, 127, 129, 132, 133], "cond": [117, 118], "incorpor": [117, 118, 119, 121, 122, 123, 127, 129, 131, 132, 133, 142, 143, 144, 145, 167, 168], "scalednearesttracereduc": 118, "rvert": [119, 127, 142, 144], "filter_": [120, 124, 128, 134], "map_": [120, 124, 128, 134], "op_": 120, "nest": [120, 126, 134], "map": [120, 123, 124, 128, 134], "minu": 120, "op": 120, "ti": [120, 134], "reject": 120, "compar": 120, "reiniti": [120, 123, 125, 131], "decoupl": 121, "datatyp": [122, 132, 133, 143, 145], "recordreduc": 123, "keepshap": 123, "histor": 123, "dump": [123, 125, 131], "step_data": 123, "view": [123, 125, 131], "07": [123, 166], "fail": 123, "fall": 123, "measur": 123, "7": 123, "sent": 124, "directli": [125, 129], "weak": 125, "did": 125, "sens": 126, "sensibl": 126, "reduer": [128, 134], "util": 130, "add_record": 130, "resmin": 136, "resmax": 136, "srcmin": 136, "srcmax": 136, "unchang": 136, "amin": 136, "amax": 136, "shortcut": 137, "squar": 138, "root": 138, "continuousdistribut": [139, 140], "log": [139, 140, 141], "probabl": [139, 140, 141], "mathbb": [139, 140, 141], "sigma": [139, 140], "cdf": [139, 140, 141], "loc": [139, 140], "erf": [139, 140], "sqrt": [139, 140], "standard": [139, 140], "deviat": [139, 140], "logcdf": [139, 140, 141], "logarithm": [139, 140, 141], "logpdf": [139, 140], "densiti": [139, 140], "pi": [139, 140], "likelihood": [139, 140], "sim": [139, 140, 141], "params_mv": [139, 140], "varianc": [139, 140, 141], "mu_x": [139, 140], "sigma_x": [139, 140], "qquad": [139, 140], "pdf": [139, 140], "variat": [139, 140, 141], "mathcal": [139, 140, 165], "sample_mv": [139, 140], "var": [139, 140, 141], "lnormal": 140, "discretedistribut": 141, "_0": 141, "logpmf": 141, "mass": 141, "pmf": 141, "metal": 141, "shader": 141, "accordingli": 141, "degener": 141, "init": [142, 143, 144, 145], "matchfn": [143, 145], "trace_cumul": 143, "predic": [143, 145], "sf": 143, "x_t": 143, "trace_nearest": 145, "arbitrari": [146, 147, 148, 149, 150, 151], "uniformli": 154, "depth": 163, "academ": 163, "plan": 163, "futur": 163, "alif": 163, "3": [163, 168], "4": [163, 166, 168], "5": [163, 168], "nonlinear": 163, "qif": 163, "izhikevich": 163, "eif": 163, "adex": 163, "conduct": [163, 167], "coba": 163, "stdp": 163, "mstdp": 163, "mstdpet": 163, "triplet": 163, "resum": 163, "tbd": 164, "summar": 165, "afterward": 165, "causal": 165, "phrase": [165, 167], "revers": 165, "direct": 165, "below": [165, 166, 168], "commonli": 165, "sum_": 165, "With": [165, 166, 167, 168], "dirac": [165, 170], "w_t": 165, "pp": 165, "d_": 165, "xi": 165, "phi_": 165, "dp": 165, "phi_n": 165, "_n": 165, "zeta": 165, "10": [165, 166, 167, 168], "1162": [165, 166], "neco": [165, 166], "2007": 165, "19": 165, "1468": 165, "z": 165, "dz": 165, "impos": 166, "regard": 166, "impli": 166, "steadi": 166, "give": 166, "degre": 166, "freedom": 166, "modif": 166, "dampen": 166, "amplifi": 166, "said": 166, "latter": [166, 168], "dw_k": [166, 168], "approx": [166, 168], "subthreshold": [166, 168], "doi": [166, 167, 168], "1017": [166, 167, 168], "cbo9781107447615": [166, 167, 168], "1152": 166, "jn": 166, "00686": 166, "2005": 166, "Be": [166, 167], "1038": [166, 167], "s41467": [166, 167], "017": [166, 167], "02717": [166, 167], "allen": [166, 167], "institut": [166, 167], "whitepap": [166, 167], "rebound": 166, "2008": 166, "680": 166, "neco_a_00196": 166, "1803": 166, "09574": 166, "021": 166, "24427": 166, "8": [166, 168], "00234": 166, "2019": 166, "dv_m": [167, 168], "basic": 167, "rule": 167, "slope": [167, 168], "show": [167, 168], "v_r": [167, 168], "60": [167, 168], "plot": [167, 168], "c_m": 167, "g_l": 167, "capacit": 167, "nf": 167, "leak": 167, "expos": 167, "isbn": [167, 168, 170], "9780262548083": [167, 168, 170], "020": 167, "17236": 167, "fraction": 167, "intercept": 167, "convent": 167, "conting": 167, "reach": 167, "critic": 168, "tendenc": 168, "stabl": 168, "unstabl": 168, "attract": 168, "repel": 168, "v_c": 168, "50": 168, "depeend": 168, "3390": 168, "brainsci12070863": 168, "7551": 168, "mitpress": 168, "2526": 168, "001": 168, "0001": 168, "close": 168, "rapid": 168, "upsw": 168, "rightarrow": 168, "easi": 168, "confus": 168, "unrel": 168, "occasion": 168, "denot": 168, "vartheta_": 168, "rh": 168, "thresh": 168, "usual": 168, "simuat": 168, "illustr": 168, "4249": 168, "scholarpedia": 168, "8427": 168, "1523": 168, "jneurosci": 168, "23": 168, "37": 168, "11628": 168, "2003": 168, "t_f": 170, "extern": 170, "veri": 170, "role": 170, "deliv": 170, "dramat": 170}, "objects": {"inferno": [[6, 0, 1, "", "ContextualHook"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "Hook"], [9, 0, 1, "", "Module"], [10, 0, 1, "", "RecordModule"], [11, 0, 1, "", "RecordTensor"], [12, 0, 1, "", "ShapedTensor"], [13, 0, 1, "", "StateHook"], [14, 4, 1, "", "astensors"], [15, 4, 1, "", "empty"], [16, 4, 1, "", "exp"], [17, 4, 1, "", "exponential_smoothing"], [18, 4, 1, "", "full"], [5, 5, 0, "-", "functional"], [46, 4, 1, "", "holt_linear_smoothing"], [47, 4, 1, "", "isi"], [158, 5, 0, "-", "learn"], [159, 5, 0, "-", "neural"], [115, 4, 1, "", "normal"], [116, 4, 1, "", "normalize"], [135, 4, 1, "", "ones"], [136, 4, 1, "", "rescale"], [137, 4, 1, "", "scalar"], [138, 4, 1, "", "sqrt"], [162, 5, 0, "-", "stats"], [142, 4, 1, "", "trace_cumulative"], [143, 4, 1, "", "trace_cumulative_scaled"], [144, 4, 1, "", "trace_nearest"], [145, 4, 1, "", "trace_nearest_scaled"], [154, 4, 1, "", "uniform"], [155, 4, 1, "", "zeros"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "dims"], [7, 1, 1, "", "dims_"], [7, 1, 1, "", "extra_repr"], [7, 2, 1, "", "liveconstrain"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"], [7, 1, 1, "", "validate"]], "inferno.Hook": [[8, 1, 1, "", "deregister"], [8, 2, 1, "", "evalexec"], [8, 1, 1, "", "register"], [8, 2, 1, "", "registered"], [8, 2, 1, "", "trainexec"]], "inferno.Module": [[9, 1, 1, "", "get_extra"], [9, 1, 1, "", "get_extra_state"], [9, 1, 1, "", "register_extra"], [9, 1, 1, "", "set_extra_state"]], "inferno.RecordModule": [[10, 1, 1, "", "aligned"], [10, 1, 1, "", "deregister_constrained"], [10, 2, 1, "", "dt"], [10, 2, 1, "", "duration"], [10, 1, 1, "", "latest"], [10, 1, 1, "", "reconstrain"], [10, 1, 1, "", "record"], [10, 2, 1, "", "recordsz"], [10, 1, 1, "", "register_constrained"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "select"]], "inferno.RecordTensor": [[11, 3, 1, "", "LinkedAttributes"], [11, 1, 1, "", "align"], [11, 2, 1, "", "attributes"], [11, 2, 1, "", "constraints"], [11, 1, 1, "", "create"], [11, 1, 1, "", "decr"], [11, 1, 1, "", "deinitialize"], [11, 2, 1, "", "dt"], [11, 2, 1, "", "duration"], [11, 1, 1, "", "incr"], [11, 1, 1, "", "initialize"], [11, 1, 1, "", "insert"], [11, 2, 1, "", "latest"], [11, 1, 1, "", "peek"], [11, 2, 1, "", "pointer"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "push"], [11, 1, 1, "", "read"], [11, 1, 1, "", "readrange"], [11, 1, 1, "", "reconstrain"], [11, 2, 1, "", "recordsz"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "select"], [11, 2, 1, "", "shape"], [11, 2, 1, "", "value"], [11, 1, 1, "", "write"], [11, 1, 1, "", "writerange"]], "inferno.ShapedTensor": [[12, 3, 1, "", "LinkedAttributes"], [12, 2, 1, "", "attributes"], [12, 1, 1, "", "compatible"], [12, 2, 1, "", "constraints"], [12, 1, 1, "", "create"], [12, 2, 1, "", "dimensionality"], [12, 2, 1, "", "ignored"], [12, 2, 1, "", "live"], [12, 2, 1, "", "name"], [12, 2, 1, "", "owner"], [12, 1, 1, "", "reconstrain"], [12, 1, 1, "", "resize"], [12, 2, 1, "", "strict"], [12, 2, 1, "", "valid"], [12, 2, 1, "", "value"]], "inferno.StateHook": [[13, 1, 1, "", "forward"], [13, 1, 1, "", "hook"], [13, 2, 1, "", "module"], [13, 1, 1, "", "register"]], "inferno.functional": [[19, 0, 1, "", "Extrapolation"], [20, 0, 1, "", "FullBounding"], [21, 0, 1, "", "HalfBounding"], [22, 0, 1, "", "Interpolation"], [23, 4, 1, "", "bound_lower_multiplicative"], [24, 4, 1, "", "bound_lower_power"], [25, 4, 1, "", "bound_lower_sharp"], [26, 4, 1, "", "bound_multiplicative"], [27, 4, 1, "", "bound_power"], [28, 4, 1, "", "bound_sharp"], [29, 4, 1, "", "bound_upper_multiplicative"], [30, 4, 1, "", "bound_upper_power"], [31, 4, 1, "", "bound_upper_sharp"], [32, 4, 1, "", "extrap_expdecay"], [33, 4, 1, "", "extrap_expratedecay"], [34, 4, 1, "", "extrap_linear_backward"], [35, 4, 1, "", "extrap_linear_forward"], [36, 4, 1, "", "extrap_nearest"], [37, 4, 1, "", "extrap_neighbors"], [38, 4, 1, "", "extrap_next"], [39, 4, 1, "", "extrap_previous"], [40, 4, 1, "", "interp_expdecay"], [41, 4, 1, "", "interp_expratedecay"], [42, 4, 1, "", "interp_linear"], [43, 4, 1, "", "interp_nearest"], [44, 4, 1, "", "interp_next"], [45, 4, 1, "", "interp_previous"]], "inferno.learn": [[48, 0, 1, "", "CellTrainer"], [49, 0, 1, "", "IndependentTrainer"], [50, 0, 1, "", "MSTDPET"], [51, 0, 1, "", "MaxRateClassifier"], [52, 0, 1, "", "STDP"]], "inferno.learn.CellTrainer": [[48, 1, 1, "", "add_cell"], [48, 1, 1, "", "add_monitor"], [48, 2, 1, "", "cells"], [48, 1, 1, "", "clear"], [48, 1, 1, "", "del_cell"], [48, 1, 1, "", "del_monitor"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_cell"], [48, 1, 1, "", "get_monitor"], [48, 2, 1, "", "monitors"], [48, 2, 1, "", "named_cells"], [48, 2, 1, "", "named_monitors"], [48, 1, 1, "", "named_monitors_of"], [48, 1, 1, "", "train"], [48, 1, 1, "", "update"]], "inferno.learn.IndependentTrainer": [[49, 0, 1, "", "Unit"], [49, 1, 1, "", "register_cell"], [49, 1, 1, "", "unit"]], "inferno.learn.IndependentTrainer.Unit": [[49, 3, 1, "", "cell"], [49, 3, 1, "", "monitors"], [49, 3, 1, "", "state"]], "inferno.learn.MSTDPET": [[50, 1, 1, "", "clear"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "register_cell"]], "inferno.learn.MaxRateClassifier": [[51, 2, 1, "", "assignments"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "infer"], [51, 1, 1, "", "learn"], [51, 2, 1, "", "nclass"], [51, 2, 1, "", "ndim"], [51, 2, 1, "", "occurances"], [51, 2, 1, "", "proportional"], [51, 2, 1, "", "proportions"], [51, 2, 1, "", "rates"], [51, 2, 1, "", "shape"]], "inferno.learn.STDP": [[52, 1, 1, "", "forward"], [52, 1, 1, "", "register_cell"]], "inferno.neural": [[53, 0, 1, "", "ALIF"], [54, 0, 1, "", "AdEx"], [55, 0, 1, "", "Biclique"], [56, 0, 1, "", "Cell"], [57, 0, 1, "", "Clamping"], [58, 0, 1, "", "Connection"], [59, 0, 1, "", "Conv2D"], [60, 0, 1, "", "DeltaCurrent"], [61, 0, 1, "", "DeltaPlusCurrent"], [62, 0, 1, "", "EIF"], [63, 0, 1, "", "GLIF1"], [64, 0, 1, "", "GLIF2"], [65, 0, 1, "", "HomogeneousPoissonEncoder"], [66, 0, 1, "", "InfernoNeuron"], [67, 0, 1, "", "InfernoSynapse"], [68, 0, 1, "", "Izhikevich"], [69, 0, 1, "", "LIF"], [70, 0, 1, "", "Layer"], [71, 0, 1, "", "LinearDense"], [72, 0, 1, "", "LinearDirect"], [73, 0, 1, "", "LinearLateral"], [74, 0, 1, "", "Neuron"], [75, 0, 1, "", "Normalization"], [76, 0, 1, "", "PoissonIntervalEncoder"], [77, 0, 1, "", "QIF"], [78, 0, 1, "", "Serial"], [79, 0, 1, "", "Synapse"], [80, 0, 1, "", "SynapseConstructor"], [81, 0, 1, "", "Updatable"], [82, 0, 1, "", "Updater"], [160, 5, 0, "-", "functional"]], "inferno.neural.ALIF": [[53, 1, 1, "", "clear"], [53, 2, 1, "", "dt"], [53, 1, 1, "", "forward"]], "inferno.neural.AdEx": [[54, 1, 1, "", "clear"], [54, 2, 1, "", "dt"], [54, 1, 1, "", "forward"]], "inferno.neural.Biclique": [[55, 1, 1, "", "add_cell"], [55, 1, 1, "", "add_connection"], [55, 1, 1, "", "add_neuron"], [55, 1, 1, "", "del_cell"], [55, 1, 1, "", "del_connection"], [55, 1, 1, "", "del_neuron"], [55, 1, 1, "", "wiring"]], "inferno.neural.Cell": [[56, 2, 1, "", "connection"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "local_remap"], [56, 2, 1, "", "neuron"], [56, 2, 1, "", "postspike"], [56, 2, 1, "", "postvoltage"], [56, 2, 1, "", "precurrent"], [56, 2, 1, "", "prespike"], [56, 2, 1, "", "synapse"], [56, 2, 1, "", "updater"]], "inferno.neural.Clamping": [[57, 1, 1, "", "hook"]], "inferno.neural.Connection": [[58, 2, 1, "", "batched_inshape"], [58, 2, 1, "", "batched_outshape"], [58, 2, 1, "", "batchsz"], [58, 2, 1, "", "bias"], [58, 2, 1, "", "biased"], [58, 1, 1, "", "clear"], [58, 1, 1, "", "defaultupdater"], [58, 2, 1, "", "delay"], [58, 2, 1, "", "delayedby"], [58, 2, 1, "", "dt"], [58, 1, 1, "", "extra_repr"], [58, 1, 1, "", "forward"], [58, 2, 1, "", "inshape"], [58, 1, 1, "", "insize"], [58, 1, 1, "", "like_input"], [58, 1, 1, "", "like_synaptic"], [58, 2, 1, "", "outshape"], [58, 1, 1, "", "outsize"], [58, 1, 1, "", "postsyn_receptive"], [58, 1, 1, "", "presyn_receptive"], [58, 2, 1, "", "selector"], [58, 2, 1, "", "synapse"], [58, 2, 1, "", "syncurrent"], [58, 2, 1, "", "synspike"], [58, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[59, 1, 1, "", "forward"], [59, 2, 1, "", "inshape"], [59, 1, 1, "", "like_input"], [59, 1, 1, "", "like_synaptic"], [59, 2, 1, "", "outshape"], [59, 1, 1, "", "postsyn_receptive"], [59, 1, 1, "", "presyn_receptive"], [59, 2, 1, "", "selector"]], "inferno.neural.DeltaCurrent": [[60, 1, 1, "", "clear"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[61, 1, 1, "", "clear"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[62, 1, 1, "", "clear"], [62, 2, 1, "", "dt"], [62, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[63, 1, 1, "", "clear"], [63, 2, 1, "", "dt"], [63, 1, 1, "", "forward"]], "inferno.neural.GLIF2": [[64, 1, 1, "", "clear"], [64, 2, 1, "", "dt"], [64, 1, 1, "", "forward"]], "inferno.neural.HomogeneousPoissonEncoder": [[65, 2, 1, "", "compensated"], [65, 1, 1, "", "forward"], [65, 2, 1, "", "frequency"], [65, 2, 1, "", "refrac"]], "inferno.neural.InfernoNeuron": [[66, 2, 1, "", "batchsz"], [66, 1, 1, "", "clear"], [66, 2, 1, "", "dt"], [66, 1, 1, "", "forward"], [66, 2, 1, "", "refrac"], [66, 2, 1, "", "spike"], [66, 2, 1, "", "voltage"]], "inferno.neural.InfernoSynapse": [[67, 1, 1, "", "clear"], [67, 2, 1, "", "current"], [67, 1, 1, "", "current_at"], [67, 2, 1, "", "delay"], [67, 2, 1, "", "dt"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "partialconstructor"], [67, 2, 1, "", "spike"], [67, 1, 1, "", "spike_at"]], "inferno.neural.Izhikevich": [[68, 1, 1, "", "clear"], [68, 2, 1, "", "dt"], [68, 1, 1, "", "forward"]], "inferno.neural.LIF": [[69, 1, 1, "", "clear"], [69, 2, 1, "", "dt"], [69, 1, 1, "", "forward"]], "inferno.neural.Layer": [[70, 1, 1, "", "add_cell"], [70, 1, 1, "", "add_connection"], [70, 1, 1, "", "add_neuron"], [70, 2, 1, "", "cells"], [70, 2, 1, "", "connections"], [70, 1, 1, "", "del_cell"], [70, 1, 1, "", "del_connection"], [70, 1, 1, "", "del_neuron"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "get_cell"], [70, 1, 1, "", "get_connection"], [70, 1, 1, "", "get_neuron"], [70, 2, 1, "", "named_cells"], [70, 2, 1, "", "named_connections"], [70, 2, 1, "", "named_neurons"], [70, 2, 1, "", "named_synapses"], [70, 2, 1, "", "neurons"], [70, 1, 1, "", "update"], [70, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[71, 1, 1, "", "forward"], [71, 2, 1, "", "inshape"], [71, 1, 1, "", "like_input"], [71, 1, 1, "", "like_synaptic"], [71, 2, 1, "", "outshape"], [71, 1, 1, "", "postsyn_receptive"], [71, 1, 1, "", "presyn_receptive"], [71, 2, 1, "", "selector"]], "inferno.neural.LinearDirect": [[72, 1, 1, "", "forward"], [72, 2, 1, "", "inshape"], [72, 1, 1, "", "like_input"], [72, 1, 1, "", "like_synaptic"], [72, 2, 1, "", "outshape"], [72, 1, 1, "", "postsyn_receptive"], [72, 1, 1, "", "presyn_receptive"], [72, 2, 1, "", "selector"]], "inferno.neural.LinearLateral": [[73, 2, 1, "", "delay"], [73, 1, 1, "", "forward"], [73, 2, 1, "", "inshape"], [73, 1, 1, "", "like_input"], [73, 1, 1, "", "like_synaptic"], [73, 2, 1, "", "outshape"], [73, 1, 1, "", "postsyn_receptive"], [73, 1, 1, "", "presyn_receptive"], [73, 2, 1, "", "selector"], [73, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[74, 2, 1, "", "batchedshape"], [74, 2, 1, "", "batchsz"], [74, 1, 1, "", "clear"], [74, 2, 1, "", "count"], [74, 2, 1, "", "dt"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "forward"], [74, 2, 1, "", "refrac"], [74, 2, 1, "", "shape"], [74, 2, 1, "", "spike"], [74, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[75, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[76, 1, 1, "", "forward"], [76, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[77, 1, 1, "", "clear"], [77, 2, 1, "", "dt"], [77, 1, 1, "", "forward"]], "inferno.neural.Serial": [[78, 1, 1, "", "add_cell"], [78, 1, 1, "", "add_connection"], [78, 1, 1, "", "add_neuron"], [78, 2, 1, "", "cell"], [78, 2, 1, "", "connection"], [78, 1, 1, "", "del_cell"], [78, 1, 1, "", "del_connection"], [78, 1, 1, "", "del_neuron"], [78, 1, 1, "", "forward"], [78, 2, 1, "", "neuron"], [78, 2, 1, "", "synapse"], [78, 2, 1, "", "updater"], [78, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[79, 1, 1, "", "clear"], [79, 2, 1, "", "current"], [79, 1, 1, "", "current_at"], [79, 2, 1, "", "delay"], [79, 2, 1, "", "dt"], [79, 1, 1, "", "extra_repr"], [79, 1, 1, "", "forward"], [79, 1, 1, "", "partialconstructor"], [79, 2, 1, "", "spike"], [79, 1, 1, "", "spike_at"]], "inferno.neural.Updatable": [[81, 1, 1, "", "clear"], [81, 1, 1, "", "defaultupdater"], [81, 2, 1, "", "updatable"], [81, 1, 1, "", "update"], [81, 2, 1, "", "updater"], [81, 1, 1, "", "updatesome"]], "inferno.neural.Updater": [[82, 1, 1, "", "clear"], [82, 1, 1, "", "forward"], [82, 2, 1, "", "names"], [82, 2, 1, "", "parent"]], "inferno.neural.connections.mixins": [[83, 0, 1, "", "WeightBiasDelayMixin"], [84, 0, 1, "", "WeightBiasMixin"], [85, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[83, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[84, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[85, 2, 1, "", "weight"]], "inferno.neural.functional": [[86, 4, 1, "", "adaptive_currents_linear"], [87, 4, 1, "", "adaptive_thresholds_linear_spike"], [88, 4, 1, "", "adaptive_thresholds_linear_voltage"], [89, 4, 1, "", "apply_adaptive_currents"], [90, 4, 1, "", "apply_adaptive_thresholds"], [91, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [92, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [93, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [94, 4, 1, "", "enc_poisson_interval"], [95, 4, 1, "", "enc_poisson_interval_online"], [96, 4, 1, "", "voltage_integration_linear"], [97, 4, 1, "", "voltage_integration_quadratic"], [98, 4, 1, "", "voltage_thresholding_constant"], [99, 4, 1, "", "voltage_thresholding_linear"]], "inferno.neural.mixins": [[100, 0, 1, "", "BatchMixin"], [101, 0, 1, "", "BatchShapeMixin"], [102, 0, 1, "", "DelayedMixin"], [103, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[100, 1, 1, "", "add_batched"], [100, 2, 1, "", "batchsz"]], "inferno.neural.mixins.BatchShapeMixin": [[101, 2, 1, "", "batchedshape"]], "inferno.neural.mixins.DelayedMixin": [[102, 1, 1, "", "add_delayed"], [102, 2, 1, "", "delay"], [102, 2, 1, "", "dt"]], "inferno.neural.mixins.ShapeMixin": [[103, 2, 1, "", "count"], [103, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[104, 0, 1, "", "AdaptiveCurrentMixin"], [105, 0, 1, "", "AdaptiveThresholdMixin"], [106, 0, 1, "", "CurrentMixin"], [107, 0, 1, "", "RefractoryMixin"], [108, 0, 1, "", "SpikeRefractoryMixin"], [109, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptiveCurrentMixin": [[104, 2, 1, "", "current_adaptation"]], "inferno.neural.neurons.mixins.AdaptiveThresholdMixin": [[105, 2, 1, "", "threshold_adapation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[106, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[107, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[108, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[109, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[110, 0, 1, "", "CurrentDerivedSpikeMixin"], [111, 0, 1, "", "CurrentMixin"], [112, 0, 1, "", "SpikeCurrentMixin"], [113, 0, 1, "", "SpikeDerivedCurrentMixin"], [114, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[110, 2, 1, "", "spike"], [110, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.CurrentMixin": [[111, 2, 1, "", "current"], [111, 1, 1, "", "current_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[113, 2, 1, "", "current"], [113, 1, 1, "", "current_at"]], "inferno.neural.synapses.mixins.SpikeMixin": [[114, 2, 1, "", "spike"], [114, 1, 1, "", "spike_at"]], "inferno.observe": [[117, 0, 1, "", "ConditionalCumulativeTraceReducer"], [118, 0, 1, "", "ConditionalNearestTraceReducer"], [119, 0, 1, "", "CumulativeTraceReducer"], [120, 0, 1, "", "DifferenceMonitor"], [121, 0, 1, "", "EMAReducer"], [122, 0, 1, "", "EventReducer"], [123, 0, 1, "", "FoldReducer"], [124, 0, 1, "", "InputMonitor"], [125, 0, 1, "", "Monitor"], [126, 0, 1, "", "MonitorConstructor"], [127, 0, 1, "", "NearestTraceReducer"], [128, 0, 1, "", "OutputMonitor"], [129, 0, 1, "", "PassthroughReducer"], [130, 0, 1, "", "RecordReducer"], [131, 0, 1, "", "Reducer"], [132, 0, 1, "", "ScaledCumulativeTraceReducer"], [133, 0, 1, "", "ScaledNearestTraceReducer"], [134, 0, 1, "", "StateMonitor"]], "inferno.observe.ConditionalCumulativeTraceReducer": [[117, 2, 1, "", "dt"], [117, 1, 1, "", "fold"], [117, 1, 1, "", "interpolate"]], "inferno.observe.ConditionalNearestTraceReducer": [[118, 2, 1, "", "dt"], [118, 1, 1, "", "fold"], [118, 1, 1, "", "interpolate"]], "inferno.observe.CumulativeTraceReducer": [[119, 2, 1, "", "dt"], [119, 1, 1, "", "fold"], [119, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[120, 1, 1, "", "clear"], [120, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[121, 1, 1, "", "fold"], [121, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[122, 1, 1, "", "fold"], [122, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[123, 1, 1, "", "clear"], [123, 2, 1, "", "data"], [123, 1, 1, "", "dump"], [123, 1, 1, "", "fold"], [123, 1, 1, "", "forward"], [123, 1, 1, "", "interpolate"], [123, 1, 1, "", "peek"], [123, 1, 1, "", "push"], [123, 1, 1, "", "view"]], "inferno.observe.InputMonitor": [[124, 1, 1, "", "partialconstructor"]], "inferno.observe.Monitor": [[125, 1, 1, "", "clear"], [125, 1, 1, "", "dump"], [125, 2, 1, "", "latest"], [125, 1, 1, "", "partialconstructor"], [125, 1, 1, "", "peek"], [125, 2, 1, "", "reducer"], [125, 1, 1, "", "register"], [125, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[127, 2, 1, "", "dt"], [127, 1, 1, "", "fold"], [127, 1, 1, "", "interpolate"]], "inferno.observe.OutputMonitor": [[128, 1, 1, "", "partialconstructor"]], "inferno.observe.PassthroughReducer": [[129, 1, 1, "", "fold"], [129, 1, 1, "", "interpolate"]], "inferno.observe.RecordReducer": [[130, 1, 1, "", "add_record"], [130, 2, 1, "", "dt"], [130, 2, 1, "", "duration"]], "inferno.observe.Reducer": [[131, 1, 1, "", "clear"], [131, 1, 1, "", "dump"], [131, 1, 1, "", "forward"], [131, 2, 1, "", "latest"], [131, 1, 1, "", "peek"], [131, 1, 1, "", "push"], [131, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[132, 2, 1, "", "dt"], [132, 1, 1, "", "fold"], [132, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[133, 2, 1, "", "dt"], [133, 1, 1, "", "fold"], [133, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[134, 1, 1, "", "partialconstructor"]], "inferno.stats": [[139, 0, 1, "", "LogNormal"], [140, 0, 1, "", "Normal"], [141, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[139, 1, 1, "", "cdf"], [139, 1, 1, "", "logcdf"], [139, 1, 1, "", "logpdf"], [139, 1, 1, "", "mean"], [139, 1, 1, "", "params_mv"], [139, 1, 1, "", "pdf"], [139, 1, 1, "", "sample"], [139, 1, 1, "", "sample_mv"], [139, 1, 1, "", "validate"], [139, 1, 1, "", "variance"]], "inferno.stats.Normal": [[140, 1, 1, "", "cdf"], [140, 1, 1, "", "logcdf"], [140, 1, 1, "", "logpdf"], [140, 1, 1, "", "mean"], [140, 1, 1, "", "params_mv"], [140, 1, 1, "", "pdf"], [140, 1, 1, "", "sample"], [140, 1, 1, "", "sample_mv"], [140, 1, 1, "", "validate"], [140, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[141, 1, 1, "", "cdf"], [141, 1, 1, "", "logcdf"], [141, 1, 1, "", "logpmf"], [141, 1, 1, "", "mean"], [141, 1, 1, "", "pmf"], [141, 1, 1, "", "sample"], [141, 1, 1, "", "validate"], [141, 1, 1, "", "variance"]], "inferno.types": [[146, 0, 1, "", "ManyToMany"], [147, 0, 1, "", "ManyToManyMethod"], [148, 0, 1, "", "ManyToOne"], [149, 0, 1, "", "ManyToOneMethod"], [150, 0, 1, "", "OneToMany"], [151, 0, 1, "", "OneToManyMethod"], [152, 0, 1, "", "OneToOne"], [153, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 158, 165], "simul": 0, "refractori": [0, 3], "period": [0, 3], "model": [0, 159, 163, 167, 168, 169, 170], "save": 0, "restor": 0, "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 168], "decai": 2, "constant": 2, "trace": [2, 157, 165], "cumul": 2, "nearest": 2, "scale": 2, "paramet": [2, 139, 140, 141], "depend": [2, 158, 165, 166], "soft": 2, "hard": 2, "dirac": 2, "delta": [2, 169, 170], "heavisid": 2, "step": 2, "function": [2, 5, 160], "relationship": 2, "neuron": [3, 74, 159, 160, 163, 166, 167, 168], "system": 3, "dynam": [3, 160], "welcom": 4, "inferno": [4, 5, 157, 158, 159, 160, 161, 162], "": 4, "document": 4, "protocol": 5, "bound": 5, "interpol": [5, 22], "extrapol": [5, 19], "contextualhook": 6, "dimensionalmodul": 7, "hook": [8, 159], "modul": [9, 165], "recordmodul": 10, "shape": [10, 11, 47, 50, 51, 58, 59, 65, 71, 72, 73, 76, 86, 87, 88, 91, 92, 93, 94, 95, 110, 111, 113, 114, 123], "recordtensor": 11, "shapedtensor": 12, "statehook": 13, "astensor": 14, "empti": 15, "exp": 16, "exponential_smooth": 17, "full": 18, "fullbound": 20, "halfbound": 21, "bound_lower_multipl": 23, "bound_lower_pow": 24, "bound_lower_sharp": 25, "bound_multipl": 26, "bound_pow": 27, "bound_sharp": 28, "bound_upper_multipl": 29, "bound_upper_pow": 30, "bound_upper_sharp": 31, "extrap_expdecai": 32, "extrap_expratedecai": 33, "extrap_linear_backward": 34, "extrap_linear_forward": 35, "extrap_nearest": 36, "extrap_neighbor": 37, "extrap_next": 38, "extrap_previ": 39, "interp_expdecai": 40, "interp_expratedecai": 41, "interp_linear": 42, "interp_nearest": 43, "interp_next": 44, "interp_previ": 45, "holt_linear_smooth": 46, "isi": 47, "celltrain": 48, "independenttrain": 49, "mstdpet": [50, 165], "maxrateclassifi": 51, "stdp": [52, 165], "alif": [53, 167], "adex": [54, 168], "bicliqu": 55, "cell": 56, "clamp": 57, "connect": [58, 159], "conv2d": 59, "deltacurr": 60, "deltapluscurr": 61, "eif": [62, 168], "glif1": [63, 167], "glif2": [64, 167], "homogeneouspoissonencod": 65, "infernoneuron": 66, "infernosynaps": 67, "izhikevich": [68, 168], "lif": [69, 167], "layer": 70, "lineardens": 71, "lineardirect": 72, "linearlater": 73, "normal": [75, 115, 116, 140], "poissonintervalencod": 76, "qif": [77, 168], "serial": 78, "synaps": [79, 159, 163, 169, 170], "synapseconstructor": 80, "updat": [81, 82, 158], "weightbiasdelaymixin": 83, "weightbiasmixin": 84, "weightmixin": 85, "adaptive_currents_linear": 86, "adaptive_thresholds_linear_spik": 87, "adaptive_thresholds_linear_voltag": 88, "apply_adaptive_curr": 89, "apply_adaptive_threshold": 90, "enc_homogeneous_poisson_exp_interv": 91, "enc_homogeneous_poisson_exp_interval_onlin": 92, "enc_inhomogenous_poisson_bernoulli_approx": 93, "enc_poisson_interv": 94, "enc_poisson_interval_onlin": 95, "voltage_integration_linear": 96, "voltage_integration_quadrat": 97, "voltage_thresholding_const": 98, "voltage_thresholding_linear": 99, "batchmixin": 100, "batchshapemixin": 101, "delayedmixin": 102, "shapemixin": 103, "adaptivecurrentmixin": 104, "adaptivethresholdmixin": 105, "currentmixin": [106, 111], "refractorymixin": 107, "spikerefractorymixin": 108, "voltagemixin": 109, "currentderivedspikemixin": 110, "spikecurrentmixin": 112, "spikederivedcurrentmixin": 113, "spikemixin": 114, "conditionalcumulativetracereduc": 117, "conditionalnearesttracereduc": 118, "cumulativetracereduc": 119, "differencemonitor": 120, "emareduc": 121, "eventreduc": 122, "foldreduc": 123, "inputmonitor": 124, "monitor": [125, 161], "monitorconstructor": 126, "nearesttracereduc": 127, "outputmonitor": 128, "passthroughreduc": 129, "recordreduc": 130, "reduc": [131, 161], "scaledcumulativetracereduc": 132, "scalednearesttracereduc": 133, "statemonitor": 134, "ones": 135, "rescal": 136, "scalar": 137, "sqrt": 138, "lognorm": 139, "support": [139, 140, 141], "poisson": 141, "trace_cumul": 142, "trace_cumulative_sc": 143, "trace_nearest": 144, "trace_nearest_sc": 145, "manytomani": 146, "manytomanymethod": 147, "manytoon": 148, "manytoonemethod": 149, "onetomani": 150, "onetomanymethod": 151, "onetoon": 152, "onetoonemethod": 153, "uniform": 154, "zero": 155, "api": 156, "refer": [156, 165, 166, 167, 168, 170], "infrastructur": 157, "tensor": 157, "creation": 157, "math": 157, "oper": 157, "spike": [157, 158, 165, 166], "type": [157, 159], "learn": [158, 163, 164, 165], "compon": [158, 159, 161], "plastic": [158, 165], "classifi": 158, "neural": [159, 160], "encod": [159, 160], "intern": 159, "mixin": 159, "observ": 161, "stat": 162, "distribut": 162, "method": [163, 164, 165], "zoo": 163, "overview": [163, 164, 166], "resum": 164, "like": [164, 165], "hebbian": 165, "formul": [165, 166, 167, 168, 169, 170], "delai": 165, "mstdp": 165, "descript": [165, 167, 168, 170], "elig": 165, "triplet": 165, "adapt": [166, 167, 168], "current": [166, 170], "linear": [166, 167], "threshold": 166, "voltag": 166, "leaki": 167, "integr": [167, 168], "fire": [167, 168], "altern": 167, "gener": 167, "1": 167, "2": 167, "3": 167, "glif3": 167, "4": 167, "glif4": 167, "5": 167, "glif5": 167, "nonlinear": 168, "quadrat": 168, "conduct": 169, "base": [169, 170], "coba": 169, "variant": [169, 170], "cuba": 170}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Model Saving and Restoring": [[0, "model-saving-and-restoring"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Trace": [[2, "scaling-trace"]], "Parameter Dependence": [[2, "parameter-dependence"]], "Soft Dependence": [[2, "soft-dependence"]], "Hard Dependence": [[2, "hard-dependence"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "": [[3, "id1"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.functional": [[5, "module-inferno.functional"]], "Protocols": [[5, "protocols"]], "Bounding": [[5, "bounding"]], "Interpolation": [[5, "interpolation"], [22, "interpolation"]], "Extrapolation": [[5, "extrapolation"], [19, "extrapolation"]], "ContextualHook": [[6, "contextualhook"]], "DimensionalModule": [[7, "dimensionalmodule"]], "Hook": [[8, "hook"]], "Module": [[9, "module"]], "RecordModule": [[10, "recordmodule"]], "Shape": [[10, null], [11, null], [11, null], [11, null], [11, null], [11, null], [11, null], [11, null], [47, null], [50, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [58, null], [58, null], [58, null], [58, null], [59, null], [59, null], [59, null], [59, null], [59, null], [59, null], [59, null], [65, null], [71, null], [71, null], [71, null], [71, null], [71, null], [71, null], [71, null], [72, null], [72, null], [72, null], [72, null], [72, null], [72, null], [72, null], [73, null], [73, null], [73, null], [73, null], [73, null], [73, null], [73, null], [76, null], [86, null], [87, null], [88, null], [91, null], [92, null], [93, null], [94, null], [95, null], [110, null], [111, null], [113, null], [114, null], [123, null]], "RecordTensor": [[11, "recordtensor"]], "ShapedTensor": [[12, "shapedtensor"]], "StateHook": [[13, "statehook"]], "astensors": [[14, "astensors"]], "empty": [[15, "empty"]], "exp": [[16, "exp"]], "exponential_smoothing": [[17, "exponential-smoothing"]], "full": [[18, "full"]], "FullBounding": [[20, "fullbounding"]], "HalfBounding": [[21, "halfbounding"]], "bound_lower_multiplicative": [[23, "bound-lower-multiplicative"]], "bound_lower_power": [[24, "bound-lower-power"]], "bound_lower_sharp": [[25, "bound-lower-sharp"]], "bound_multiplicative": [[26, "bound-multiplicative"]], "bound_power": [[27, "bound-power"]], "bound_sharp": [[28, "bound-sharp"]], "bound_upper_multiplicative": [[29, "bound-upper-multiplicative"]], "bound_upper_power": [[30, "bound-upper-power"]], "bound_upper_sharp": [[31, "bound-upper-sharp"]], "extrap_expdecay": [[32, "extrap-expdecay"]], "extrap_expratedecay": [[33, "extrap-expratedecay"]], "extrap_linear_backward": [[34, "extrap-linear-backward"]], "extrap_linear_forward": [[35, "extrap-linear-forward"]], "extrap_nearest": [[36, "extrap-nearest"]], "extrap_neighbors": [[37, "extrap-neighbors"]], "extrap_next": [[38, "extrap-next"]], "extrap_previous": [[39, "extrap-previous"]], "interp_expdecay": [[40, "interp-expdecay"]], "interp_expratedecay": [[41, "interp-expratedecay"]], "interp_linear": [[42, "interp-linear"]], "interp_nearest": [[43, "interp-nearest"]], "interp_next": [[44, "interp-next"]], "interp_previous": [[45, "interp-previous"]], "holt_linear_smoothing": [[46, "holt-linear-smoothing"]], "isi": [[47, "isi"]], "CellTrainer": [[48, "celltrainer"]], "IndependentTrainer": [[49, "independenttrainer"]], "MSTDPET": [[50, "mstdpet"]], "MaxRateClassifier": [[51, "maxrateclassifier"]], "STDP": [[52, "stdp"]], "ALIF": [[53, "alif"]], "AdEx": [[54, "adex"]], "Biclique": [[55, "biclique"]], "Cell": [[56, "cell"]], "Clamping": [[57, "clamping"]], "Connection": [[58, "connection"]], "Conv2D": [[59, "conv2d"]], "DeltaCurrent": [[60, "deltacurrent"]], "DeltaPlusCurrent": [[61, "deltapluscurrent"]], "EIF": [[62, "eif"]], "GLIF1": [[63, "glif1"]], "GLIF2": [[64, "glif2"]], "HomogeneousPoissonEncoder": [[65, "homogeneouspoissonencoder"]], "InfernoNeuron": [[66, "infernoneuron"]], "InfernoSynapse": [[67, "infernosynapse"]], "Izhikevich": [[68, "izhikevich"]], "LIF": [[69, "lif"]], "Layer": [[70, "layer"]], "LinearDense": [[71, "lineardense"]], "LinearDirect": [[72, "lineardirect"]], "LinearLateral": [[73, "linearlateral"]], "Neuron": [[74, "neuron"]], "Normalization": [[75, "normalization"]], "PoissonIntervalEncoder": [[76, "poissonintervalencoder"]], "QIF": [[77, "qif"]], "Serial": [[78, "serial"]], "Synapse": [[79, "synapse"]], "SynapseConstructor": [[80, "synapseconstructor"]], "Updatable": [[81, "updatable"]], "Updater": [[82, "updater"]], "WeightBiasDelayMixin": [[83, "weightbiasdelaymixin"]], "WeightBiasMixin": [[84, "weightbiasmixin"]], "WeightMixin": [[85, "weightmixin"]], "adaptive_currents_linear": [[86, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[87, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[88, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[89, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[90, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[91, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[92, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[93, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[94, "enc-poisson-interval"]], "enc_poisson_interval_online": [[95, "enc-poisson-interval-online"]], "voltage_integration_linear": [[96, "voltage-integration-linear"]], "voltage_integration_quadratic": [[97, "voltage-integration-quadratic"]], "voltage_thresholding_constant": [[98, "voltage-thresholding-constant"]], "voltage_thresholding_linear": [[99, "voltage-thresholding-linear"]], "BatchMixin": [[100, "batchmixin"]], "BatchShapeMixin": [[101, "batchshapemixin"]], "DelayedMixin": [[102, "delayedmixin"]], "ShapeMixin": [[103, "shapemixin"]], "AdaptiveCurrentMixin": [[104, "adaptivecurrentmixin"]], "AdaptiveThresholdMixin": [[105, "adaptivethresholdmixin"]], "CurrentMixin": [[106, "currentmixin"], [111, "currentmixin"]], "RefractoryMixin": [[107, "refractorymixin"]], "SpikeRefractoryMixin": [[108, "spikerefractorymixin"]], "VoltageMixin": [[109, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[110, "currentderivedspikemixin"]], "SpikeCurrentMixin": [[112, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[113, "spikederivedcurrentmixin"]], "SpikeMixin": [[114, "spikemixin"]], "normal": [[115, "normal"]], "normalize": [[116, "normalize"]], "ConditionalCumulativeTraceReducer": [[117, "conditionalcumulativetracereducer"]], "ConditionalNearestTraceReducer": [[118, "conditionalnearesttracereducer"]], "CumulativeTraceReducer": [[119, "cumulativetracereducer"]], "DifferenceMonitor": [[120, "differencemonitor"]], "EMAReducer": [[121, "emareducer"]], "EventReducer": [[122, "eventreducer"]], "FoldReducer": [[123, "foldreducer"]], "InputMonitor": [[124, "inputmonitor"]], "Monitor": [[125, "monitor"]], "MonitorConstructor": [[126, "monitorconstructor"]], "NearestTraceReducer": [[127, "nearesttracereducer"]], "OutputMonitor": [[128, "outputmonitor"]], "PassthroughReducer": [[129, "passthroughreducer"]], "RecordReducer": [[130, "recordreducer"]], "Reducer": [[131, "reducer"]], "ScaledCumulativeTraceReducer": [[132, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[133, "scalednearesttracereducer"]], "StateMonitor": [[134, "statemonitor"]], "ones": [[135, "ones"]], "rescale": [[136, "rescale"]], "scalar": [[137, "scalar"]], "sqrt": [[138, "sqrt"]], "LogNormal": [[139, "lognormal"]], "Parameters": [[139, null], [140, null], [141, null]], "Support": [[139, null], [140, null], [141, null]], "Normal": [[140, "normal"]], "Poisson": [[141, "poisson"]], "trace_cumulative": [[142, "trace-cumulative"]], "trace_cumulative_scaled": [[143, "trace-cumulative-scaled"]], "trace_nearest": [[144, "trace-nearest"]], "trace_nearest_scaled": [[145, "trace-nearest-scaled"]], "ManyToMany": [[146, "manytomany"]], "ManyToManyMethod": [[147, "manytomanymethod"]], "ManyToOne": [[148, "manytoone"]], "ManyToOneMethod": [[149, "manytoonemethod"]], "OneToMany": [[150, "onetomany"]], "OneToManyMethod": [[151, "onetomanymethod"]], "OneToOne": [[152, "onetoone"]], "OneToOneMethod": [[153, "onetoonemethod"]], "uniform": [[154, "uniform"]], "zeros": [[155, "zeros"]], "API Reference": [[156, "api-reference"]], "inferno": [[157, "inferno"]], "Infrastructure": [[157, "infrastructure"]], "Tensor Creation": [[157, "tensor-creation"]], "Math Operations": [[157, "math-operations"]], "Spike Trace": [[157, "spike-trace"]], "Types": [[157, "types"], [159, "types"]], "inferno.learn": [[158, "module-inferno.learn"]], "Components": [[158, "components"], [159, "components"], [161, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[158, "updaters-spike-timing-dependent-plasticity"]], "Classifiers": [[158, "classifiers"]], "inferno.neural": [[159, "module-inferno.neural"]], "Modeling": [[159, "modeling"]], "Neurons": [[159, "neurons"], [163, "neurons"]], "Synapses": [[159, "synapses"], [163, "synapses"]], "Connections": [[159, "connections"]], "Encoders": [[159, "encoders"]], "Hooks": [[159, "hooks"]], "Internal Components": [[159, "internal-components"]], "Internal Mixins": [[159, "internal-mixins"]], "inferno.neural.functional": [[160, "module-inferno.neural.functional"]], "Encodings": [[160, "encodings"]], "Neuronal Dynamics": [[160, "neuronal-dynamics"]], "inferno.observe": [[161, "inferno-observe"]], "Monitors": [[161, "monitors"]], "Reducers": [[161, "reducers"]], "inferno.stats": [[162, "module-inferno.stats"]], "Distributions": [[162, "distributions"]], "Model and Method Zoo": [[163, "model-and-method-zoo"]], "Overview": [[163, "overview"], [164, "overview"], [166, "overview"]], "Learning Methods": [[163, "learning-methods"]], "ReSuMe-Like Learning Methods": [[164, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[165, "stdp-like-learning-methods"]], "Hebbian Learning": [[165, "hebbian-learning"]], "Spike Timing-Dependent Plasticity (STDP)": [[165, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[165, "formulation"], [165, "id1"], [165, "id2"], [166, "formulation"], [166, "id1"], [166, "id3"], [166, "id5"], [167, "formulation"], [167, "id1"], [167, "id4"], [168, "formulation"], [168, "id1"], [168, "id4"], [168, "id7"], [169, "formulation"], [170, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[165, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[165, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Description": [[165, "description"], [167, "description"], [167, "id2"], [167, "id5"], [168, "description"], [168, "id2"], [168, "id5"], [168, "id8"], [170, "description"]], "References": [[165, "references"], [165, "id3"], [166, "references"], [166, "id2"], [166, "id4"], [166, "id6"], [167, "references"], [167, "id3"], [167, "id6"], [168, "references"], [168, "id3"], [168, "id6"], [168, "id9"], [170, "references"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[165, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Triplet Spike-Timing Dependent Plasticity (STDP)": [[165, "triplet-spike-timing-dependent-plasticity-stdp"]], "Neuronal Adaptation": [[166, "neuronal-adaptation"]], "Adaptive Current, Linear": [[166, "adaptive-current-linear"]], "Adaptive Current, Linear Spike-Dependent": [[166, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[166, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[166, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[167, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[167, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[167, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[167, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[167, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[167, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[167, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[167, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[167, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[168, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[168, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[168, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[168, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[168, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[169, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[169, "delta-coba-variant"]], "Synapse Models, Current-Based": [[170, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[170, "delta-cuba-variant"]]}, "indexentries": {"inferno.functional": [[5, "module-inferno.functional"]], "module": [[5, "module-inferno.functional"], [158, "module-inferno.learn"], [159, "module-inferno.neural"], [160, "module-inferno.neural.functional"], [162, "module-inferno.stats"]], "contextualhook (class in inferno)": [[6, "inferno.ContextualHook"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "dims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.dims"]], "dims_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.dims_"]], "extra_repr() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.extra_repr"]], "liveconstrain (dimensionalmodule property)": [[7, "inferno.DimensionalModule.liveconstrain"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "validate() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.validate"]], "hook (class in inferno)": [[8, "inferno.Hook"]], "deregister() (hook method)": [[8, "inferno.Hook.deregister"]], "evalexec (hook property)": [[8, "inferno.Hook.evalexec"]], "register() (hook method)": [[8, "inferno.Hook.register"]], "registered (hook property)": [[8, "inferno.Hook.registered"]], "trainexec (hook property)": [[8, "inferno.Hook.trainexec"]], "module (class in inferno)": [[9, "inferno.Module"]], "get_extra() (module method)": [[9, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[9, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[9, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[9, "inferno.Module.set_extra_state"]], "recordmodule (class in inferno)": [[10, "inferno.RecordModule"]], "aligned() (recordmodule method)": [[10, "inferno.RecordModule.aligned"]], "deregister_constrained() (recordmodule method)": [[10, "inferno.RecordModule.deregister_constrained"]], "dt (recordmodule property)": [[10, "inferno.RecordModule.dt"]], "duration (recordmodule property)": [[10, "inferno.RecordModule.duration"]], "latest() (recordmodule method)": [[10, "inferno.RecordModule.latest"]], "reconstrain() (recordmodule method)": [[10, "inferno.RecordModule.reconstrain"]], "record() (recordmodule method)": [[10, "inferno.RecordModule.record"]], "recordsz (recordmodule property)": [[10, "inferno.RecordModule.recordsz"]], "register_constrained() (recordmodule method)": [[10, "inferno.RecordModule.register_constrained"]], "reset() (recordmodule method)": [[10, "inferno.RecordModule.reset"]], "select() (recordmodule method)": [[10, "inferno.RecordModule.select"]], "linkedattributes (recordtensor attribute)": [[11, "inferno.RecordTensor.LinkedAttributes"]], "recordtensor (class in inferno)": [[11, "inferno.RecordTensor"]], "align() (recordtensor method)": [[11, "inferno.RecordTensor.align"]], "attributes (recordtensor property)": [[11, "inferno.RecordTensor.attributes"]], "constraints (recordtensor property)": [[11, "inferno.RecordTensor.constraints"]], "create() (recordtensor class method)": [[11, "inferno.RecordTensor.create"]], "decr() (recordtensor method)": [[11, "inferno.RecordTensor.decr"]], "deinitialize() (recordtensor method)": [[11, "inferno.RecordTensor.deinitialize"]], "dt (recordtensor property)": [[11, "inferno.RecordTensor.dt"]], "duration (recordtensor property)": [[11, "inferno.RecordTensor.duration"]], "incr() (recordtensor method)": [[11, "inferno.RecordTensor.incr"]], "initialize() (recordtensor method)": [[11, "inferno.RecordTensor.initialize"]], "insert() (recordtensor method)": [[11, "inferno.RecordTensor.insert"]], "latest (recordtensor property)": [[11, "inferno.RecordTensor.latest"]], "peek() (recordtensor method)": [[11, "inferno.RecordTensor.peek"]], "pointer (recordtensor property)": [[11, "inferno.RecordTensor.pointer"]], "pop() (recordtensor method)": [[11, "inferno.RecordTensor.pop"]], "push() (recordtensor method)": [[11, "inferno.RecordTensor.push"]], "read() (recordtensor method)": [[11, "inferno.RecordTensor.read"]], "readrange() (recordtensor method)": [[11, "inferno.RecordTensor.readrange"]], "reconstrain() (recordtensor method)": [[11, "inferno.RecordTensor.reconstrain"]], "recordsz (recordtensor property)": [[11, "inferno.RecordTensor.recordsz"]], "reset() (recordtensor method)": [[11, "inferno.RecordTensor.reset"]], "select() (recordtensor method)": [[11, "inferno.RecordTensor.select"]], "shape (recordtensor property)": [[11, "inferno.RecordTensor.shape"]], "value (recordtensor property)": [[11, "inferno.RecordTensor.value"]], "write() (recordtensor method)": [[11, "inferno.RecordTensor.write"]], "writerange() (recordtensor method)": [[11, "inferno.RecordTensor.writerange"]], "linkedattributes (shapedtensor attribute)": [[12, "inferno.ShapedTensor.LinkedAttributes"]], "shapedtensor (class in inferno)": [[12, "inferno.ShapedTensor"]], "attributes (shapedtensor property)": [[12, "inferno.ShapedTensor.attributes"]], "compatible() (shapedtensor method)": [[12, "inferno.ShapedTensor.compatible"]], "constraints (shapedtensor property)": [[12, "inferno.ShapedTensor.constraints"]], "create() (shapedtensor class method)": [[12, "inferno.ShapedTensor.create"]], "dimensionality (shapedtensor property)": [[12, "inferno.ShapedTensor.dimensionality"]], "ignored (shapedtensor property)": [[12, "inferno.ShapedTensor.ignored"]], "live (shapedtensor property)": [[12, "inferno.ShapedTensor.live"]], "name (shapedtensor property)": [[12, "inferno.ShapedTensor.name"]], "owner (shapedtensor property)": [[12, "inferno.ShapedTensor.owner"]], "reconstrain() (shapedtensor method)": [[12, "inferno.ShapedTensor.reconstrain"]], "resize() (shapedtensor static method)": [[12, "inferno.ShapedTensor.resize"]], "strict (shapedtensor property)": [[12, "inferno.ShapedTensor.strict"]], "valid (shapedtensor property)": [[12, "inferno.ShapedTensor.valid"]], "value (shapedtensor property)": [[12, "inferno.ShapedTensor.value"]], "statehook (class in inferno)": [[13, "inferno.StateHook"]], "forward() (statehook method)": [[13, "inferno.StateHook.forward"]], "hook() (statehook method)": [[13, "inferno.StateHook.hook"]], "module (statehook property)": [[13, "inferno.StateHook.module"]], "register() (statehook method)": [[13, "inferno.StateHook.register"]], "astensors() (in module inferno)": [[14, "inferno.astensors"]], "empty() (in module inferno)": [[15, "inferno.empty"]], "exp() (in module inferno)": [[16, "inferno.exp"]], "exponential_smoothing() (in module inferno)": [[17, "inferno.exponential_smoothing"]], "full() (in module inferno)": [[18, "inferno.full"]], "extrapolation (class in inferno.functional)": [[19, "inferno.functional.Extrapolation"]], "fullbounding (class in inferno.functional)": [[20, "inferno.functional.FullBounding"]], "halfbounding (class in inferno.functional)": [[21, "inferno.functional.HalfBounding"]], "interpolation (class in inferno.functional)": [[22, "inferno.functional.Interpolation"]], "bound_lower_multiplicative() (in module inferno.functional)": [[23, "inferno.functional.bound_lower_multiplicative"]], "bound_lower_power() (in module inferno.functional)": [[24, "inferno.functional.bound_lower_power"]], "bound_lower_sharp() (in module inferno.functional)": [[25, "inferno.functional.bound_lower_sharp"]], "bound_multiplicative() (in module inferno.functional)": [[26, "inferno.functional.bound_multiplicative"]], "bound_power() (in module inferno.functional)": [[27, "inferno.functional.bound_power"]], "bound_sharp() (in module inferno.functional)": [[28, "inferno.functional.bound_sharp"]], "bound_upper_multiplicative() (in module inferno.functional)": [[29, "inferno.functional.bound_upper_multiplicative"]], "bound_upper_power() (in module inferno.functional)": [[30, "inferno.functional.bound_upper_power"]], "bound_upper_sharp() (in module inferno.functional)": [[31, "inferno.functional.bound_upper_sharp"]], "extrap_expdecay() (in module inferno.functional)": [[32, "inferno.functional.extrap_expdecay"]], "extrap_expratedecay() (in module inferno.functional)": [[33, "inferno.functional.extrap_expratedecay"]], "extrap_linear_backward() (in module inferno.functional)": [[34, "inferno.functional.extrap_linear_backward"]], "extrap_linear_forward() (in module inferno.functional)": [[35, "inferno.functional.extrap_linear_forward"]], "extrap_nearest() (in module inferno.functional)": [[36, "inferno.functional.extrap_nearest"]], "extrap_neighbors() (in module inferno.functional)": [[37, "inferno.functional.extrap_neighbors"]], "extrap_next() (in module inferno.functional)": [[38, "inferno.functional.extrap_next"]], "extrap_previous() (in module inferno.functional)": [[39, "inferno.functional.extrap_previous"]], "interp_expdecay() (in module inferno.functional)": [[40, "inferno.functional.interp_expdecay"]], "interp_expratedecay() (in module inferno.functional)": [[41, "inferno.functional.interp_expratedecay"]], "interp_linear() (in module inferno.functional)": [[42, "inferno.functional.interp_linear"]], "interp_nearest() (in module inferno.functional)": [[43, "inferno.functional.interp_nearest"]], "interp_next() (in module inferno.functional)": [[44, "inferno.functional.interp_next"]], "interp_previous() (in module inferno.functional)": [[45, "inferno.functional.interp_previous"]], "holt_linear_smoothing() (in module inferno)": [[46, "inferno.holt_linear_smoothing"]], "isi() (in module inferno)": [[47, "inferno.isi"]], "celltrainer (class in inferno.learn)": [[48, "inferno.learn.CellTrainer"]], "add_cell() (celltrainer method)": [[48, "inferno.learn.CellTrainer.add_cell"]], "add_monitor() (celltrainer method)": [[48, "inferno.learn.CellTrainer.add_monitor"]], "cells (celltrainer property)": [[48, "inferno.learn.CellTrainer.cells"]], "clear() (celltrainer method)": [[48, "inferno.learn.CellTrainer.clear"]], "del_cell() (celltrainer method)": [[48, "inferno.learn.CellTrainer.del_cell"]], "del_monitor() (celltrainer method)": [[48, "inferno.learn.CellTrainer.del_monitor"]], "forward() (celltrainer method)": [[48, "inferno.learn.CellTrainer.forward"]], "get_cell() (celltrainer method)": [[48, "inferno.learn.CellTrainer.get_cell"]], "get_monitor() (celltrainer method)": [[48, "inferno.learn.CellTrainer.get_monitor"]], "monitors (celltrainer property)": [[48, "inferno.learn.CellTrainer.monitors"]], "named_cells (celltrainer property)": [[48, "inferno.learn.CellTrainer.named_cells"]], "named_monitors (celltrainer property)": [[48, "inferno.learn.CellTrainer.named_monitors"]], "named_monitors_of() (celltrainer method)": [[48, "inferno.learn.CellTrainer.named_monitors_of"]], "train() (celltrainer method)": [[48, "inferno.learn.CellTrainer.train"]], "update() (celltrainer method)": [[48, "inferno.learn.CellTrainer.update"]], "independenttrainer (class in inferno.learn)": [[49, "inferno.learn.IndependentTrainer"]], "independenttrainer.unit (class in inferno.learn)": [[49, "inferno.learn.IndependentTrainer.Unit"]], "cell (independenttrainer.unit attribute)": [[49, "inferno.learn.IndependentTrainer.Unit.cell"]], "monitors (independenttrainer.unit attribute)": [[49, "inferno.learn.IndependentTrainer.Unit.monitors"]], "register_cell() (independenttrainer method)": [[49, "inferno.learn.IndependentTrainer.register_cell"]], "state (independenttrainer.unit attribute)": [[49, "inferno.learn.IndependentTrainer.Unit.state"]], "unit() (independenttrainer method)": [[49, "inferno.learn.IndependentTrainer.unit"]], "mstdpet (class in inferno.learn)": [[50, "inferno.learn.MSTDPET"]], "clear() (mstdpet method)": [[50, "inferno.learn.MSTDPET.clear"]], "forward() (mstdpet method)": [[50, "inferno.learn.MSTDPET.forward"]], "register_cell() (mstdpet method)": [[50, "inferno.learn.MSTDPET.register_cell"]], "maxrateclassifier (class in inferno.learn)": [[51, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[51, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[51, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[51, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[51, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[52, "inferno.learn.STDP"]], "forward() (stdp method)": [[52, "inferno.learn.STDP.forward"]], "register_cell() (stdp method)": [[52, "inferno.learn.STDP.register_cell"]], "alif (class in inferno.neural)": [[53, "inferno.neural.ALIF"]], "clear() (alif method)": [[53, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[53, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[53, "inferno.neural.ALIF.forward"]], "adex (class in inferno.neural)": [[54, "inferno.neural.AdEx"]], "clear() (adex method)": [[54, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[54, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[54, "inferno.neural.AdEx.forward"]], "biclique (class in inferno.neural)": [[55, "inferno.neural.Biclique"]], "add_cell() (biclique method)": [[55, "inferno.neural.Biclique.add_cell"]], "add_connection() (biclique method)": [[55, "inferno.neural.Biclique.add_connection"]], "add_neuron() (biclique method)": [[55, "inferno.neural.Biclique.add_neuron"]], "del_cell() (biclique method)": [[55, "inferno.neural.Biclique.del_cell"]], "del_connection() (biclique method)": [[55, "inferno.neural.Biclique.del_connection"]], "del_neuron() (biclique method)": [[55, "inferno.neural.Biclique.del_neuron"]], "wiring() (biclique method)": [[55, "inferno.neural.Biclique.wiring"]], "cell (class in inferno.neural)": [[56, "inferno.neural.Cell"]], "connection (cell property)": [[56, "inferno.neural.Cell.connection"]], "forward() (cell method)": [[56, "inferno.neural.Cell.forward"]], "local_remap() (cell method)": [[56, "inferno.neural.Cell.local_remap"]], "neuron (cell property)": [[56, "inferno.neural.Cell.neuron"]], "postspike (cell property)": [[56, "inferno.neural.Cell.postspike"]], "postvoltage (cell property)": [[56, "inferno.neural.Cell.postvoltage"]], "precurrent (cell property)": [[56, "inferno.neural.Cell.precurrent"]], "prespike (cell property)": [[56, "inferno.neural.Cell.prespike"]], "synapse (cell property)": [[56, "inferno.neural.Cell.synapse"]], "updater (cell property)": [[56, "inferno.neural.Cell.updater"]], "clamping (class in inferno.neural)": [[57, "inferno.neural.Clamping"]], "hook() (clamping method)": [[57, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[58, "inferno.neural.Connection"]], "batched_inshape (connection property)": [[58, "inferno.neural.Connection.batched_inshape"]], "batched_outshape (connection property)": [[58, "inferno.neural.Connection.batched_outshape"]], "batchsz (connection property)": [[58, "inferno.neural.Connection.batchsz"]], "bias (connection property)": [[58, "inferno.neural.Connection.bias"]], "biased (connection property)": [[58, "inferno.neural.Connection.biased"]], "clear() (connection method)": [[58, "inferno.neural.Connection.clear"]], "defaultupdater() (connection method)": [[58, "inferno.neural.Connection.defaultupdater"]], "delay (connection property)": [[58, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[58, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[58, "inferno.neural.Connection.dt"]], "extra_repr() (connection method)": [[58, "inferno.neural.Connection.extra_repr"]], "forward() (connection method)": [[58, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[58, "inferno.neural.Connection.inshape"]], "insize() (connection method)": [[58, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[58, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[58, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[58, "inferno.neural.Connection.outshape"]], "outsize() (connection method)": [[58, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[58, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[58, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[58, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[58, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[58, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[58, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[58, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[59, "inferno.neural.Conv2D"]], "forward() (conv2d method)": [[59, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[59, "inferno.neural.Conv2D.inshape"]], "like_input() (conv2d method)": [[59, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[59, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[59, "inferno.neural.Conv2D.outshape"]], "postsyn_receptive() (conv2d method)": [[59, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[59, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[59, "inferno.neural.Conv2D.selector"]], "deltacurrent (class in inferno.neural)": [[60, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[60, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[60, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[60, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[61, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[61, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[61, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[61, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[62, "inferno.neural.EIF"]], "clear() (eif method)": [[62, "inferno.neural.EIF.clear"]], "dt (eif property)": [[62, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[62, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[63, "inferno.neural.GLIF1"]], "clear() (glif1 method)": [[63, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[63, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[63, "inferno.neural.GLIF1.forward"]], "glif2 (class in inferno.neural)": [[64, "inferno.neural.GLIF2"]], "clear() (glif2 method)": [[64, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[64, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[64, "inferno.neural.GLIF2.forward"]], "homogeneouspoissonencoder (class in inferno.neural)": [[65, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[65, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[65, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[65, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[65, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "infernoneuron (class in inferno.neural)": [[66, "inferno.neural.InfernoNeuron"]], "batchsz (infernoneuron property)": [[66, "inferno.neural.InfernoNeuron.batchsz"]], "clear() (infernoneuron method)": [[66, "inferno.neural.InfernoNeuron.clear"]], "dt (infernoneuron property)": [[66, "inferno.neural.InfernoNeuron.dt"]], "forward() (infernoneuron method)": [[66, "inferno.neural.InfernoNeuron.forward"]], "refrac (infernoneuron property)": [[66, "inferno.neural.InfernoNeuron.refrac"]], "spike (infernoneuron property)": [[66, "inferno.neural.InfernoNeuron.spike"]], "voltage (infernoneuron property)": [[66, "inferno.neural.InfernoNeuron.voltage"]], "infernosynapse (class in inferno.neural)": [[67, "inferno.neural.InfernoSynapse"]], "clear() (infernosynapse method)": [[67, "inferno.neural.InfernoSynapse.clear"]], "current (infernosynapse property)": [[67, "inferno.neural.InfernoSynapse.current"]], "current_at() (infernosynapse method)": [[67, "inferno.neural.InfernoSynapse.current_at"]], "delay (infernosynapse property)": [[67, "inferno.neural.InfernoSynapse.delay"]], "dt (infernosynapse property)": [[67, "inferno.neural.InfernoSynapse.dt"]], "forward() (infernosynapse method)": [[67, "inferno.neural.InfernoSynapse.forward"]], "partialconstructor() (infernosynapse class method)": [[67, "inferno.neural.InfernoSynapse.partialconstructor"]], "spike (infernosynapse property)": [[67, "inferno.neural.InfernoSynapse.spike"]], "spike_at() (infernosynapse method)": [[67, "inferno.neural.InfernoSynapse.spike_at"]], "izhikevich (class in inferno.neural)": [[68, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[68, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[68, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[68, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[69, "inferno.neural.LIF"]], "clear() (lif method)": [[69, "inferno.neural.LIF.clear"]], "dt (lif property)": [[69, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[69, "inferno.neural.LIF.forward"]], "layer (class in inferno.neural)": [[70, "inferno.neural.Layer"]], "add_cell() (layer method)": [[70, "inferno.neural.Layer.add_cell"]], "add_connection() (layer method)": [[70, "inferno.neural.Layer.add_connection"]], "add_neuron() (layer method)": [[70, "inferno.neural.Layer.add_neuron"]], "cells (layer property)": [[70, "inferno.neural.Layer.cells"]], "connections (layer property)": [[70, "inferno.neural.Layer.connections"]], "del_cell() (layer method)": [[70, "inferno.neural.Layer.del_cell"]], "del_connection() (layer method)": [[70, "inferno.neural.Layer.del_connection"]], "del_neuron() (layer method)": [[70, "inferno.neural.Layer.del_neuron"]], "forward() (layer method)": [[70, "inferno.neural.Layer.forward"]], "get_cell() (layer method)": [[70, "inferno.neural.Layer.get_cell"]], "get_connection() (layer method)": [[70, "inferno.neural.Layer.get_connection"]], "get_neuron() (layer method)": [[70, "inferno.neural.Layer.get_neuron"]], "named_cells (layer property)": [[70, "inferno.neural.Layer.named_cells"]], "named_connections (layer property)": [[70, "inferno.neural.Layer.named_connections"]], "named_neurons (layer property)": [[70, "inferno.neural.Layer.named_neurons"]], "named_synapses (layer property)": [[70, "inferno.neural.Layer.named_synapses"]], "neurons (layer property)": [[70, "inferno.neural.Layer.neurons"]], "update() (layer method)": [[70, "inferno.neural.Layer.update"]], "wiring() (layer method)": [[70, "inferno.neural.Layer.wiring"]], "lineardense (class in inferno.neural)": [[71, "inferno.neural.LinearDense"]], "forward() (lineardense method)": [[71, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[71, "inferno.neural.LinearDense.inshape"]], "like_input() (lineardense method)": [[71, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[71, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[71, "inferno.neural.LinearDense.outshape"]], "postsyn_receptive() (lineardense method)": [[71, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[71, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[71, "inferno.neural.LinearDense.selector"]], "lineardirect (class in inferno.neural)": [[72, "inferno.neural.LinearDirect"]], "forward() (lineardirect method)": [[72, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[72, "inferno.neural.LinearDirect.inshape"]], "like_input() (lineardirect method)": [[72, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[72, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[72, "inferno.neural.LinearDirect.outshape"]], "postsyn_receptive() (lineardirect method)": [[72, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[72, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[72, "inferno.neural.LinearDirect.selector"]], "linearlateral (class in inferno.neural)": [[73, "inferno.neural.LinearLateral"]], "delay (linearlateral property)": [[73, "inferno.neural.LinearLateral.delay"]], "forward() (linearlateral method)": [[73, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[73, "inferno.neural.LinearLateral.inshape"]], "like_input() (linearlateral method)": [[73, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[73, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[73, "inferno.neural.LinearLateral.outshape"]], "postsyn_receptive() (linearlateral method)": [[73, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[73, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[73, "inferno.neural.LinearLateral.selector"]], "weight (linearlateral property)": [[73, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[74, "inferno.neural.Neuron"]], "batchedshape (neuron property)": [[74, "inferno.neural.Neuron.batchedshape"]], "batchsz (neuron property)": [[74, "inferno.neural.Neuron.batchsz"]], "clear() (neuron method)": [[74, "inferno.neural.Neuron.clear"]], "count (neuron property)": [[74, "inferno.neural.Neuron.count"]], "dt (neuron property)": [[74, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[74, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[74, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[74, "inferno.neural.Neuron.refrac"]], "shape (neuron property)": [[74, "inferno.neural.Neuron.shape"]], "spike (neuron property)": [[74, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[74, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[75, "inferno.neural.Normalization"]], "hook() (normalization method)": [[75, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[76, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[76, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[76, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[77, "inferno.neural.QIF"]], "clear() (qif method)": [[77, "inferno.neural.QIF.clear"]], "dt (qif property)": [[77, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[77, "inferno.neural.QIF.forward"]], "serial (class in inferno.neural)": [[78, "inferno.neural.Serial"]], "add_cell() (serial method)": [[78, "inferno.neural.Serial.add_cell"]], "add_connection() (serial method)": [[78, "inferno.neural.Serial.add_connection"]], "add_neuron() (serial method)": [[78, "inferno.neural.Serial.add_neuron"]], "cell (serial property)": [[78, "inferno.neural.Serial.cell"]], "connection (serial property)": [[78, "inferno.neural.Serial.connection"]], "del_cell() (serial method)": [[78, "inferno.neural.Serial.del_cell"]], "del_connection() (serial method)": [[78, "inferno.neural.Serial.del_connection"]], "del_neuron() (serial method)": [[78, "inferno.neural.Serial.del_neuron"]], "forward() (serial method)": [[78, "inferno.neural.Serial.forward"]], "neuron (serial property)": [[78, "inferno.neural.Serial.neuron"]], "synapse (serial property)": [[78, "inferno.neural.Serial.synapse"]], "updater (serial property)": [[78, "inferno.neural.Serial.updater"]], "wiring() (serial method)": [[78, "inferno.neural.Serial.wiring"]], "synapse (class in inferno.neural)": [[79, "inferno.neural.Synapse"]], "clear() (synapse method)": [[79, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[79, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[79, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[79, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[79, "inferno.neural.Synapse.dt"]], "extra_repr() (synapse method)": [[79, "inferno.neural.Synapse.extra_repr"]], "forward() (synapse method)": [[79, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[79, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[79, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[79, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[80, "inferno.neural.SynapseConstructor"]], "updatable (class in inferno.neural)": [[81, "inferno.neural.Updatable"]], "clear() (updatable method)": [[81, "inferno.neural.Updatable.clear"]], "defaultupdater() (updatable method)": [[81, "inferno.neural.Updatable.defaultupdater"]], "updatable (updatable property)": [[81, "inferno.neural.Updatable.updatable"]], "update() (updatable method)": [[81, "inferno.neural.Updatable.update"]], "updater (updatable property)": [[81, "inferno.neural.Updatable.updater"]], "updatesome() (updatable method)": [[81, "inferno.neural.Updatable.updatesome"]], "updater (class in inferno.neural)": [[82, "inferno.neural.Updater"]], "clear() (updater method)": [[82, "inferno.neural.Updater.clear"]], "forward() (updater method)": [[82, "inferno.neural.Updater.forward"]], "names (updater property)": [[82, "inferno.neural.Updater.names"]], "parent (updater property)": [[82, "inferno.neural.Updater.parent"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[83, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[83, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[84, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[84, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[85, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[85, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[86, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[87, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[88, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[89, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[90, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[91, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[92, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[93, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[94, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[95, "inferno.neural.functional.enc_poisson_interval_online"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[96, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[97, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding_constant() (in module inferno.neural.functional)": [[98, "inferno.neural.functional.voltage_thresholding_constant"]], "voltage_thresholding_linear() (in module inferno.neural.functional)": [[99, "inferno.neural.functional.voltage_thresholding_linear"]], "batchmixin (class in inferno.neural.mixins)": [[100, "inferno.neural.mixins.BatchMixin"]], "add_batched() (batchmixin method)": [[100, "inferno.neural.mixins.BatchMixin.add_batched"]], "batchsz (batchmixin property)": [[100, "inferno.neural.mixins.BatchMixin.batchsz"]], "batchshapemixin (class in inferno.neural.mixins)": [[101, "inferno.neural.mixins.BatchShapeMixin"]], "batchedshape (batchshapemixin property)": [[101, "inferno.neural.mixins.BatchShapeMixin.batchedshape"]], "delayedmixin (class in inferno.neural.mixins)": [[102, "inferno.neural.mixins.DelayedMixin"]], "add_delayed() (delayedmixin method)": [[102, "inferno.neural.mixins.DelayedMixin.add_delayed"]], "delay (delayedmixin property)": [[102, "inferno.neural.mixins.DelayedMixin.delay"]], "dt (delayedmixin property)": [[102, "inferno.neural.mixins.DelayedMixin.dt"]], "shapemixin (class in inferno.neural.mixins)": [[103, "inferno.neural.mixins.ShapeMixin"]], "count (shapemixin property)": [[103, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[103, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptivecurrentmixin (class in inferno.neural.neurons.mixins)": [[104, "inferno.neural.neurons.mixins.AdaptiveCurrentMixin"]], "current_adaptation (adaptivecurrentmixin property)": [[104, "inferno.neural.neurons.mixins.AdaptiveCurrentMixin.current_adaptation"]], "adaptivethresholdmixin (class in inferno.neural.neurons.mixins)": [[105, "inferno.neural.neurons.mixins.AdaptiveThresholdMixin"]], "threshold_adapation (adaptivethresholdmixin property)": [[105, "inferno.neural.neurons.mixins.AdaptiveThresholdMixin.threshold_adapation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[106, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[106, "inferno.neural.neurons.mixins.CurrentMixin.current"], [111, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[107, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[107, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[108, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[108, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[109, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[109, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[110, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[110, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "spike_at() (currentderivedspikemixin method)": [[110, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike_at"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[111, "inferno.neural.synapses.mixins.CurrentMixin"]], "current_at() (currentmixin method)": [[111, "inferno.neural.synapses.mixins.CurrentMixin.current_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[112, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[113, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[113, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "current_at() (spikederivedcurrentmixin method)": [[113, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current_at"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[114, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[114, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "spike_at() (spikemixin method)": [[114, "inferno.neural.synapses.mixins.SpikeMixin.spike_at"]], "normal() (in module inferno)": [[115, "inferno.normal"]], "normalize() (in module inferno)": [[116, "inferno.normalize"]], "conditionalcumulativetracereducer (class in inferno.observe)": [[117, "inferno.observe.ConditionalCumulativeTraceReducer"]], "dt (conditionalcumulativetracereducer property)": [[117, "inferno.observe.ConditionalCumulativeTraceReducer.dt"]], "fold() (conditionalcumulativetracereducer method)": [[117, "inferno.observe.ConditionalCumulativeTraceReducer.fold"]], "interpolate() (conditionalcumulativetracereducer method)": [[117, "inferno.observe.ConditionalCumulativeTraceReducer.interpolate"]], "conditionalnearesttracereducer (class in inferno.observe)": [[118, "inferno.observe.ConditionalNearestTraceReducer"]], "dt (conditionalnearesttracereducer property)": [[118, "inferno.observe.ConditionalNearestTraceReducer.dt"]], "fold() (conditionalnearesttracereducer method)": [[118, "inferno.observe.ConditionalNearestTraceReducer.fold"]], "interpolate() (conditionalnearesttracereducer method)": [[118, "inferno.observe.ConditionalNearestTraceReducer.interpolate"]], "cumulativetracereducer (class in inferno.observe)": [[119, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[119, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[119, "inferno.observe.CumulativeTraceReducer.fold"]], "interpolate() (cumulativetracereducer method)": [[119, "inferno.observe.CumulativeTraceReducer.interpolate"]], "differencemonitor (class in inferno.observe)": [[120, "inferno.observe.DifferenceMonitor"]], "clear() (differencemonitor method)": [[120, "inferno.observe.DifferenceMonitor.clear"]], "partialconstructor() (differencemonitor class method)": [[120, "inferno.observe.DifferenceMonitor.partialconstructor"]], "emareducer (class in inferno.observe)": [[121, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[121, "inferno.observe.EMAReducer.fold"]], "interpolate() (emareducer method)": [[121, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[122, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[122, "inferno.observe.EventReducer.fold"]], "interpolate() (eventreducer method)": [[122, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[123, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[123, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[123, "inferno.observe.FoldReducer.data"]], "dump() (foldreducer method)": [[123, "inferno.observe.FoldReducer.dump"]], "fold() (foldreducer method)": [[123, "inferno.observe.FoldReducer.fold"]], "forward() (foldreducer method)": [[123, "inferno.observe.FoldReducer.forward"]], "interpolate() (foldreducer method)": [[123, "inferno.observe.FoldReducer.interpolate"]], "peek() (foldreducer method)": [[123, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[123, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[123, "inferno.observe.FoldReducer.view"]], "inputmonitor (class in inferno.observe)": [[124, "inferno.observe.InputMonitor"]], "partialconstructor() (inputmonitor class method)": [[124, "inferno.observe.InputMonitor.partialconstructor"]], "monitor (class in inferno.observe)": [[125, "inferno.observe.Monitor"]], "clear() (monitor method)": [[125, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[125, "inferno.observe.Monitor.dump"]], "latest (monitor property)": [[125, "inferno.observe.Monitor.latest"]], "partialconstructor() (monitor class method)": [[125, "inferno.observe.Monitor.partialconstructor"]], "peek() (monitor method)": [[125, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[125, "inferno.observe.Monitor.reducer"]], "register() (monitor method)": [[125, "inferno.observe.Monitor.register"]], "view() (monitor method)": [[125, "inferno.observe.Monitor.view"]], "monitorconstructor (class in inferno.observe)": [[126, "inferno.observe.MonitorConstructor"]], "nearesttracereducer (class in inferno.observe)": [[127, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[127, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[127, "inferno.observe.NearestTraceReducer.fold"]], "interpolate() (nearesttracereducer method)": [[127, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[128, "inferno.observe.OutputMonitor"]], "partialconstructor() (outputmonitor class method)": [[128, "inferno.observe.OutputMonitor.partialconstructor"]], "passthroughreducer (class in inferno.observe)": [[129, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[129, "inferno.observe.PassthroughReducer.fold"]], "interpolate() (passthroughreducer method)": [[129, "inferno.observe.PassthroughReducer.interpolate"]], "recordreducer (class in inferno.observe)": [[130, "inferno.observe.RecordReducer"]], "add_record() (recordreducer method)": [[130, "inferno.observe.RecordReducer.add_record"]], "dt (recordreducer property)": [[130, "inferno.observe.RecordReducer.dt"]], "duration (recordreducer property)": [[130, "inferno.observe.RecordReducer.duration"]], "reducer (class in inferno.observe)": [[131, "inferno.observe.Reducer"]], "clear() (reducer method)": [[131, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[131, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[131, "inferno.observe.Reducer.forward"]], "latest (reducer property)": [[131, "inferno.observe.Reducer.latest"]], "peek() (reducer method)": [[131, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[131, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[131, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[132, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "interpolate() (scaledcumulativetracereducer method)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[133, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[133, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[133, "inferno.observe.ScaledNearestTraceReducer.fold"]], "interpolate() (scalednearesttracereducer method)": [[133, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[134, "inferno.observe.StateMonitor"]], "partialconstructor() (statemonitor class method)": [[134, "inferno.observe.StateMonitor.partialconstructor"]], "ones() (in module inferno)": [[135, "inferno.ones"]], "rescale() (in module inferno)": [[136, "inferno.rescale"]], "scalar() (in module inferno)": [[137, "inferno.scalar"]], "sqrt() (in module inferno)": [[138, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[139, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[139, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[139, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[139, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[139, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[139, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[139, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[140, "inferno.stats.Normal"]], "cdf() (normal class method)": [[140, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[140, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[140, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[140, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[140, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[140, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[140, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[140, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[140, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[140, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[141, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[141, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[141, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[141, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[141, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[141, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[141, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[141, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[141, "inferno.stats.Poisson.variance"]], "trace_cumulative() (in module inferno)": [[142, "inferno.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno)": [[143, "inferno.trace_cumulative_scaled"]], "trace_nearest() (in module inferno)": [[144, "inferno.trace_nearest"]], "trace_nearest_scaled() (in module inferno)": [[145, "inferno.trace_nearest_scaled"]], "manytomany (class in inferno.types)": [[146, "inferno.types.ManyToMany"]], "manytomanymethod (class in inferno.types)": [[147, "inferno.types.ManyToManyMethod"]], "manytoone (class in inferno.types)": [[148, "inferno.types.ManyToOne"]], "manytoonemethod (class in inferno.types)": [[149, "inferno.types.ManyToOneMethod"]], "onetomany (class in inferno.types)": [[150, "inferno.types.OneToMany"]], "onetomanymethod (class in inferno.types)": [[151, "inferno.types.OneToManyMethod"]], "onetoone (class in inferno.types)": [[152, "inferno.types.OneToOne"]], "onetoonemethod (class in inferno.types)": [[153, "inferno.types.OneToOneMethod"]], "uniform() (in module inferno)": [[154, "inferno.uniform"]], "zeros() (in module inferno)": [[155, "inferno.zeros"]], "inferno.learn": [[158, "module-inferno.learn"]], "inferno.neural": [[159, "module-inferno.neural"]], "inferno.neural.functional": [[160, "module-inferno.neural.functional"]], "inferno.stats": [[162, "module-inferno.stats"]]}})