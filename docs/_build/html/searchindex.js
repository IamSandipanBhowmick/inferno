Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/functional", "reference/generated/inferno.ContextualHook", "reference/generated/inferno.Hook", "reference/generated/inferno.Module", "reference/generated/inferno.RecordTensor", "reference/generated/inferno.ShapedTensor", "reference/generated/inferno.StateHook", "reference/generated/inferno.astensors", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.exponential_smoothing", "reference/generated/inferno.full", "reference/generated/inferno.functional.Extrapolation", "reference/generated/inferno.functional.FullBounding", "reference/generated/inferno.functional.HalfBounding", "reference/generated/inferno.functional.Interpolation", "reference/generated/inferno.functional.bound_lower_multiplicative", "reference/generated/inferno.functional.bound_lower_power", "reference/generated/inferno.functional.bound_lower_sharp", "reference/generated/inferno.functional.bound_multiplicative", "reference/generated/inferno.functional.bound_power", "reference/generated/inferno.functional.bound_sharp", "reference/generated/inferno.functional.bound_upper_multiplicative", "reference/generated/inferno.functional.bound_upper_power", "reference/generated/inferno.functional.bound_upper_sharp", "reference/generated/inferno.functional.extrap_expdecay", "reference/generated/inferno.functional.extrap_expratedecay", "reference/generated/inferno.functional.extrap_linear_backward", "reference/generated/inferno.functional.extrap_linear_forward", "reference/generated/inferno.functional.extrap_nearest", "reference/generated/inferno.functional.extrap_neighbors", "reference/generated/inferno.functional.extrap_next", "reference/generated/inferno.functional.extrap_previous", "reference/generated/inferno.functional.interp_expdecay", "reference/generated/inferno.functional.interp_expratedecay", "reference/generated/inferno.functional.interp_linear", "reference/generated/inferno.functional.interp_nearest", "reference/generated/inferno.functional.interp_next", "reference/generated/inferno.functional.interp_previous", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.isi", "reference/generated/inferno.learn.CellTrainer", "reference/generated/inferno.learn.IndependentTrainer", "reference/generated/inferno.learn.MSTDPET", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.TopRateClassifier", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Cell", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.InfernoNeuron", "reference/generated/inferno.neural.InfernoSynapse", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Updatable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding_constant", "reference/generated/inferno.neural.functional.voltage_thresholding_linear", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.BatchShapeMixin", "reference/generated/inferno.neural.mixins.DelayedMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptiveCurrentMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptiveThresholdMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer", "reference/generated/inferno.observe.ConditionalNearestTraceReducer", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.MonitorConstructor", "reference/generated/inferno.observe.MonitorPool", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.Observable", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.RecordReducer", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.trace_cumulative", "reference/generated/inferno.trace_cumulative_scaled", "reference/generated/inferno.trace_nearest", "reference/generated/inferno.trace_nearest_scaled", "reference/generated/inferno.types.ManyToMany", "reference/generated/inferno.types.ManyToManyMethod", "reference/generated/inferno.types.ManyToOne", "reference/generated/inferno.types.ManyToOneMethod", "reference/generated/inferno.types.OneToMany", "reference/generated/inferno.types.OneToManyMethod", "reference/generated/inferno.types.OneToOne", "reference/generated/inferno.types.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/functional.md", "reference/generated/inferno.ContextualHook.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RecordTensor.rst", "reference/generated/inferno.ShapedTensor.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.astensors.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.exponential_smoothing.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.functional.Extrapolation.rst", "reference/generated/inferno.functional.FullBounding.rst", "reference/generated/inferno.functional.HalfBounding.rst", "reference/generated/inferno.functional.Interpolation.rst", "reference/generated/inferno.functional.bound_lower_multiplicative.rst", "reference/generated/inferno.functional.bound_lower_power.rst", "reference/generated/inferno.functional.bound_lower_sharp.rst", "reference/generated/inferno.functional.bound_multiplicative.rst", "reference/generated/inferno.functional.bound_power.rst", "reference/generated/inferno.functional.bound_sharp.rst", "reference/generated/inferno.functional.bound_upper_multiplicative.rst", "reference/generated/inferno.functional.bound_upper_power.rst", "reference/generated/inferno.functional.bound_upper_sharp.rst", "reference/generated/inferno.functional.extrap_expdecay.rst", "reference/generated/inferno.functional.extrap_expratedecay.rst", "reference/generated/inferno.functional.extrap_linear_backward.rst", "reference/generated/inferno.functional.extrap_linear_forward.rst", "reference/generated/inferno.functional.extrap_nearest.rst", "reference/generated/inferno.functional.extrap_neighbors.rst", "reference/generated/inferno.functional.extrap_next.rst", "reference/generated/inferno.functional.extrap_previous.rst", "reference/generated/inferno.functional.interp_expdecay.rst", "reference/generated/inferno.functional.interp_expratedecay.rst", "reference/generated/inferno.functional.interp_linear.rst", "reference/generated/inferno.functional.interp_nearest.rst", "reference/generated/inferno.functional.interp_next.rst", "reference/generated/inferno.functional.interp_previous.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.isi.rst", "reference/generated/inferno.learn.CellTrainer.rst", "reference/generated/inferno.learn.IndependentTrainer.rst", "reference/generated/inferno.learn.MSTDPET.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.TopRateClassifier.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Cell.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.InfernoNeuron.rst", "reference/generated/inferno.neural.InfernoSynapse.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Updatable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_constant.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_linear.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.BatchShapeMixin.rst", "reference/generated/inferno.neural.mixins.DelayedMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptiveCurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptiveThresholdMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ConditionalNearestTraceReducer.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.MonitorConstructor.rst", "reference/generated/inferno.observe.MonitorPool.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.Observable.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.RecordReducer.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.trace_cumulative.rst", "reference/generated/inferno.trace_cumulative_scaled.rst", "reference/generated/inferno.trace_nearest.rst", "reference/generated/inferno.trace_nearest_scaled.rst", "reference/generated/inferno.types.ManyToMany.rst", "reference/generated/inferno.types.ManyToManyMethod.rst", "reference/generated/inferno.types.ManyToOne.rst", "reference/generated/inferno.types.ManyToOneMethod.rst", "reference/generated/inferno.types.OneToMany.rst", "reference/generated/inferno.types.OneToManyMethod.rst", "reference/generated/inferno.types.OneToOne.rst", "reference/generated/inferno.types.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.functional", "ContextualHook", "Hook", "Module", "RecordTensor", "ShapedTensor", "StateHook", "astensors", "empty", "exp", "exponential_smoothing", "full", "Extrapolation", "FullBounding", "HalfBounding", "Interpolation", "bound_lower_multiplicative", "bound_lower_power", "bound_lower_sharp", "bound_multiplicative", "bound_power", "bound_sharp", "bound_upper_multiplicative", "bound_upper_power", "bound_upper_sharp", "extrap_expdecay", "extrap_expratedecay", "extrap_linear_backward", "extrap_linear_forward", "extrap_nearest", "extrap_neighbors", "extrap_next", "extrap_previous", "interp_expdecay", "interp_expratedecay", "interp_linear", "interp_nearest", "interp_next", "interp_previous", "holt_linear_smoothing", "isi", "CellTrainer", "IndependentTrainer", "MSTDPET", "STDP", "TopRateClassifier", "ALIF", "AdEx", "Biclique", "Cell", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "InfernoNeuron", "InfernoSynapse", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Updatable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding_constant", "voltage_thresholding_linear", "BatchMixin", "BatchShapeMixin", "DelayedMixin", "ShapeMixin", "AdaptiveCurrentMixin", "AdaptiveThresholdMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "ConditionalCumulativeTraceReducer", "ConditionalNearestTraceReducer", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "InputMonitor", "Monitor", "MonitorConstructor", "MonitorPool", "NearestTraceReducer", "Observable", "OutputMonitor", "PassthroughReducer", "RecordReducer", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "sqrt", "LogNormal", "Normal", "Poisson", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"unlik": [0, 9, 11, 64, 65], "artifici": 0, "neuron": [0, 45, 48, 49, 50, 51, 52, 53, 54, 56, 60, 61, 62, 64, 65, 66, 67, 68, 75, 76, 84, 85, 86, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 165, 170], "typic": [0, 2, 8, 165, 166, 168], "found": [0, 8], "ann": 0, "snn": 0, "ar": [0, 2, 9, 10, 12, 46, 48, 49, 50, 52, 53, 56, 57, 60, 63, 66, 67, 68, 69, 70, 71, 74, 75, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 100, 106, 108, 111, 118, 121, 122, 123, 125, 127, 130, 136, 139, 140, 141, 143, 145, 163, 165, 166, 167, 168], "fundament": 0, "state": [0, 3, 8, 9, 10, 11, 15, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 79, 80, 96, 97, 115, 116, 117, 118, 119, 120, 121, 123, 126, 129, 131, 132, 133, 134, 142, 143, 144, 145], "In": [0, 2, 3, 8, 9, 130, 165, 167, 170], "biolog": [0, 2, 3, 167], "electr": [0, 166, 167, 168, 170], "potenti": [0, 2, 3, 24, 25, 26, 27, 28, 29, 48, 49, 51, 52, 54, 60, 61, 62, 64, 66, 67, 72, 75, 84, 85, 86, 94, 95, 96, 97, 106, 165, 166, 167, 168, 170], "differ": [0, 9, 47, 48, 49, 50, 51, 52, 58, 59, 60, 62, 66, 67, 75, 84, 86, 94, 95, 97, 108, 109, 110, 111, 112, 117, 118, 121, 126, 142, 144, 166, 167, 168], "between": [0, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 56, 58, 59, 63, 68, 74, 76, 89, 90, 91, 92, 93, 100, 115, 116, 117, 118, 119, 120, 121, 126, 129, 130, 132, 133, 165, 168], "interior": 0, "exterior": 0, "cell": [0, 46, 47, 48, 49, 51, 52, 53, 60, 62, 66, 67, 68, 75, 76, 94, 95, 125, 165, 166, 167, 168], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 106, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 141, 143, 145, 165, 166, 167, 168, 170], "drive": 0, "forc": [0, 11], "behind": [0, 2], "gener": [0, 2, 3, 9, 10, 45, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 106, 113, 139, 140, 141, 154, 163, 165, 166, 168], "action": [0, 2, 3, 51, 52, 54, 60, 61, 62, 64, 66, 67, 72, 75, 84, 85, 86, 96, 97, 106, 166, 167, 168, 170], "thi": [0, 2, 3, 6, 7, 8, 9, 10, 11, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 62, 63, 64, 65, 66, 68, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 98, 100, 101, 113, 115, 116, 118, 121, 122, 123, 125, 127, 128, 130, 131, 134, 141, 143, 145, 154, 165, 166, 167, 168, 170], "extend": [0, 8, 48, 113, 154], "simplifi": [0, 170], "us": [0, 2, 3, 6, 7, 8, 9, 10, 12, 17, 18, 19, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 75, 76, 78, 80, 84, 86, 89, 94, 95, 108, 109, 110, 111, 112, 115, 116, 118, 121, 123, 124, 125, 139, 140, 141, 143, 145, 167, 168], "when": [0, 2, 6, 7, 8, 9, 10, 11, 12, 32, 33, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 62, 66, 68, 69, 70, 71, 73, 76, 80, 84, 85, 86, 96, 97, 102, 103, 108, 109, 110, 111, 112, 117, 118, 122, 123, 126, 127, 128, 134, 166, 167], "": [0, 2, 7, 8, 10, 11, 15, 44, 46, 48, 49, 52, 55, 60, 63, 66, 68, 73, 74, 75, 76, 79, 84, 86, 89, 90, 91, 92, 93, 95, 114, 115, 116, 118, 119, 121, 123, 127, 131, 132, 133, 134, 136, 143, 145, 166, 167, 168], "import": [0, 2, 8, 53], "treat": [0, 48, 49, 58, 59, 108, 109, 110, 111, 112], "variabl": [0, 8, 48, 49], "separ": [0, 57, 63, 74, 127], "each": [0, 2, 7, 9, 10, 46, 48, 50, 53, 58, 59, 63, 68, 74, 98, 100, 121, 125, 166, 167, 168, 170], "sampl": [0, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 50, 63, 74, 89, 90, 92, 93, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 133, 134, 139, 140, 141, 154], "present": [0, 46, 49, 50, 51, 52, 53, 56, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 77, 81, 82, 83, 98, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 121, 166], "dure": [0, 3, 64, 72, 106], "fix": [0, 3, 51, 52, 60, 61, 62, 66, 67, 75, 141, 168], "hyperparamet": [0, 2, 48, 49, 63, 74, 163], "meanwhil": [0, 3], "do": [0, 46, 165], "need": [0, 8, 9, 10, 63, 89, 90, 127, 134, 165], "duplic": [0, 46, 125], "instead": [0, 2, 8, 127, 167], "broadcast": [0, 56, 59, 84, 85, 86, 87, 88], "batch": [0, 45, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 78, 84, 85, 86, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112], "some": [0, 2, 3, 10, 119, 143, 145], "paramet": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 154, 155, 166, 168], "mai": [0, 2, 3, 8, 9, 46, 48, 49, 53, 57, 125], "includ": [0, 8, 48, 49, 51, 52, 56, 62, 64, 65, 66, 68, 72, 74, 79, 92, 93, 99, 102, 103, 163], "adapt": [0, 3, 51, 52, 62, 64, 66, 84, 85, 86, 87, 88, 102, 103, 142, 143, 144, 145, 163], "behavior": [0, 8, 48, 49, 50, 51, 52, 62, 63, 66, 89, 90, 102, 103, 163, 166, 167], "base": [0, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "input": [0, 2, 6, 7, 12, 13, 14, 16, 46, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 108, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 137, 138, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 166, 167, 168, 170], "A": [0, 2, 10, 48, 49, 51, 52, 62, 66, 102, 103, 115, 116, 117, 126, 132, 133, 141, 142, 143, 144, 145], "common": [0, 58, 59, 65, 72, 77, 78, 118, 122, 123, 124, 128, 134, 165], "exampl": [0, 10, 53, 87, 88, 168], "an": [0, 2, 3, 7, 8, 9, 10, 11, 13, 21, 24, 27, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 80, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 102, 103, 106, 108, 109, 110, 111, 112, 117, 118, 120, 121, 125, 126, 127, 134, 141, 146, 147, 148, 149, 150, 151, 166, 167, 168, 170], "threshold": [0, 51, 52, 62, 66, 85, 86, 88, 96, 97, 102, 103, 163, 167, 168], "where": [0, 2, 9, 10, 23, 26, 29, 45, 46, 48, 49, 50, 53, 56, 57, 63, 68, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 106, 108, 109, 111, 112, 119, 121, 123, 124, 125, 165, 166, 167, 168, 170], "defin": [0, 2, 63, 64, 65, 74, 167], "minimum": [0, 10, 18, 19, 63, 89, 90, 136], "membran": [0, 3, 51, 52, 54, 60, 61, 62, 64, 66, 67, 72, 75, 84, 85, 86, 94, 95, 96, 97, 104, 107, 166, 167, 168], "which": [0, 2, 3, 7, 8, 9, 10, 11, 14, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 141, 154, 165, 166, 167, 168, 170], "spike": [0, 2, 45, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 72, 74, 75, 77, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 106, 108, 110, 111, 112, 163, 167, 168, 170], "These": [0, 50, 53, 59, 166, 167], "should": [0, 6, 7, 8, 9, 10, 11, 17, 20, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 84, 85, 86, 89, 90, 102, 103, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134], "share": [0, 46, 100, 125], "across": [0, 9, 10, 46, 51, 52, 53, 60, 62, 66, 67, 69, 70, 71, 75, 94, 95, 166, 167, 168], "all": [0, 2, 9, 10, 12, 45, 46, 47, 48, 53, 68, 69, 71, 73, 79, 80, 89, 90, 91, 92, 93, 114, 115, 117, 118, 121, 123, 127, 131, 132, 136, 142, 143, 167], "contribut": [0, 115, 116, 132, 133], "portion": 0, "updat": [0, 2, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 62, 66, 68, 76, 84, 85, 86, 96, 97, 102, 103, 124, 142, 143, 144, 145, 165], "also": [0, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46, 48, 49, 51, 52, 56, 57, 62, 64, 66, 68, 69, 70, 71, 76, 91, 102, 103, 143, 145, 167, 168], "appli": [0, 2, 3, 9, 11, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 46, 47, 48, 51, 53, 55, 57, 68, 69, 70, 71, 73, 76, 79, 80, 84, 85, 86, 87, 88, 166, 167, 168, 170], "weight": [0, 2, 48, 49, 50, 56, 57, 69, 70, 71, 81, 82, 83, 165], "bias": [0, 56, 57, 69, 70, 71, 81, 82], "handl": [0, 8, 47], "same": [0, 8, 9, 10, 46, 48, 57, 102, 103, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 129, 130, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 168], "wai": [0, 2, 6, 8, 98, 100, 134], "can": [0, 2, 3, 7, 8, 9, 10, 46, 47, 48, 49, 51, 52, 62, 64, 66, 68, 76, 102, 103, 118, 122, 123, 128, 134, 165, 167, 168], "done": [0, 84, 85, 86], "either": [0, 9, 10, 50, 53, 81, 86, 118, 166], "reduc": [0, 2, 10, 46, 48, 49, 50, 51, 52, 53, 62, 80, 84, 85, 86, 102, 103, 118, 121, 122, 123, 128, 130, 134], "output": [0, 6, 7, 11, 13, 16, 44, 50, 53, 54, 56, 57, 63, 68, 69, 70, 71, 74, 76, 89, 90, 91, 92, 93, 96, 97, 113, 120, 123, 127, 128, 132, 133, 135, 137, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 168], "along": [0, 48, 53, 57, 73, 84, 85, 86, 101, 114, 121, 124, 136], "dimens": [0, 9, 10, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 65, 66, 69, 70, 71, 73, 74, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 102, 103, 114, 121, 136], "The": [0, 2, 3, 9, 10, 11, 17, 20, 45, 46, 47, 48, 49, 50, 53, 54, 57, 59, 63, 68, 74, 76, 80, 87, 88, 89, 90, 92, 93, 108, 111, 118, 120, 121, 122, 124, 125, 127, 128, 132, 133, 134, 139, 141, 143, 145, 166, 168], "former": [0, 166], "more": [0, 3, 9, 10, 48, 49, 51, 52, 58, 59, 60, 61, 62, 66, 67, 75, 80, 84, 85, 86, 163, 166], "effici": [0, 46], "make": [0, 9, 124], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 163], "perform": [0, 2, 7, 9, 15, 44, 50, 55, 57, 73, 121, 141, 142, 143, 144, 145, 165], "inferno": [0, 2, 46, 47, 53, 64, 65, 68, 125, 127, 163, 165, 167, 168], "object": [0, 7, 8, 10, 11, 46, 47, 68, 76, 78, 79, 80, 83, 98, 100, 102, 103, 104, 105, 107, 109, 112, 127], "orient": 0, "interfac": [0, 58, 59, 64, 65], "automat": [0, 8, 9, 10, 46, 50, 64, 65, 68, 84, 85, 86, 123], "But": 0, "certain": 0, "case": [0, 2, 23, 26, 29, 34, 41, 49, 58, 59, 73, 106, 114, 116, 123, 126, 133, 143, 144, 145, 165, 170], "function": [0, 6, 7, 8, 9, 11, 14, 32, 33, 46, 47, 48, 49, 51, 52, 53, 55, 58, 59, 62, 65, 66, 73, 76, 77, 79, 80, 84, 85, 86, 96, 97, 102, 103, 108, 109, 110, 111, 112, 113, 118, 120, 122, 123, 128, 132, 133, 134, 138, 139, 140, 141, 143, 145, 154, 165, 170], "might": 0, "necessari": 0, "hand": [0, 118], "detail": [0, 48, 49, 51, 52, 57, 58, 59, 60, 61, 62, 66, 67, 75, 84, 85, 86, 163], "inform": [0, 6, 7, 9, 56, 72, 77, 80, 166], "process": [0, 46, 48, 49, 53, 63, 68, 89, 90], "arxiv": [0, 166], "1909": 0, "02549": 0, "becaus": [0, 46, 48, 125], "over": [0, 2, 9, 46, 48, 49, 50, 51, 52, 57, 62, 69, 70, 71, 91, 100, 102, 103, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 166, 167, 168, 170], "unit": [0, 9, 47, 48, 49, 115, 116, 117, 119, 120, 126, 129, 130, 132, 133, 170], "relev": [0, 11], "comput": [0, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45, 50, 56, 63, 68, 74, 76, 100, 136, 139, 140, 141], "match": [0, 8, 9, 69, 70, 71, 115, 116, 117, 120, 126, 132, 133, 142, 143, 144, 145], "theoret": 0, "continu": [0, 139], "descript": [0, 163], "specifi": [0, 2, 9, 10, 13, 16, 46, 47, 48, 49, 50, 53, 54, 65, 68, 73, 76, 77, 80, 98, 100, 113, 114, 118, 125, 127, 128, 134, 135, 137, 154, 155], "length": [0, 2, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133, 165, 166, 167, 168, 170], "given": [0, 8, 9, 10, 45, 46, 48, 49, 50, 53, 54, 65, 68, 74, 76, 77, 92, 93, 96, 97, 101, 121, 123, 124, 125, 127, 131, 139, 140, 141, 163, 166, 167, 170], "millisecond": [0, 51, 52, 56, 60, 61, 62, 63, 64, 65, 66, 67, 72, 75, 77, 100, 105, 115, 116, 117, 121, 126, 132, 133], "On": 0, "step": [0, 3, 9, 15, 17, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 106, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133, 142, 143, 144, 145, 165, 166, 167, 168, 170], "amount": [0, 2, 50, 51, 52, 57, 62, 66, 84, 85, 141], "ha": [0, 8, 10, 46, 56, 57, 68, 69, 70, 71, 76, 102, 103, 118, 121, 123, 131, 134, 168, 170], "elaps": 0, "subtract": [0, 9, 118], "from": [0, 2, 8, 9, 10, 13, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 48, 49, 50, 53, 54, 56, 57, 58, 59, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 89, 90, 95, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 125, 126, 128, 129, 132, 133, 135, 137, 139, 140, 141, 154, 155, 165, 168, 170], "remain": [0, 64, 72, 84, 85, 86, 96, 97, 105, 106, 119, 166], "inclus": [0, 55], "bound": [0, 2, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 55, 58, 59, 86, 108, 109, 110, 111, 112, 127], "zero": [0, 9, 10, 45, 57, 69, 70, 71, 73, 114, 118, 141], "equal": [0, 2, 9, 53, 63, 74, 89, 90, 98, 100, 165], "consid": [0, 2, 9, 10, 15, 44, 48, 115, 116, 117, 120, 121, 123, 126, 131, 132, 133, 141, 142, 143, 144, 145, 165, 167], "out": [0, 2, 30, 31, 32, 33, 34, 35, 36, 37, 57, 58, 59, 108, 109, 110, 111, 112], "its": [0, 2, 8, 9, 10, 46, 47, 48, 49, 53, 54, 56, 63, 68, 80, 89, 90, 118, 125, 165, 168, 170], "therefor": [0, 9], "evenli": [0, 9], "divis": 0, "simualt": [0, 51, 52, 57, 58, 59, 60, 62, 66, 67, 69, 70, 71, 75], "practic": [0, 2], "round": [0, 9], "up": [0, 9], "next": [0, 9, 32, 33, 36, 40, 42, 51, 121], "integ": [0, 3, 9], "multipl": [0, 2, 3, 9, 21, 24, 27, 45, 46, 48, 49, 57, 62, 97, 115, 116, 123, 130, 131, 132, 133], "size": [0, 9, 10, 13, 16, 48, 50, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 78, 84, 85, 86, 89, 90, 91, 92, 93, 98, 99, 100, 101, 108, 109, 111, 112, 113, 135, 154, 155], "affect": [0, 3, 9, 48, 143, 145, 163], "onli": [0, 2, 7, 8, 9, 10, 11, 46, 48, 49, 55, 57, 58, 64, 65, 68, 73, 80, 101, 118, 127], "data": [0, 9, 10, 13, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 56, 57, 69, 70, 71, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133, 135, 136, 137, 154, 155], "pass": [0, 6, 7, 9, 11, 46, 48, 49, 51, 52, 53, 56, 57, 62, 66, 68, 69, 70, 71, 76, 102, 103, 108, 109, 110, 111, 112, 118, 122, 123, 128, 134, 170], "through": [0, 3, 9, 56, 57, 69, 70, 71, 127, 170], "itself": [0, 7, 11, 47, 53, 56, 127], "special": 0, "must": [0, 6, 7, 8, 9, 10, 11, 46, 47, 53, 56, 57, 59, 64, 65, 68, 72, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 98, 100, 120, 121, 123, 124, 127, 128, 132, 133, 143, 145], "load": [0, 8], "principl": 0, "modul": [0, 6, 7, 9, 10, 11, 46, 47, 48, 50, 53, 54, 55, 56, 63, 64, 68, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 98, 99, 100, 101, 118, 122, 123, 124, 125, 127, 128, 131, 134, 147, 149, 151, 153, 163], "record": [0, 9, 65, 100, 118, 121, 122, 123, 128, 130, 131, 134], "e": [0, 2, 6, 8, 14, 45, 46, 47, 68, 74, 91, 92, 93, 139, 140, 141, 168], "g": [0, 8, 45, 46, 47, 68], "synaps": [0, 54, 56, 57, 58, 59, 65, 68, 69, 70, 71, 76, 78, 108, 109, 110, 111, 112], "while": [0, 3, 51, 52, 60, 61, 62, 66, 67, 75, 96, 97, 123], "durat": [0, 9, 100, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133], "chang": [0, 8, 9, 10, 46, 47, 49, 56, 57, 69, 70, 119, 165, 166, 170], "underli": [0, 2, 9, 57, 68, 76, 118, 119, 121, 122, 123, 128, 134, 167, 168], "structur": [0, 9, 53], "note": [0, 8, 48, 165, 167, 170], "properti": [0, 2, 7, 8, 9, 10, 11, 13, 16, 46, 50, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 121, 123, 125, 126, 127, 130, 131, 132, 133, 135, 137, 139, 140, 141, 154, 155, 167], "setter": [0, 9, 10, 71, 102, 103, 108, 111], "modifi": [0, 6, 7, 9, 10, 13, 16, 68, 113, 118, 122, 123, 128, 134, 135, 137, 154, 155], "after": [0, 2, 7, 9, 10, 48, 49, 51, 52, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 75, 77, 79, 81, 82, 83, 84, 85, 86, 96, 118, 122, 123, 128, 134, 136, 166, 167, 168], "phenomenon": 2, "rate": [2, 31, 39, 48, 49, 50, 62, 63, 74, 86, 89, 90, 92, 93, 141, 165, 166, 167, 168], "quantiti": 2, "decreas": [2, 165, 166], "proport": [2, 50, 166, 167], "current": [2, 3, 9, 10, 11, 15, 44, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 79, 84, 87, 94, 95, 96, 97, 102, 104, 108, 109, 110, 111, 115, 116, 117, 119, 120, 121, 123, 126, 129, 131, 132, 133, 142, 143, 144, 145, 163, 165, 167, 168], "valu": [2, 3, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 44, 45, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 91, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 166, 167, 168, 170], "It": [2, 9, 46, 48, 49, 64, 68, 168], "describ": [2, 163, 165], "differenti": 2, "equat": 2, "tau": [2, 30, 38, 119, 143], "frac": [2, 9, 30, 32, 33, 38, 40, 48, 49, 50, 51, 52, 57, 60, 62, 66, 67, 75, 84, 85, 89, 90, 95, 115, 116, 117, 119, 126, 132, 133, 139, 140, 141, 142, 143, 144, 145, 165, 166, 167, 168], "dn": 2, "dt": [2, 9, 51, 52, 56, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 100, 115, 116, 117, 126, 130, 132, 133, 165, 166, 167, 168], "n": [2, 9, 48, 49, 63, 69, 70, 71, 87, 88, 89, 90, 139, 140, 141], "solut": [2, 165, 166, 167], "t": [2, 9, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 66, 67, 68, 74, 75, 76, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 106, 115, 116, 117, 119, 126, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 170], "n_0": [2, 45, 50, 63, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 108, 109, 111, 112], "0": [2, 9, 10, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 75, 84, 85, 86, 106, 114, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133, 155, 165, 168, 170], "oft": 2, "neural": [2, 46, 53, 68], "network": [2, 46, 68], "simul": [2, 3, 45, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 78, 84, 85, 86, 94, 95, 96, 97, 100, 115, 116, 117, 121, 126, 132, 133, 166, 167, 168, 170], "involv": 2, "discret": [2, 9, 17, 115, 116, 117, 121, 126, 132, 133, 141, 168, 170], "timestep": [2, 51], "those": [2, 10, 46, 51, 53, 56, 76], "thei": [2, 91, 122, 127, 165], "often": [2, 165, 168], "appear": 2, "form": [2, 6, 7, 8, 49], "exp": [2, 30, 31, 38, 39, 48, 49, 50, 51, 52, 60, 62, 67, 85, 94, 115, 116, 117, 119, 126, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "left": [2, 9, 30, 31, 32, 33, 38, 39, 40, 48, 49, 50, 51, 52, 57, 60, 62, 66, 67, 71, 75, 84, 85, 86, 94, 95, 97, 115, 116, 117, 118, 119, 126, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "right": [2, 9, 30, 31, 32, 33, 38, 39, 40, 48, 49, 50, 51, 52, 57, 60, 62, 66, 67, 71, 75, 84, 85, 86, 94, 95, 97, 115, 116, 117, 118, 119, 126, 132, 133, 139, 140, 142, 143, 144, 145, 165, 166, 167, 168], "wa": [2, 10, 17, 20, 46, 51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 118, 125], "solv": 2, "analyt": 2, "approxim": [2, 52, 60, 66, 75, 84, 86, 91, 95, 165, 166, 168], "via": [2, 46, 47, 68, 127], "euler": [2, 52, 60, 66, 75, 84, 86, 95], "method": [2, 6, 8, 12, 46, 47, 48, 49, 52, 54, 56, 57, 60, 63, 66, 69, 70, 71, 75, 80, 84, 86, 89, 90, 91, 95, 121, 123, 127, 134], "both": [2, 17, 48, 118], "repres": [2, 56, 59, 65, 72, 77, 99, 101, 168], "select": [2, 9, 41, 42, 43, 48, 65, 77, 108, 109, 110, 111, 112, 121], "model": [2, 3, 166], "term": [2, 48, 49, 86, 165, 167], "long": [2, 10, 165], "live": [2, 9, 10], "correspond": [2, 8, 9, 10, 46, 51, 52, 53, 60, 61, 62, 64, 66, 67, 68, 72, 75, 80, 84, 85, 86, 96, 97, 106, 108, 111, 125, 139, 140], "under": [2, 168], "relat": [2, 101, 163, 168], "ne": 2, "k": [2, 50, 84, 85, 86, 87, 88, 141, 143, 147, 149, 151, 153], "That": 2, "repeat": 2, "applic": [2, 115, 116, 117, 119, 120, 126, 129, 132, 133], "1": [2, 9, 10, 15, 21, 23, 24, 26, 27, 29, 44, 45, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 75, 86, 87, 88, 89, 90, 91, 106, 114, 119, 135, 139, 140, 141, 163, 165, 166, 168, 170], "start": [2, 10, 17, 168], "To": [2, 9, 11, 13, 16, 63, 89, 90, 113, 135, 154, 155, 166, 167], "outsid": [2, 121], "notion": 2, "life": 2, "we": [2, 8], "ln": 2, "b": [2, 44, 48, 50, 56, 57, 63, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 108, 109, 111, 112, 118, 134], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 141], "sometim": [2, 21, 22, 23, 24, 25, 26, 27, 28, 29], "lambda": [2, 31, 39, 50, 141, 167], "context": [2, 165, 166], "frequent": 2, "aris": 2, "care": [2, 80], "histori": [2, 9, 49, 65, 130], "activ": [2, 49], "formal": 2, "sum": [2, 48, 49, 50, 51, 52, 53, 62, 66, 102, 103], "previou": [2, 10, 32, 33, 37, 38, 39, 40, 43, 50, 58, 59, 108, 109, 111, 112, 121, 129], "occur": [2, 9, 10, 11, 48, 49, 50, 55, 58, 59, 73, 108, 109, 110, 111, 112, 141, 166, 167, 168, 170], "howev": [2, 46, 125, 134], "purpos": [2, 48, 127, 132, 133], "comparison": 2, "grow": 2, "complex": [2, 14, 15, 16, 44, 73, 114, 115, 116, 117, 126, 132, 133, 137, 138, 142, 143, 144, 145], "quadrat": [2, 66, 75, 95, 163], "respect": [2, 11, 48, 49, 53, 57, 68, 69, 70, 71, 81, 123], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 45, 50, 53, 68, 76, 115, 116, 143, 145, 167], "than": [2, 9, 45, 46, 50, 53, 68, 76, 89, 90, 91, 115, 116, 125, 143, 145, 167, 168], "everi": [2, 10, 46, 48, 49, 63, 68, 89, 90], "prior": [2, 9, 10, 11, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 72, 100, 106, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133, 142, 143, 165], "leav": [2, 167], "tau_x": [2, 115, 116, 117, 126, 132, 133, 142, 143, 144, 145], "dx": 2, "x": [2, 14, 15, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 66, 69, 70, 71, 115, 116, 117, 119, 126, 132, 133, 138, 139, 140, 142, 143, 144, 145, 170], "sum_f": 2, "f": [2, 32, 33, 48, 49, 57, 63, 74, 89, 90, 91, 106, 165], "amplitud": [2, 115, 116, 117, 126, 132, 133, 142, 143, 144, 145], "set": [2, 8, 9, 10, 13, 16, 46, 48, 49, 51, 52, 56, 57, 62, 63, 66, 68, 69, 70, 79, 80, 84, 85, 86, 89, 90, 98, 100, 113, 116, 126, 127, 130, 133, 135, 142, 144, 154, 155, 165, 167, 168], "construct": [2, 13, 16, 58, 59, 65, 68, 77, 78, 113, 118, 122, 123, 124, 128, 134, 135, 154, 155], "evalu": [2, 7, 11, 46, 51, 52, 62, 66, 122], "otherwis": [2, 8, 9, 10, 34, 41, 56, 58, 59, 63, 74, 79, 106, 128, 143], "interpret": 2, "follow": [2, 3, 6, 7, 9, 10, 56, 74, 92, 93, 119, 139, 140, 167], "whenev": 2, "add": [2, 8, 9, 10, 46, 47, 48, 49, 53, 68, 76, 79, 98, 100, 115, 117, 125, 127, 130, 132, 142, 143, 145], "j": [2, 115, 116, 132, 133, 143, 145], "true": [2, 6, 7, 9, 10, 11, 46, 49, 50, 51, 52, 55, 56, 60, 61, 62, 63, 66, 67, 68, 73, 74, 75, 79, 89, 90, 118, 122, 123, 128, 134, 141, 165], "event": [2, 120, 141], "sum_j": 2, "text": [2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 41, 45, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 112, 139, 140, 141, 143, 165, 166, 167, 168, 170], "m": [2, 45, 48, 49, 51, 52, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 74, 75, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 108, 109, 110, 111, 112, 166, 167, 168, 170], "most": [2, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 53, 56, 63, 89, 90, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133, 165, 166], "recent": [2, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 56, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133, 165], "runtim": 2, "cdot": [2, 9, 45, 50, 57, 63, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 108, 109, 111, 112, 121, 165], "iverson": [2, 165], "bracket": [2, 165], "inner": [2, 57, 69, 70, 71, 165], "statement": [2, 165], "fals": [2, 9, 10, 11, 45, 46, 49, 50, 55, 56, 57, 58, 59, 63, 68, 69, 70, 71, 73, 74, 76, 81, 82, 83, 118, 121, 122, 125, 128, 134, 165], "begin": [2, 15, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 48, 49, 51, 52, 57, 58, 59, 62, 66, 106, 116, 119, 126, 133, 143, 144, 145, 165, 166, 167, 168, 170], "neq": [2, 49, 170], "end": [2, 10, 15, 17, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 45, 48, 49, 51, 52, 57, 58, 59, 62, 66, 106, 116, 119, 126, 133, 134, 143, 144, 145, 165, 166, 167, 168, 170], "further": [2, 6, 7], "new": [2, 8, 9, 10, 46, 50, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 98, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 121, 126, 127, 130, 132, 133, 142, 143, 144, 145], "observ": [2, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 54, 58, 59, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129, 131, 132, 133, 134, 139, 140, 142, 143, 144, 145], "h": [2, 57, 115, 116, 117, 126, 132, 133, 142, 143, 144, 145], "meet": 2, "criterion": [2, 115, 116, 120, 132, 133], "ad": [2, 10, 46, 53, 57, 63, 68, 73, 76, 80, 81, 82, 83, 89, 90, 100, 114, 121, 125, 127], "so": [2, 8, 9, 46, 48, 64, 119, 170], "mid": [2, 139, 140, 141], "f_a": 2, "tradition": 2, "connect": [2, 49, 53, 54, 57, 68, 69, 70, 71, 76, 77, 78, 81, 82, 83, 165], "especi": [2, 53], "learn": [2, 48, 49, 50, 51, 52, 56, 57, 62, 66, 69, 70, 71], "contain": [2, 8, 9, 10, 20, 44, 96, 97, 106, 108, 111], "depress": [2, 21, 22, 23, 24, 25, 26, 48, 49, 165, 166], "compon": [2, 48, 143, 145, 166, 167], "techniqu": 2, "limit": [2, 8, 9, 18, 19, 21, 22, 23, 27, 28, 29, 48, 49, 51, 52, 58, 59, 62, 66, 102, 103, 108, 109, 110, 111, 112], "rang": [2, 9, 55, 121], "align": [2, 9, 15, 30, 31, 32, 33, 34, 35, 36, 37, 44, 48, 51, 52, 57, 62, 66, 119, 125, 127, 165, 166, 167, 168], "a_": [2, 165], "v": 2, "v_": [2, 51, 52, 60, 62, 66, 67, 75, 84, 86, 94, 95, 96, 97, 166, 167, 168], "max": [2, 18, 24, 25, 26, 27, 28, 29, 48, 49, 51, 52, 53, 55, 62, 66, 86, 102, 103, 136, 166], "mu_": [2, 22, 25, 28], "eta_": [2, 48, 49], "min": [2, 18, 21, 22, 23, 24, 25, 26, 53, 55, 136], "adjust": [2, 32, 33, 49, 165], "magnitud": [2, 48, 165, 166], "ltp": [2, 48, 49, 165], "ltd": [2, 48, 49, 165], "being": [2, 8, 10, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 66, 67, 68, 74, 75, 76, 89, 90, 91, 92, 93, 99, 101, 118, 122, 123, 127, 128, 134], "upper": [2, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 55], "lower": [2, 18, 19, 21, 22, 23, 24, 25, 26, 55, 86, 166], "origin": [2, 48, 49, 51, 52, 62, 66, 102, 103, 121], "order": [2, 8, 47, 53, 73, 114, 121], "penal": 2, "penalti": 2, "control": [2, 10, 48, 49, 62, 66, 75, 95, 97, 168], "refer": [2, 6, 8, 10, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 49, 51, 52, 57, 58, 59, 60, 61, 62, 66, 67, 75, 80, 84, 85, 86, 123, 127, 163], "power": [2, 21, 22, 24, 25, 27, 28], "law": 2, "theta": [2, 23, 26, 29, 51, 62, 96, 97, 166, 167, 168], "nonneg": [2, 48, 89, 90, 91, 92, 93], "filter": [2, 57, 118, 122, 128, 134], "ani": [2, 3, 6, 7, 8, 9, 10, 11, 12, 46, 47, 48, 49, 54, 56, 59, 68, 71, 76, 81, 82, 108, 109, 110, 111, 112, 118, 121, 122, 123, 125, 127, 128, 134, 167, 168, 170], "would": [2, 10, 11], "move": [2, 9, 47, 119], "beyond": 2, "hold": [2, 9], "int_": 2, "infti": [2, 51, 62, 88, 166, 167, 168], "neg": [2, 9, 18, 24, 25, 26, 116, 133, 145], "argument": [2, 6, 7, 9, 11, 46, 48, 49, 50, 53, 54, 56, 57, 64, 68, 69, 70, 71, 76, 108, 109, 110, 111, 112, 115, 116, 118, 121, 123, 127, 131, 134, 139, 140, 141], "posit": [2, 18, 45, 54, 68, 121, 127], "geq": [2, 23, 26, 29, 96, 97], "deriv": [2, 10, 108, 111, 139, 168], "d": [2, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 108, 109, 111, 112, 121, 166, 167], "And": [2, 57], "integr": [2, 51, 52, 60, 61, 62, 64, 65, 67, 72, 75, 77, 94, 95, 143, 145, 163, 170], "have": [3, 9, 10, 45, 46, 54, 57, 68, 69, 70, 98, 100, 120, 121, 125, 127, 132, 133, 143, 145], "two": [3, 9, 10, 17, 20, 48, 53, 56, 57, 166, 168], "kind": 3, "absolut": [3, 48, 51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 94, 95, 96, 97, 106, 117, 126, 142, 144], "arp": [3, 106], "rel": [3, 9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 54, 115, 116, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 139, 140], "rrp": 3, "cannot": [3, 8, 9, 10, 54, 127, 166], "presynapt": [3, 48, 49, 51, 52, 58, 59, 60, 61, 62, 66, 67, 75, 87, 94, 95, 96, 97, 165, 166, 167, 170], "doe": [3, 8, 9, 46, 53, 68, 76, 101, 108, 111, 125, 141, 170], "depolar": [3, 168], "repolar": 3, "hyperpolar": 3, "mean": [3, 49, 51, 52, 53, 62, 102, 103, 118, 122, 123, 127, 128, 134, 139, 140, 141], "difficult": 3, "fire": [3, 51, 52, 60, 61, 62, 67, 75, 88, 163, 165, 166], "imposs": 3, "time": [3, 9, 11, 15, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 144, 145, 163, 166, 167, 168, 170], "voltag": [3, 51, 52, 54, 60, 61, 62, 64, 66, 67, 72, 75, 84, 85, 86, 88, 94, 95, 96, 97, 107, 163, 167, 168], "reset": [3, 9, 51, 52, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 86, 96, 97, 130, 166, 167, 168], "determin": [3, 12, 13, 16, 46, 57, 69, 70, 71, 92, 113, 117, 125, 126, 127, 135, 137, 154, 155], "strongli": 3, "constant": [3, 30, 31, 38, 39, 48, 49, 51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 94, 95, 115, 116, 117, 119, 126, 132, 133, 165, 166, 167, 168], "wherea": [3, 46], "other": [3, 8, 50, 53, 55, 68, 73, 76, 118, 122, 128, 134, 167], "parameter": [3, 30, 31, 38, 39, 74, 92, 93, 165], "class": [6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153], "prehook": [6, 7, 11, 118, 122, 123, 128, 134], "str": [6, 7, 8, 9, 10, 46, 47, 48, 49, 53, 54, 55, 56, 68, 72, 73, 76, 77, 79, 80, 98, 100, 106, 108, 109, 110, 111, 112, 118, 123, 124, 125, 127, 130, 134, 139, 140, 141], "none": [6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 24, 25, 26, 32, 33, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 69, 70, 71, 73, 74, 76, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 154, 155], "posthook": [6, 7, 118, 122, 123, 128, 134], "prehook_kwarg": [6, 7, 123], "dict": [6, 7, 8, 9, 10, 47, 53, 54, 68, 76, 108, 109, 110, 111, 112, 123, 125, 127, 139, 140, 141], "posthook_kwarg": [6, 7, 123], "train_upd": [6, 7, 11, 55, 73, 118, 122, 123, 128, 134], "bool": [6, 7, 9, 10, 11, 13, 16, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 89, 90, 108, 110, 111, 112, 113, 117, 118, 120, 121, 122, 123, 125, 126, 128, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 154, 155], "eval_upd": [6, 7, 11, 55, 73, 118, 122, 123, 128, 134], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "hook": [6, 11, 46, 55, 68, 73, 118, 123, 134], "provid": [6, 7, 8, 9, 53, 76, 101, 127, 136], "forward": [6, 7, 9, 11, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 118, 121, 122, 123, 128, 131, 134], "subclass": [6, 11, 46, 47, 56, 64, 65, 68, 72, 77, 79, 121, 123, 127], "manag": [6, 7, 65, 80, 96, 97], "safe": [6, 7, 68], "garbag": 6, "collector": 6, "without": [6, 9, 47, 64, 123, 131, 143, 145, 166, 167, 168], "cyclic": 6, "option": [6, 7, 9, 10, 11, 13, 16, 32, 33, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 96, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 154, 155], "name": [6, 8, 9, 10, 46, 47, 48, 49, 53, 54, 55, 68, 73, 76, 80, 98, 100, 123, 125, 127, 130, 134, 139, 140, 141], "execut": [6, 11, 123], "default": [6, 7, 9, 10, 11, 12, 13, 16, 32, 33, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 96, 97, 102, 103, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 154, 155], "keyword": [6, 7, 9, 46, 48, 49, 53, 54, 56, 57, 68, 69, 70, 71, 76, 108, 109, 110, 111, 112, 123, 127], "register_forward_pre_hook": [6, 7, 123], "register_forward_hook": [6, 7, 123], "run": [6, 7, 11, 51, 52, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 72, 73, 75, 77, 118], "train": [6, 7, 11, 45, 46, 47, 48, 51, 52, 54, 55, 62, 63, 66, 73, 74, 89, 90, 91, 92, 93, 118, 122, 123, 128, 134, 163], "mode": [6, 7, 11, 46, 48, 49, 51, 52, 55, 58, 59, 62, 66, 72, 73, 118, 122, 123, 128, 134], "eval": [6, 7, 11, 55, 73, 118, 122, 123, 128, 134], "rais": [6, 7, 8, 9, 10, 11, 14, 46, 47, 53, 54, 56, 64, 65, 68, 72, 76, 77, 79, 121, 123, 125, 127, 166], "runtimeerror": [6, 7, 9, 10, 46, 53, 54, 68, 76, 79, 123, 125], "least": [6, 7, 10, 53], "one": [6, 7, 9, 46, 48, 49, 51, 52, 53, 62, 66, 68, 70, 71, 76, 102, 103, 127, 148, 149, 150, 151, 152, 153, 166], "If": [6, 7, 9, 10, 12, 45, 46, 47, 50, 51, 52, 53, 56, 57, 60, 62, 63, 66, 67, 68, 69, 70, 71, 75, 76, 79, 81, 84, 85, 86, 89, 90, 102, 103, 118, 122, 123, 124, 127, 128, 131], "signatur": [6, 7, 58, 59, 65, 77, 118, 122, 123, 128, 134], "arg": [6, 7, 8, 17, 18, 19, 20, 53, 65, 76, 77, 78, 121, 123, 124, 131, 146, 147, 148, 149, 150, 151, 152, 153], "Or": [6, 7], "with_kwarg": [6, 7], "kwarg": [6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 118, 121, 123, 124, 131, 146, 147, 148, 149, 150, 151, 152, 153], "see": [6, 7, 48, 49, 80, 113, 123, 154, 167, 168], "callabl": [7, 12, 17, 18, 19, 20, 32, 33, 48, 49, 51, 52, 53, 62, 66, 80, 102, 103, 108, 111, 118, 122, 128, 134, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153], "regist": [7, 8, 9, 10, 11, 46, 47, 55, 56, 57, 68, 69, 70, 73, 76, 81, 82, 83, 98, 100, 118, 122, 123, 124, 127, 128, 134], "deregist": [7, 46], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "removablehandl": 7, "call": [7, 8, 9, 10, 11, 46, 47, 48, 49, 54, 55, 56, 64, 68, 73, 76, 81, 82, 83, 118, 121, 122, 123, 128, 131, 134, 141, 165, 167, 168], "befor": [7, 8, 9, 10, 32, 33, 48, 49, 53, 55, 57, 71, 73, 76, 108, 109, 111, 112, 118, 121, 122, 128, 134, 136, 166, 168], "still": [7, 9, 10, 46, 57, 63, 80, 89, 90, 117, 125, 126, 142, 144], "evalexec": 7, "type": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "pytorch": [7, 8, 9, 48, 49, 51, 52, 62, 66, 102, 103, 141], "typeerror": [7, 8], "instanc": [7, 8, 10, 46, 56, 79, 118, 134, 165], "warn": 7, "runtimewarn": 7, "ignor": [7, 9, 10, 11, 118, 122, 128, 134], "alreadi": [7, 9, 10, 46, 53, 68, 76, 128, 134], "registr": [7, 68], "trainexec": 7, "extens": 8, "torch": [8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155], "nn": [8, 9, 10, 11, 46, 47, 55, 56, 73, 81, 82, 83], "extra": [8, 46, 56, 72, 77], "similar": [8, 48, 49, 51, 52, 62, 66, 102, 103, 143, 145], "regular": 8, "tensor": [8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155], "buffer": [8, 9, 10, 64, 65, 98], "enabl": 8, "simpl": [8, 15, 87, 88], "export": 8, "dictionari": [8, 9, 10, 47, 53, 68, 76], "enforc": 8, "exact": [8, 9, 120], "kei": [8, 9, 10, 68], "insert": [8, 9, 53], "requir": [8, 9, 10, 13, 16, 45, 47, 48, 49, 54, 57, 81, 82, 83, 113, 121, 127, 135, 137, 143, 145, 154, 155], "addition": [8, 48, 166], "attribut": [8, 9, 10, 46, 50, 54, 55, 68, 73, 79, 80, 98, 100, 106, 108, 111, 118, 124, 125, 127, 130, 134, 168], "assign": [8, 9, 10, 50, 71, 102, 103], "check": [8, 10, 143, 145], "anoth": [8, 57], "descriptor": 8, "__set__": 8, "like": [8, 9, 10, 13, 16, 17, 20, 48, 49, 51, 52, 56, 57, 62, 65, 66, 69, 70, 71, 77, 102, 103, 113, 127, 135, 137, 154, 155, 163], "__init__": 8, "made": [8, 9, 10, 80, 121], "parent": [8, 80, 127], "child": 8, "constructor": [8, 46, 48, 49, 57, 58, 59, 65, 69, 70, 71, 77, 78, 81, 82, 83, 118, 122, 123, 124, 125, 127, 128, 134], "get_extra": 8, "target": [8, 68, 117, 118, 122, 123, 124, 125, 126, 127, 128, 134, 139, 140, 142, 144], "exist": [8, 10, 45, 46, 50, 51, 53, 68, 76, 79, 80, 121, 123, 125, 165], "throw": 8, "error": [8, 53, 68, 76], "similarli": 8, "specif": [8, 56, 79, 139, 168], "get_submodul": 8, "fulli": [8, 55, 73], "qualifi": [8, 55, 73], "string": [8, 53, 55, 73, 127], "look": 8, "referenc": [8, 54, 123, 127], "attributeerror": [8, 46, 53, 68, 76, 125], "invalid": [8, 10, 48, 49, 80], "path": [8, 46, 124, 127], "termin": 8, "resolv": [8, 46], "someth": 8, "get_extra_st": 8, "state_dict": 8, "implement": [8, 11, 46, 47, 48, 51, 52, 53, 56, 60, 64, 65, 66, 68, 72, 75, 76, 77, 79, 84, 86, 95, 96, 97, 121, 123, 127, 163, 166, 167], "set_extra_st": 8, "your": 8, "you": 8, "store": [8, 9, 48, 49, 50, 65, 71, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134], "build": 8, "picklabl": 8, "ensur": [8, 10], "work": [8, 64, 65, 128, 163], "serial": 8, "backward": [8, 9], "compat": [8, 9, 10, 127], "guarante": [8, 46], "break": 8, "pickl": 8, "register_extra": 8, "manner": [8, 121], "register_buff": 8, "except": [8, 9, 11, 53, 55, 73, 115, 116, 143, 145, 165, 167], "access": [8, 9, 49, 68, 76, 127], "keyerror": 8, "empti": [8, 9, 10, 122, 127], "dot": [8, 46, 54, 118, 125, 127, 134], "notat": [8, 118, 127, 134], "valid": [8, 9, 10, 53, 56, 68, 76, 80, 123, 127, 139, 140, 141], "python": [8, 53], "identifi": [8, 53, 54, 127], "load_state_dict": 8, "within": [8, 9], "owner": [9, 10], "step_tim": [9, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 75, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133, 168], "float": [9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 126, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "constraint": [9, 10, 98, 100], "int": [9, 10, 13, 14, 15, 16, 44, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 89, 90, 92, 93, 98, 99, 101, 102, 103, 113, 114, 115, 116, 117, 126, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 154, 155], "persist_data": [9, 10], "persist_constraint": [9, 10], "persist_tempor": 9, "strict": [9, 10], "shapedtensor": [9, 98], "read": 9, "oper": [9, 10, 57, 118, 121], "peek": [9, 121, 123, 131], "pop": 9, "readrang": 9, "write": 9, "push": [9, 121, 131], "writerang": 9, "belong": [9, 10], "persist": [9, 10, 64], "tempor": [9, 121], "uniqu": [9, 10, 46, 53, 54, 125, 127], "test": [9, 10, 46, 117, 118, 120, 122, 126, 128, 132, 133, 134, 139, 140, 141, 143, 145], "linkedattribut": [9, 10], "alia": [9, 10, 54, 61, 127], "recordtensorattribut": 9, "index": [9, 56, 121], "storag": [9, 121], "oldest": [9, 121], "uniniti": [9, 13], "depend": [9, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 48, 49, 51, 56, 64, 65, 85, 86, 88, 98, 99, 100, 128, 163, 167], "creat": [9, 10, 46, 53, 57, 68, 69, 70, 76, 80, 81, 82, 83, 125, 127], "tupl": [9, 10, 12, 13, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 96, 97, 99, 101, 102, 103, 113, 114, 118, 122, 125, 127, 128, 134, 135, 136, 139, 140, 154, 155], "pointer": 9, "associ": [9, 10, 46, 47, 63, 68, 74, 79, 125], "shift": 9, "transpar": 9, "classmethod": [9, 10, 58, 59, 65, 77, 118, 122, 123, 128, 134, 139, 140, 141], "equival": [9, 10, 21, 24, 27, 115, 116, 121, 165, 167], "attr": [9, 10, 46, 54, 55, 56, 73, 98, 100, 118, 124, 125, 127, 130, 134], "decr": 9, "po": [9, 18, 24, 25, 26], "number": [9, 10, 14, 45, 46, 50, 53, 56, 57, 63, 69, 70, 71, 72, 74, 80, 84, 85, 86, 89, 90, 91, 92, 93, 101, 108, 109, 111, 112, 113, 121, 125, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 154], "locat": [9, 139, 140], "deiniti": 9, "use_uniniti": 9, "uninitializedbuff": [9, 10], "uninitializedparamet": [9, 10], "devic": [9, 13, 16, 47, 113, 135, 137, 154, 155], "gradient": [9, 13, 16, 81, 82, 83, 113, 135, 137, 154, 155], "preserv": [9, 10, 49, 51, 52, 62, 66, 121], "initi": [9, 10, 48, 49, 54, 57, 63, 69, 70, 71, 74, 80, 81, 82, 83, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 127, 131], "reassign": [9, 68], "uninit": 9, "self": [9, 46, 54, 127, 130], "reconstrain": [9, 10], "newest": 9, "entir": 9, "longer": [9, 123, 127], "logic": [9, 48, 53, 68, 76, 96, 97, 143, 145], "divid": 9, "alwai": [9, 127], "although": [9, 80, 141, 165, 168], "larger": 9, "incr": 9, "dtype": [9, 13, 16, 113, 120, 132, 133, 135, 137, 139, 140, 141, 154, 155], "fill": [9, 10, 16, 113, 121, 135, 137, 154, 155], "exclud": [9, 50, 56, 57, 65, 69, 70, 71, 78, 99, 101], "overrid": [9, 13, 16, 46, 48, 49, 50, 113, 135, 137, 154, 155], "place": [9, 10, 47, 68, 98], "tyoe": 9, "ob": [9, 15, 44, 115, 116, 117, 119, 120, 126, 129, 132, 133], "extrap": 9, "extrapol": [9, 30, 31, 32, 33, 34, 35, 36, 37], "toler": [9, 108, 109, 110, 111, 112, 117, 121, 126, 142, 143, 144, 145], "1e": [9, 73, 114, 121], "06": 9, "offset": [9, 54, 56], "inplac": 9, "extrap_kwarg": 9, "element": [9, 10, 12, 48, 50, 53, 57, 68, 69, 70, 71, 73, 76, 89, 90, 91, 92, 93, 101, 114, 115, 116, 117, 120, 126, 132, 133, 142, 143, 144, 145], "scalar": [9, 12, 13, 16, 113, 135, 139, 140, 141, 154, 155], "written": [9, 165], "ever": 9, "attempt": [9, 102, 103], "interpol": [9, 38, 39, 40, 41, 42, 43, 58, 59, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "regardless": [9, 10, 11, 46], "result": [9, 17, 20, 50, 53, 56, 57, 76, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133, 139, 140, 141], "overwritten": 9, "cast": 9, "back": [9, 167], "neighbor": [9, 30, 31, 32, 33, 34, 35, 36, 37, 165], "nearest": [9, 17, 20, 41, 48, 49, 58, 59, 116, 126, 133], "maximum": [9, 18, 19, 45, 48, 49, 50, 57, 58, 59, 63, 65, 69, 70, 71, 74, 77, 78, 91, 100, 108, 109, 110, 111, 112, 121, 136], "co": [9, 48, 49, 58, 59, 108, 109, 110, 111, 112], "6": [9, 165, 166, 168], "no_grad": 9, "valueerror": [9, 10, 46, 53, 68, 76], "plu": 9, "s_0": [9, 15, 44, 119, 121], "ldot": [9, 45, 50, 63, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 121], "scatter": 9, "riski": 9, "onc": [9, 46], "unsupport": [9, 10], "latest": [9, 15, 44, 116, 123, 126, 131, 133, 142, 143, 144, 145], "getter": 9, "delet": [9, 10, 46, 53, 56, 68, 76, 79, 80, 125], "retriev": [9, 46, 108, 109, 111, 112, 125, 127], "indic": [9, 10], "decrement": 9, "unalt": [9, 10], "overwrit": 9, "advanc": 9, "code": 9, "put": [9, 46], "promot": 9, "sequenti": 9, "interv": [9, 45, 57, 63, 69, 70, 71, 74, 89, 90, 92, 93], "first": [9, 17, 45, 53, 58, 59, 68, 76, 87, 88, 89, 91, 92, 167], "l": [9, 56], "dim": [9, 10, 65, 73, 78, 101, 114, 136], "edit": [9, 10], "remov": [9, 10, 46, 127], "shapetensor": 9, "account": [9, 48], "them": [9, 50, 53, 106, 118, 122, 123, 127, 128, 134, 163], "newli": [9, 10, 56, 78, 124], "constrain": [9, 10, 98, 100], "recordsz": 9, "lceil": 9, "delta": [9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 51, 52, 58, 59, 60, 62, 63, 66, 67, 74, 75, 84, 85, 86, 89, 90, 91, 94, 95, 115, 116, 117, 119, 126, 132, 133, 142, 143, 144, 145, 163, 165, 166, 167, 168], "rceil": 9, "For": [9, 10, 48, 49, 51, 52, 58, 59, 60, 61, 62, 66, 67, 68, 75, 84, 85, 86, 87, 88, 115, 116, 117, 118, 119, 126, 132, 133, 134, 165], "interp": 9, "interp_kwarg": [9, 109, 112], "previous": [9, 11, 55, 73], "distinct": [9, 121], "prevent": [9, 10, 11], "act": [9, 11, 127], "etc": [9, 45, 68], "possibl": [9, 46, 50, 121, 125], "caus": 9, "convert": [9, 12], "tot": 9, "hat": 9, "shape": [10, 13, 16, 17, 20, 51, 52, 58, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 78, 99, 101, 102, 103, 113, 135, 137, 154, 155], "conveni": [10, 76], "singl": [10, 11, 20, 47, 53, 76, 128], "neither": [10, 68], "nor": [10, 68], "final": [10, 45, 53, 100, 121], "count": [10, 72, 101, 117, 126, 141, 142, 144], "goe": [10, 166], "shapedtensorattribut": 10, "dimension": [10, 57], "satisfi": 10, "_": [10, 139, 140, 141, 165], "_data": 10, "_constraint": 10, "own": [10, 46, 47, 54, 125], "alter": [10, 46, 47, 57, 69, 70, 101, 130], "resiz": 10, "cut": 10, "off": [10, 46, 106], "toward": [10, 66, 75, 95, 167, 168], "increas": [10, 51, 52, 60, 62, 66, 75, 84, 85, 95, 165, 166, 168], "unconstrain": 10, "static": 10, "preserve_tail": 10, "version": 10, "built": 10, "reshap": [10, 53, 56, 57, 64, 65, 69, 70, 71], "tail": 10, "kept": 10, "head": 10, "slice": [10, 63, 74, 90, 93], "append": 10, "assum": [10, 30, 31, 49, 53, 56, 64, 76, 102, 103, 118], "higher": 10, "expand": [10, 48, 57], "strictli": [10, 46, 125, 141], "met": 10, "as_prehook": [11, 55, 73, 134], "prepend": [11, 55, 73, 118, 122, 127, 128, 134], "always_cal": [11, 55, 73], "contextualhook": [11, 123], "abc": [11, 47, 56, 68, 72, 77, 79, 121, 127, 130, 131], "interact": 11, "even": [11, 46, 53, 55, 68, 73, 76, 118, 134], "trigger": [11, 166, 167, 168], "here": [11, 17, 20, 46, 125, 163], "ignore_mod": 11, "unregist": 11, "normal": [11, 50, 55, 136, 139, 170], "manual": [11, 76], "configur": 11, "abstract": [11, 47, 56, 68, 72, 77, 79, 121, 130, 131], "notimplementederror": [11, 46, 47, 56, 64, 65, 68, 72, 77, 121, 123, 127], "convers": 12, "non": [12, 139, 140, 141], "leftmost": 12, "unspecifi": [12, 53], "layout": [13, 16, 113, 135, 137, 154, 155], "requires_grad": [13, 16, 81, 82, 83, 113, 135, 137, 154, 155], "ndarrai": [14, 138], "agnost": [14, 138], "exponenti": [14, 15, 30, 31, 38, 39, 44, 48, 49, 51, 52, 60, 62, 63, 66, 67, 75, 84, 85, 86, 89, 90, 94, 95, 115, 116, 117, 119, 126, 132, 133, 142, 143, 144, 145, 163, 166], "y": [14, 69, 70, 71, 138, 167], "numpi": [14, 138], "level": [15, 44], "alpha": [15, 44, 119], "smooth": [15, 44, 119], "x_0": [15, 44, 119], "s_": [15, 44, 119], "x_": [15, 44, 48, 49, 119, 143, 165], "s_t": [15, 44, 119], "factor": [15, 44, 48, 119, 168], "revis": [15, 44], "protocol": [17, 18, 19, 20, 78, 124, 146, 147, 148, 149, 150, 151, 152, 153], "prev_data": [17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "next_data": [17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "sample_at": [17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "total": [17, 20, 50, 166, 167, 168, 170], "2": [17, 34, 57, 62, 139, 140, 141, 163, 168], "second": [17, 53, 68, 76, 115, 116, 167], "subsequ": [17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 59, 115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "param": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 79, 80], "part": 18, "scale": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 49, 50, 63, 73, 74, 92, 93, 114, 115, 116, 132, 133, 139, 140, 143, 145, 165], "partial": [19, 46, 57, 58, 59, 65, 69, 70, 71, 77, 118, 122, 123, 125, 127, 128, 134], "sinc": [20, 63, 89, 90, 120], "soft": [21, 22, 24, 25, 27, 28], "expon": [21, 22, 24, 25, 27, 28], "u_": [21, 22, 23, 24, 25, 26, 27, 28, 29], "p": [21, 22, 23, 24, 25, 26, 27, 28, 29, 73, 114, 139, 140, 141, 165], "p_": [21, 22, 23, 24, 25, 26, 27, 28, 29], "sharp": [23, 26, 29, 52, 60, 168], "hard": [23, 26, 29], "u": [24, 25, 26], "upper_pow": 25, "lower_pow": 25, "time_const": [30, 38, 60, 61, 67, 75, 84, 85, 94, 95, 115, 116, 117, 126, 132, 133], "decai": [30, 31, 38, 39, 48, 49, 50, 51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 94, 95, 115, 116, 117, 126, 132, 133, 142, 143, 144, 145, 166, 167], "dynam": [30, 31, 51, 52, 58, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 80, 94, 95, 96, 97, 166, 167, 168], "t_": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 106, 165], "rate_const": [31, 39], "linearli": [32, 33, 63, 74], "ident": [32, 33, 53, 76, 122], "closest": 34, "leq": [34, 117, 126, 139, 140, 141, 142, 144], "linearlli": 40, "trend": 44, "beta": 44, "holt": 44, "linear": [44, 51, 69, 70, 71, 84, 85, 86, 87, 88, 94, 119, 163, 168], "b_0": 44, "x_1": 44, "b_": 44, "b_t": 44, "time_first": 45, "transform": [45, 53, 69, 70, 71, 76], "inter": [45, 47, 63, 89, 90], "pad": [45, 53, 57], "nan": 45, "could": 45, "fewer": 45, "point": [45, 63, 89, 90, 141, 168], "calcul": [45, 48, 49, 50, 118, 121, 165, 167], "last": [45, 54, 56, 64, 72, 84, 85, 86, 106, 120, 121, 123, 170], "interspik": 45, "c": [45, 53, 57], "popul": 45, "amongst": [45, 46, 125, 127], "trainer": [46, 47, 125], "layer": [46, 47, 48, 49, 53, 54, 76], "monitor": [46, 47, 48, 49, 54, 68, 118, 122, 124, 125, 127, 128, 134, 166], "likewis": [46, 47, 165], "add_cel": [46, 53, 68, 76], "auxiliari": [46, 47, 48, 49], "add_monitor": [46, 125, 127], "monitorconstructor": [46, 118, 122, 123, 125, 127, 128, 134], "tag": [46, 125, 127], "trainabl": [46, 47, 48, 49, 56, 80], "seper": [46, 54, 125, 127], "alias": [46, 125], "pool": [46, 54, 125, 127], "bypass": 46, "less": [46, 89, 90, 125], "cours": 46, "iter": [46, 53, 63, 68, 74, 90, 93, 125, 127], "yield": [46, 63, 68, 74, 90, 93, 125], "clear": [46, 51, 52, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 72, 75, 77, 79, 80, 118, 121, 123, 131], "addit": [46, 48, 56, 57, 62, 63, 69, 70, 71, 79, 89, 90, 97, 143, 145, 166, 167], "overridden": [46, 48, 49, 123, 131], "well": [46, 82, 163], "doesn": [46, 53, 68, 76, 84, 85, 86], "del_cel": [46, 53, 68, 76], "again": [46, 53], "del_monitor": [46, 125], "get_cel": [46, 68], "get": [46, 47, 63, 68, 89, 90, 125], "get_monitor": [46, 125], "togeth": [46, 125, 165], "named_cel": [46, 68], "named_monitor": [46, 125], "named_monitors_of": [46, 125], "associt": [46, 125], "cumul": [46, 48, 49, 68, 115, 117, 132, 139, 140, 141, 165], "clamp": [46, 68, 91], "celltrain": 47, "moduledict": 47, "get_unit": 47, "alongsid": 47, "register_cel": [47, 48, 49], "lr_post": [48, 49], "lr_pre": [48, 49], "tc_post": [48, 49], "tc_pre": [48, 49], "tc_elig": 48, "interp_toler": [48, 49], "batch_reduct": [48, 49, 51, 52, 62, 66, 102, 103], "field_reduct": [48, 49], "independenttrain": [48, 49], "plastic": [48, 49, 163], "elig": [48, 163], "trace": [48, 49, 115, 116, 117, 126, 132, 133, 142, 143, 144, 145, 163], "w": [48, 49, 57, 69, 70, 71, 165], "gamma": [48, 141, 165], "r": [48, 139, 140, 141, 165, 167], "z_": 48, "post": [48, 49, 56, 57, 69, 70, 71, 118, 165], "pre": [48, 49, 56, 57, 69, 70, 71, 118, 165], "tau_z": [48, 165], "tau_": [48, 49, 165], "t_n": [48, 49, 165], "sign": [48, 49], "reinforc": 48, "split": 48, "sgn": [48, 49], "hebbian": [48, 49, 163], "anti": [48, 49, 165], "reward": [48, 165], "signal": 48, "keep": [48, 49, 51, 52, 62, 66, 102, 103], "mind": 48, "reason": 48, "postsynapt": [48, 49, 56, 64, 72, 84, 85, 86, 106, 165, 166], "trace_mod": [48, 49], "liter": [48, 49, 53, 58, 59], "recept": [48, 49], "field": [48, 49, 167, 168], "expect": [48, 49, 57, 63, 68, 69, 70, 71, 74, 89, 90, 91, 92, 93, 128, 139, 140, 141], "basi": [48, 49, 125, 127], "custom": [48, 49, 51, 52, 53, 62, 66, 102, 103], "visit": [48, 49, 51, 52, 58, 59, 60, 61, 62, 66, 67, 75, 84, 85, 86, 87, 88], "zoo": [48, 49, 51, 52, 58, 59, 60, 61, 62, 66, 67, 75, 84, 85, 86, 87, 88], "delai": [49, 54, 56, 57, 58, 59, 65, 69, 70, 71, 77, 78, 81, 100, 163], "bigl": 49, "f_": [49, 106, 143, 165], "bigr": 49, "x_n": 49, "tau_n": 49, "un": 49, "selector": [49, 56, 57, 58, 59, 65, 69, 70, 71, 77, 108, 109, 111, 112], "num_class": 50, "classifi": 50, "per": [50, 57, 108, 109, 111, 112], "intern": [50, 71], "multipli": [50, 143, 145, 167], "b_k": [50, 52, 66, 84, 86, 166, 168], "group": [50, 51, 52, 53, 56, 58, 59, 60, 62, 65, 66, 67, 72, 75, 76, 77, 78, 84, 85, 86, 99, 101], "decay_r": 50, "logit": 50, "label": 50, "infer": 50, "ground": 50, "truth": 50, "predict": 50, "were": [50, 53], "gather": 50, "averag": [50, 84, 85, 86, 119], "nclass": 50, "ndim": 50, "l_1": 50, "raw": 50, "recalcul": 50, "rest_v": [51, 52, 60, 61, 62, 66, 67, 75, 84, 86, 94, 95, 97], "reset_v": [51, 52, 60, 61, 66, 67, 75, 96], "thresh_eq_v": [51, 62, 168], "refrac_t": [51, 52, 60, 61, 62, 66, 67, 75, 96, 97], "tc_membran": [51, 52, 62, 66], "tc_adapt": [51, 52, 66], "spike_incr": [51, 52, 62, 66, 84, 85], "resist": [51, 52, 60, 61, 62, 66, 67, 75, 94, 95, 167], "batch_siz": [51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 75, 78, 98, 99], "adaptivethresholdmixin": [51, 62], "voltagemixin": [51, 52, 60, 61, 62, 66, 67, 75], "spikerefractorymixin": [51, 52, 60, 61, 62, 66, 67, 75], "infernoneuron": [51, 52, 60, 61, 62, 66, 67, 75], "leaki": [51, 61, 62, 67, 163], "v_m": [51, 52, 60, 62, 66, 67, 75, 84, 86, 94, 95, 96, 97, 166, 167, 168], "rest": [51, 52, 58, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 84, 86, 94, 95, 97, 166, 167, 168], "r_mi": [51, 52, 60, 62, 66, 67, 75, 94, 95, 167, 168], "tau_m": [51, 52, 60, 62, 66, 67, 75, 94, 95, 167, 168], "theta_": [51, 62, 86, 88, 166, 167, 168], "sum_k": [51, 52, 62, 66, 166, 167, 168], "theta_k": [51, 62, 85, 86, 88, 166, 167], "tau_k": [51, 52, 66, 84, 85, 166, 167, 168], "leftarrow": [51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 96, 97, 166, 167, 168], "d_k": [51, 62, 66, 166, 167, 168], "equilibrium": [51, 52, 60, 62, 66, 67, 75, 84, 86, 88, 94, 95, 97, 166, 167, 168], "mv": [51, 52, 60, 62, 66, 67, 75, 84, 85, 86, 88, 94, 95, 96, 97, 107, 166, 167, 168], "refractori": [51, 52, 60, 61, 62, 63, 64, 66, 67, 72, 75, 84, 85, 86, 89, 90, 94, 95, 96, 97, 105, 106], "period": [51, 52, 60, 61, 62, 63, 64, 66, 67, 72, 75, 84, 85, 86, 89, 90, 94, 95, 96, 97, 105, 106], "r_m": [51, 52, 60, 62, 66, 67, 75, 94, 95, 167], "omega": [51, 52, 60, 62, 66, 67, 75, 94, 95, 167], "keep_adapt": [51, 52, 62, 66], "refrac_lock": [51, 52, 60, 61, 62, 66, 67, 75], "na": [51, 52, 60, 61, 62, 66, 67, 75, 84, 87, 94, 95, 96, 97, 104, 108, 109, 110, 166, 167, 168, 170], "rheobase_v": [52, 60], "thresh_v": [52, 60, 61, 66, 67, 75, 96, 97, 168], "voltage_coupl": [52, 66, 84], "adaptivecurrentmixin": [52, 66], "delta_t": [52, 60, 168], "v_t": [52, 60, 168], "i_x": [52, 59, 66, 166, 168, 170], "w_k": [52, 66, 84, 87, 166, 168], "a_k": [52, 84, 85, 86, 166, 168], "approach": [52, 60, 168], "rapidli": [52, 60], "steep": [52, 60, 168], "natur": [52, 60, 66, 75, 95, 139, 140, 141], "abov": [52, 60, 166, 168], "rheobas": [52, 60, 168], "strength": [52, 66, 75, 84, 95], "coupl": [52, 66, 84, 166, 168], "mu": [52, 66, 84, 139, 140, 166, 167, 168], "onetoon": [53, 57, 69, 70, 71, 76, 96, 97, 120, 132, 133], "combin": 53, "stack": 53, "prod": [53, 69, 70, 71], "complet": 53, "bipartit": 53, "graph": 53, "three": 53, "third": 53, "take": [53, 91, 128, 138, 146, 147, 148, 149, 150, 151, 152, 153], "einop": 53, "produc": [53, 54], "receiv": [53, 76, 122, 165], "ouput": 53, "__call__": [53, 68], "captur": [53, 76], "py": [53, 56, 57, 68, 69, 70, 71, 76], "meth": [53, 56, 57, 69, 70, 71, 76], "specifyi": [53, 68, 76], "add_connect": [53, 68, 76], "add_neuron": [53, 68, 76], "hasn": [53, 68, 76], "been": [53, 68, 76, 121, 127], "pair": [53, 54, 68, 76], "del_connect": [53, 68, 76], "del_neuron": [53, 68, 76], "wire": [53, 68, 76, 165], "topologi": [53, 76], "submodul": [54, 124], "compos": [54, 56, 118], "local_remap": [54, 127], "local": [54, 127], "remap": [54, 127], "callback": [54, 127], "realign": [54, 127], "accept": [54, 127], "postspik": 54, "postvoltag": 54, "millivolt": [54, 64, 72, 107], "precurr": 54, "syncurr": [54, 56], "synapt": [54, 56, 57, 58, 59, 65, 69, 70, 71, 77, 108, 109, 110, 111], "prespik": 54, "synspik": [54, 56], "statehook": [55, 73], "batched_inshap": 56, "batched_outshap": [56, 69, 70, 71], "batchsz": [56, 64, 72, 98], "bia": [56, 57, 69, 70, 71, 81, 82], "learnabl": [56, 57, 69, 70, 71, 81, 82, 83], "clearabl": 56, "defaultupdat": [56, 79], "exclude_weight": 56, "exclude_bia": 56, "exclude_delai": 56, "delayedbi": 56, "maxmimum": 56, "extra_repr": [56, 72, 77], "inshap": [56, 57, 69, 70, 71], "insiz": 56, "cach": 56, "refresh": 56, "like_input": [56, 57, 69, 70, 71], "like_synapt": [56, 57, 69, 70, 71], "outshap": [56, 57, 69, 70, 71], "outsiz": 56, "postsyn_recept": [56, 57, 69, 70, 71], "presyn_recept": [56, 57, 69, 70, 71], "height": 57, "width": 57, "channel": 57, "kernel": 57, "stride": 57, "dilat": 57, "synapseconstructor": [57, 58, 59, 65, 69, 70, 71, 77], "weight_init": [57, 69, 70, 71], "bias_init": [57, 69, 70, 71], "delay_init": [57, 69, 70, 71], "weightbiasdelaymixin": [57, 69, 70, 71], "convolut": 57, "spatial": 57, "plane": 57, "support": [57, 58, 59, 65, 69, 70, 71, 77, 78, 100, 165], "kh": 57, "kw": 57, "delay_": [57, 69, 70, 81], "effect": [57, 69, 70, 166, 168], "unless": [57, 69, 70, 123, 131], "later": [57, 69, 70], "uniform": [57, 69, 70, 71], "random": [57, 69, 70, 71, 113, 139, 140, 141, 154], "rand": [57, 69, 70, 71, 154], "h_": 57, "w_": 57, "formula": 57, "document": 57, "lfloor": [57, 141], "p_h": 57, "d_h": 57, "k_h": 57, "s_h": 57, "rfloor": [57, 141], "p_w": 57, "d_w": 57, "k_w": 57, "s_w": 57, "ph": 57, "pw": 57, "side": [57, 167], "dh": 57, "dw": [57, 165], "sh": [57, 115, 116, 132, 133, 143, 145], "sw": 57, "reli": 57, "upon": [57, 168], "consequenti": 57, "memori": 57, "spike_q": [58, 59], "interp_mod": [58, 59], "interp_tol": [58, 59], "current_overbound": [58, 59, 108, 110, 111], "spike_overbound": [58, 59, 108, 110, 111], "spikederivedcurrentmixin": 58, "infernosynaps": [58, 59], "memoryless": [58, 59], "respond": [58, 59, 166], "instantan": [58, 59], "q": [58, 59, 170], "spike_": [58, 59], "recordtensor": [58, 59, 100, 130], "charg": [58, 59, 170], "carri": [58, 59, 170], "pc": [58, 59, 170], "replac": [58, 59, 108, 109, 110, 111, 112], "cuba": [58, 59, 163], "variant": [58, 59, 163], "partialconstructor": [58, 59, 65, 77, 118, 122, 123, 128, 134], "spikecurrentmixin": 59, "passthrough": [59, 129], "current_": 59, "inject": 59, "glif": [61, 62, 163, 166, 167], "lif": [61, 163], "reset_v_add": 62, "reset_v_mul": 62, "rc_adapt": 62, "lambda_k": [62, 167], "m_v": [62, 97, 167], "b_v": [62, 97, 167], "unitless": [62, 66, 75, 95, 97, 142, 143, 144, 145, 168], "frequenc": [63, 74, 89, 90, 91, 92, 93, 166], "refrac": [63, 64, 72, 84, 85, 86, 89, 90, 96, 97, 105, 106], "compens": [63, 89, 90, 141], "generatormixin": [63, 74], "refractorystepmixin": 63, "encod": [63, 74], "poisson": [63, 74, 89, 90, 91, 92, 93], "distribut": [63, 74, 89, 90, 91, 92, 93, 139, 140, 141], "randomli": [63, 89, 90], "hz": [63, 74, 89, 90, 91, 92, 93], "pseudorandom": [63, 74, 89, 90, 92, 93, 113, 139, 140, 141, 154], "allow": [63, 89, 90, 117, 121, 126, 142, 144, 166], "distanc": [63, 89, 90], "th": [63, 84, 85, 86, 89, 90], "onlin": [63, 74], "intens": [63, 74], "hertz": [63, 74], "pin": 63, "batchshapemixin": [64, 65], "librari": [64, 65], "mixin": [64, 65, 81, 82, 83, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "delayedmixin": 65, "nanoamper": [65, 77, 104, 109, 111], "current_at": [65, 77, 109, 111], "spike_at": [65, 77, 108, 112], "boolean": [65, 77], "crit_v": [66, 75, 95], "affin": [66, 75, 95], "crit": [66, 75, 95, 168], "drift": [66, 75, 95], "awai": [66, 75, 95, 168], "represent": 68, "simultan": 68, "proxi": 68, "connection_nam": [68, 76], "neuron_nam": [68, 76], "primarili": [68, 127], "connection_kwarg": [68, 76], "neuron_kwarg": [68, 76], "capture_intermedi": [68, 76], "turn": [68, 118, 134], "unpack": [68, 122], "get_connect": 68, "get_neuron": 68, "named_connect": 68, "named_neuron": 68, "named_synaps": 68, "accumul": [68, 79, 80], "in_shap": 69, "out_shap": 69, "interc": [69, 71], "m_0": 69, "unbatch": [69, 70, 71], "odot": [70, 71], "inputoutput": [70, 71], "i_n": 71, "lineardens": 71, "creation": 71, "mask": [71, 94, 95, 143, 145], "batchedshap": [72, 99], "epsilon": [73, 114, 117, 126, 142, 144], "12": [73, 114, 166], "norm": [73, 114], "desir": [73, 114, 134, 139, 140], "demonin": [73, 114], "stepmixin": 74, "replic": [74, 92, 93, 101], "bindsnet": [74, 92, 93], "invers": [74, 92, 93, 167, 170], "wrap": [76, 118, 128, 134], "serial_c": 76, "serial_n": 76, "avoid": [76, 80], "updatesom": 79, "reduct": 80, "taken": 80, "collis": 80, "small": 80, "_get_": 80, "_set_": 80, "_del_": 80, "weakli": [80, 127], "weightbiasmixin": 81, "inherit": [81, 82, 83], "weight_": [81, 82, 83], "bias_": [81, 82], "weightmixin": 82, "maintain": [84, 85, 86, 96, 97], "adapt_r": 86, "rebound_r": 86, "adapt_reset_min": 86, "permit": [86, 143, 145], "adap": [87, 88], "i_": 87, "optioon": [89, 90], "nonsens": [89, 90], "1000": [89, 90], "inhomogen": 91, "_description_": [91, 125], "exce": 91, "greater": 91, "masked_input": [94, 95], "held": [96, 97], "v_slope": 97, "v_intercept": 97, "0th": [98, 122], "add_batch": 98, "shapemixin": 99, "batchmixin": [99, 101], "concept": [99, 101], "add_delai": 100, "offer": 101, "current_adapt": 102, "additon": [102, 103], "lead": [102, 103], "unreduc": [102, 103], "threshold_adap": 103, "absrefrac": 106, "refractorymixin": 106, "driven": 107, "to_spik": 108, "current_interp": [108, 110, 111], "current_interp_kwarg": [108, 110, 111], "spike_interp": [108, 110, 111], "spike_interp_kwarg": [108, 110, 111], "currentmixin": [108, 110], "therefrom": [108, 111], "noth": [108, 111], "overbound": [109, 112], "primit": [109, 110, 112], "spikemixin": [110, 111], "to_curr": 111, "randn": 113, "foldreduc": [115, 116, 117, 119, 120, 126, 129, 132, 133], "condit": [115, 116, 142, 143, 144, 145, 168], "lvert": [115, 117, 126, 132, 142, 143, 144], "scaledcumulativetracereduc": 115, "fold": [115, 116, 117, 119, 120, 121, 126, 129, 132, 133], "cond": [115, 116], "incorpor": [115, 116, 117, 119, 120, 121, 126, 129, 131, 132, 133, 142, 143, 144, 145, 167, 168], "scalednearesttracereduc": 116, "rvert": [117, 126, 142, 144], "filter_": [118, 122, 128, 134], "map_": [118, 122, 128, 134], "op_": 118, "nest": [118, 124, 127, 134], "map": [118, 121, 122, 127, 128, 134], "minu": 118, "op": 118, "ti": [118, 134], "By": 118, "reject": 118, "compar": 118, "reiniti": [118, 121, 123, 131], "decoupl": 119, "datatyp": [120, 132, 133, 143, 145], "recordreduc": 121, "keepshap": 121, "histor": 121, "dump": [121, 123, 131], "view": [121, 123, 131], "07": [121, 166], "fail": 121, "fall": 121, "measur": 121, "7": 121, "sent": 122, "directli": [123, 127, 129], "weak": 123, "did": 123, "sens": 124, "sensibl": 124, "collect": [125, 127], "never": [125, 127], "add_observ": 125, "del_observ": 125, "Its": 125, "get_observ": 125, "realign_arg": 127, "realign_kwarg": 127, "search": 127, "mapaccessor": 127, "avail": 127, "explicit": 127, "destroi": 127, "accessor": 127, "realign_attribut": 127, "factori": 127, "chain": 127, "reduer": [128, 134], "util": 130, "add_record": 130, "resmin": 136, "resmax": 136, "srcmin": 136, "srcmax": 136, "unchang": 136, "amin": 136, "amax": 136, "shortcut": 137, "full": 137, "squar": 138, "root": 138, "continuousdistribut": [139, 140], "log": [139, 140, 141], "probabl": [139, 140, 141], "mathbb": [139, 140, 141], "sigma": [139, 140], "cdf": [139, 140, 141], "loc": [139, 140], "erf": [139, 140], "sqrt": [139, 140], "standard": [139, 140], "deviat": [139, 140], "logcdf": [139, 140, 141], "logarithm": [139, 140, 141], "logpdf": [139, 140], "densiti": [139, 140], "pi": [139, 140], "likelihood": [139, 140], "sim": [139, 140, 141], "params_mv": [139, 140], "varianc": [139, 140, 141], "mu_x": [139, 140], "sigma_x": [139, 140], "qquad": [139, 140], "pdf": [139, 140], "variat": [139, 140, 141], "mathcal": [139, 140, 165], "sample_mv": [139, 140], "var": [139, 140, 141], "lnormal": 140, "discretedistribut": 141, "_0": 141, "logpmf": 141, "mass": 141, "pmf": 141, "metal": 141, "shader": 141, "accordingli": 141, "degener": 141, "init": [142, 143, 144, 145], "matchfn": [143, 145], "trace_cumul": 143, "predic": [143, 145], "sf": 143, "x_t": 143, "trace_nearest": 145, "arbitrari": [146, 147, 148, 149, 150, 151], "uniformli": 154, "depth": 163, "academ": 163, "plan": 163, "futur": 163, "alif": 163, "3": [163, 168], "4": [163, 166, 168], "5": [163, 168], "nonlinear": 163, "qif": 163, "izhikevich": 163, "eif": 163, "adex": 163, "conduct": [163, 167], "coba": 163, "stdp": 163, "mstdp": 163, "mstdpet": 163, "triplet": 163, "resum": 163, "tbd": 164, "summar": 165, "afterward": 165, "causal": 165, "phrase": [165, 167], "revers": 165, "direct": 165, "below": [165, 166, 168], "commonli": 165, "sum_": 165, "With": [165, 166, 167, 168], "dirac": [165, 170], "w_t": 165, "pp": 165, "d_": 165, "xi": 165, "phi_": 165, "dp": 165, "phi_n": 165, "_n": 165, "zeta": 165, "10": [165, 166, 167, 168], "1162": [165, 166], "neco": [165, 166], "2007": 165, "19": 165, "1468": 165, "z": 165, "dz": 165, "impos": 166, "regard": 166, "impli": 166, "steadi": 166, "give": 166, "degre": 166, "freedom": 166, "modif": 166, "dampen": 166, "amplifi": 166, "said": 166, "latter": [166, 168], "dw_k": [166, 168], "approx": [166, 168], "subthreshold": [166, 168], "doi": [166, 167, 168], "1017": [166, 167, 168], "cbo9781107447615": [166, 167, 168], "1152": 166, "jn": 166, "00686": 166, "2005": 166, "Be": [166, 167], "1038": [166, 167], "s41467": [166, 167], "017": [166, 167], "02717": [166, 167], "allen": [166, 167], "institut": [166, 167], "whitepap": [166, 167], "rebound": 166, "2008": 166, "680": 166, "neco_a_00196": 166, "1803": 166, "09574": 166, "021": 166, "24427": 166, "8": [166, 168], "00234": 166, "2019": 166, "dv_m": [167, 168], "basic": 167, "rule": 167, "slope": [167, 168], "show": [167, 168], "v_r": [167, 168], "60": [167, 168], "plot": [167, 168], "c_m": 167, "g_l": 167, "capacit": 167, "nf": 167, "leak": 167, "expos": 167, "isbn": [167, 168, 170], "9780262548083": [167, 168, 170], "020": 167, "17236": 167, "fraction": 167, "intercept": 167, "convent": 167, "conting": 167, "reach": 167, "critic": 168, "tendenc": 168, "stabl": 168, "unstabl": 168, "attract": 168, "repel": 168, "v_c": 168, "50": 168, "depeend": 168, "3390": 168, "brainsci12070863": 168, "7551": 168, "mitpress": 168, "2526": 168, "001": 168, "0001": 168, "close": 168, "rapid": 168, "upsw": 168, "rightarrow": 168, "easi": 168, "confus": 168, "unrel": 168, "occasion": 168, "denot": 168, "vartheta_": 168, "rh": 168, "thresh": 168, "usual": 168, "simuat": 168, "illustr": 168, "4249": 168, "scholarpedia": 168, "8427": 168, "1523": 168, "jneurosci": 168, "23": 168, "37": 168, "11628": 168, "2003": 168, "t_f": 170, "extern": 170, "veri": 170, "role": 170, "deliv": 170, "dramat": 170}, "objects": {"inferno": [[6, 0, 1, "", "ContextualHook"], [7, 0, 1, "", "Hook"], [8, 0, 1, "", "Module"], [9, 0, 1, "", "RecordTensor"], [10, 0, 1, "", "ShapedTensor"], [11, 0, 1, "", "StateHook"], [12, 4, 1, "", "astensors"], [13, 4, 1, "", "empty"], [14, 4, 1, "", "exp"], [15, 4, 1, "", "exponential_smoothing"], [16, 4, 1, "", "full"], [5, 5, 0, "-", "functional"], [44, 4, 1, "", "holt_linear_smoothing"], [45, 4, 1, "", "isi"], [158, 5, 0, "-", "learn"], [159, 5, 0, "-", "neural"], [113, 4, 1, "", "normal"], [114, 4, 1, "", "normalize"], [135, 4, 1, "", "ones"], [136, 4, 1, "", "rescale"], [137, 4, 1, "", "scalar"], [138, 4, 1, "", "sqrt"], [162, 5, 0, "-", "stats"], [142, 4, 1, "", "trace_cumulative"], [143, 4, 1, "", "trace_cumulative_scaled"], [144, 4, 1, "", "trace_nearest"], [145, 4, 1, "", "trace_nearest_scaled"], [154, 4, 1, "", "uniform"], [155, 4, 1, "", "zeros"]], "inferno.Hook": [[7, 1, 1, "", "deregister"], [7, 2, 1, "", "evalexec"], [7, 1, 1, "", "register"], [7, 2, 1, "", "registered"], [7, 2, 1, "", "trainexec"]], "inferno.Module": [[8, 1, 1, "", "get_extra"], [8, 1, 1, "", "get_extra_state"], [8, 1, 1, "", "register_extra"], [8, 1, 1, "", "set_extra_state"]], "inferno.RecordTensor": [[9, 3, 1, "", "LinkedAttributes"], [9, 1, 1, "", "align"], [9, 2, 1, "", "attributes"], [9, 2, 1, "", "constraints"], [9, 1, 1, "", "create"], [9, 1, 1, "", "decr"], [9, 1, 1, "", "deinitialize"], [9, 2, 1, "", "dt"], [9, 2, 1, "", "duration"], [9, 1, 1, "", "incr"], [9, 1, 1, "", "initialize"], [9, 1, 1, "", "insert"], [9, 2, 1, "", "latest"], [9, 1, 1, "", "peek"], [9, 2, 1, "", "pointer"], [9, 1, 1, "", "pop"], [9, 1, 1, "", "push"], [9, 1, 1, "", "read"], [9, 1, 1, "", "readrange"], [9, 1, 1, "", "reconstrain"], [9, 2, 1, "", "recordsz"], [9, 1, 1, "", "reset"], [9, 1, 1, "", "select"], [9, 2, 1, "", "shape"], [9, 2, 1, "", "value"], [9, 1, 1, "", "write"], [9, 1, 1, "", "writerange"]], "inferno.ShapedTensor": [[10, 3, 1, "", "LinkedAttributes"], [10, 2, 1, "", "attributes"], [10, 1, 1, "", "compatible"], [10, 2, 1, "", "constraints"], [10, 1, 1, "", "create"], [10, 2, 1, "", "dimensionality"], [10, 2, 1, "", "ignored"], [10, 2, 1, "", "live"], [10, 2, 1, "", "name"], [10, 2, 1, "", "owner"], [10, 1, 1, "", "reconstrain"], [10, 1, 1, "", "resize"], [10, 2, 1, "", "strict"], [10, 2, 1, "", "valid"], [10, 2, 1, "", "value"]], "inferno.StateHook": [[11, 1, 1, "", "forward"], [11, 1, 1, "", "hook"], [11, 2, 1, "", "module"], [11, 1, 1, "", "register"]], "inferno.functional": [[17, 0, 1, "", "Extrapolation"], [18, 0, 1, "", "FullBounding"], [19, 0, 1, "", "HalfBounding"], [20, 0, 1, "", "Interpolation"], [21, 4, 1, "", "bound_lower_multiplicative"], [22, 4, 1, "", "bound_lower_power"], [23, 4, 1, "", "bound_lower_sharp"], [24, 4, 1, "", "bound_multiplicative"], [25, 4, 1, "", "bound_power"], [26, 4, 1, "", "bound_sharp"], [27, 4, 1, "", "bound_upper_multiplicative"], [28, 4, 1, "", "bound_upper_power"], [29, 4, 1, "", "bound_upper_sharp"], [30, 4, 1, "", "extrap_expdecay"], [31, 4, 1, "", "extrap_expratedecay"], [32, 4, 1, "", "extrap_linear_backward"], [33, 4, 1, "", "extrap_linear_forward"], [34, 4, 1, "", "extrap_nearest"], [35, 4, 1, "", "extrap_neighbors"], [36, 4, 1, "", "extrap_next"], [37, 4, 1, "", "extrap_previous"], [38, 4, 1, "", "interp_expdecay"], [39, 4, 1, "", "interp_expratedecay"], [40, 4, 1, "", "interp_linear"], [41, 4, 1, "", "interp_nearest"], [42, 4, 1, "", "interp_next"], [43, 4, 1, "", "interp_previous"]], "inferno.learn": [[46, 0, 1, "", "CellTrainer"], [47, 0, 1, "", "IndependentTrainer"], [48, 0, 1, "", "MSTDPET"], [49, 0, 1, "", "STDP"], [50, 0, 1, "", "TopRateClassifier"]], "inferno.learn.CellTrainer": [[46, 1, 1, "", "add_cell"], [46, 1, 1, "", "add_monitor"], [46, 2, 1, "", "cells"], [46, 1, 1, "", "clear"], [46, 1, 1, "", "del_cell"], [46, 1, 1, "", "del_monitor"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_cell"], [46, 1, 1, "", "get_monitor"], [46, 2, 1, "", "monitors"], [46, 2, 1, "", "named_cells"], [46, 2, 1, "", "named_monitors"], [46, 1, 1, "", "named_monitors_of"], [46, 1, 1, "", "train"], [46, 1, 1, "", "update"]], "inferno.learn.IndependentTrainer": [[47, 0, 1, "", "Unit"], [47, 1, 1, "", "get_unit"], [47, 1, 1, "", "register_cell"]], "inferno.learn.IndependentTrainer.Unit": [[47, 3, 1, "", "cell"], [47, 3, 1, "", "monitors"], [47, 3, 1, "", "state"]], "inferno.learn.MSTDPET": [[48, 1, 1, "", "forward"], [48, 1, 1, "", "register_cell"]], "inferno.learn.STDP": [[49, 1, 1, "", "forward"], [49, 1, 1, "", "register_cell"]], "inferno.learn.TopRateClassifier": [[50, 2, 1, "", "assignments"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "infer"], [50, 1, 1, "", "learn"], [50, 2, 1, "", "nclass"], [50, 2, 1, "", "ndim"], [50, 2, 1, "", "occurances"], [50, 2, 1, "", "proportional"], [50, 2, 1, "", "proportions"], [50, 2, 1, "", "rates"], [50, 2, 1, "", "shape"]], "inferno.neural": [[51, 0, 1, "", "ALIF"], [52, 0, 1, "", "AdEx"], [53, 0, 1, "", "Biclique"], [54, 0, 1, "", "Cell"], [55, 0, 1, "", "Clamping"], [56, 0, 1, "", "Connection"], [57, 0, 1, "", "Conv2D"], [58, 0, 1, "", "DeltaCurrent"], [59, 0, 1, "", "DeltaPlusCurrent"], [60, 0, 1, "", "EIF"], [61, 0, 1, "", "GLIF1"], [62, 0, 1, "", "GLIF2"], [63, 0, 1, "", "HomogeneousPoissonEncoder"], [64, 0, 1, "", "InfernoNeuron"], [65, 0, 1, "", "InfernoSynapse"], [66, 0, 1, "", "Izhikevich"], [67, 0, 1, "", "LIF"], [68, 0, 1, "", "Layer"], [69, 0, 1, "", "LinearDense"], [70, 0, 1, "", "LinearDirect"], [71, 0, 1, "", "LinearLateral"], [72, 0, 1, "", "Neuron"], [73, 0, 1, "", "Normalization"], [74, 0, 1, "", "PoissonIntervalEncoder"], [75, 0, 1, "", "QIF"], [76, 0, 1, "", "Serial"], [77, 0, 1, "", "Synapse"], [78, 0, 1, "", "SynapseConstructor"], [79, 0, 1, "", "Updatable"], [80, 0, 1, "", "Updater"], [160, 5, 0, "-", "functional"]], "inferno.neural.ALIF": [[51, 1, 1, "", "clear"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "forward"]], "inferno.neural.AdEx": [[52, 1, 1, "", "clear"], [52, 2, 1, "", "dt"], [52, 1, 1, "", "forward"]], "inferno.neural.Biclique": [[53, 1, 1, "", "add_cell"], [53, 1, 1, "", "add_connection"], [53, 1, 1, "", "add_neuron"], [53, 1, 1, "", "del_cell"], [53, 1, 1, "", "del_connection"], [53, 1, 1, "", "del_neuron"], [53, 1, 1, "", "wiring"]], "inferno.neural.Cell": [[54, 2, 1, "", "connection"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "local_remap"], [54, 2, 1, "", "neuron"], [54, 2, 1, "", "postspike"], [54, 2, 1, "", "postvoltage"], [54, 2, 1, "", "precurrent"], [54, 2, 1, "", "prespike"], [54, 2, 1, "", "synapse"], [54, 2, 1, "", "updater"]], "inferno.neural.Clamping": [[55, 1, 1, "", "hook"]], "inferno.neural.Connection": [[56, 2, 1, "", "batched_inshape"], [56, 2, 1, "", "batched_outshape"], [56, 2, 1, "", "batchsz"], [56, 2, 1, "", "bias"], [56, 2, 1, "", "biased"], [56, 1, 1, "", "clear"], [56, 1, 1, "", "defaultupdater"], [56, 2, 1, "", "delay"], [56, 2, 1, "", "delayedby"], [56, 2, 1, "", "dt"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "forward"], [56, 2, 1, "", "inshape"], [56, 1, 1, "", "insize"], [56, 1, 1, "", "like_input"], [56, 1, 1, "", "like_synaptic"], [56, 2, 1, "", "outshape"], [56, 1, 1, "", "outsize"], [56, 1, 1, "", "postsyn_receptive"], [56, 1, 1, "", "presyn_receptive"], [56, 2, 1, "", "selector"], [56, 2, 1, "", "synapse"], [56, 2, 1, "", "syncurrent"], [56, 2, 1, "", "synspike"], [56, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[57, 1, 1, "", "forward"], [57, 2, 1, "", "inshape"], [57, 1, 1, "", "like_input"], [57, 1, 1, "", "like_synaptic"], [57, 2, 1, "", "outshape"], [57, 1, 1, "", "postsyn_receptive"], [57, 1, 1, "", "presyn_receptive"], [57, 2, 1, "", "selector"]], "inferno.neural.DeltaCurrent": [[58, 1, 1, "", "clear"], [58, 1, 1, "", "forward"], [58, 1, 1, "", "partialconstructor"], [58, 3, 1, "", "spike_"]], "inferno.neural.DeltaPlusCurrent": [[59, 1, 1, "", "clear"], [59, 3, 1, "", "current_"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "partialconstructor"], [59, 3, 1, "", "spike_"]], "inferno.neural.EIF": [[60, 1, 1, "", "clear"], [60, 2, 1, "", "dt"], [60, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[61, 1, 1, "", "clear"], [61, 2, 1, "", "dt"], [61, 1, 1, "", "forward"]], "inferno.neural.GLIF2": [[62, 1, 1, "", "clear"], [62, 2, 1, "", "dt"], [62, 1, 1, "", "forward"]], "inferno.neural.HomogeneousPoissonEncoder": [[63, 2, 1, "", "compensated"], [63, 1, 1, "", "forward"], [63, 2, 1, "", "frequency"], [63, 2, 1, "", "refrac"]], "inferno.neural.InfernoNeuron": [[64, 2, 1, "", "batchsz"], [64, 1, 1, "", "clear"], [64, 2, 1, "", "dt"], [64, 1, 1, "", "forward"], [64, 2, 1, "", "refrac"], [64, 2, 1, "", "spike"], [64, 2, 1, "", "voltage"]], "inferno.neural.InfernoSynapse": [[65, 1, 1, "", "clear"], [65, 2, 1, "", "current"], [65, 1, 1, "", "current_at"], [65, 2, 1, "", "delay"], [65, 2, 1, "", "dt"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "partialconstructor"], [65, 2, 1, "", "spike"], [65, 1, 1, "", "spike_at"]], "inferno.neural.Izhikevich": [[66, 1, 1, "", "clear"], [66, 2, 1, "", "dt"], [66, 1, 1, "", "forward"]], "inferno.neural.LIF": [[67, 1, 1, "", "clear"], [67, 2, 1, "", "dt"], [67, 1, 1, "", "forward"]], "inferno.neural.Layer": [[68, 1, 1, "", "add_cell"], [68, 1, 1, "", "add_connection"], [68, 1, 1, "", "add_neuron"], [68, 2, 1, "", "cells"], [68, 2, 1, "", "connections"], [68, 1, 1, "", "del_cell"], [68, 1, 1, "", "del_connection"], [68, 1, 1, "", "del_neuron"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "get_cell"], [68, 1, 1, "", "get_connection"], [68, 1, 1, "", "get_neuron"], [68, 2, 1, "", "named_cells"], [68, 2, 1, "", "named_connections"], [68, 2, 1, "", "named_neurons"], [68, 2, 1, "", "named_synapses"], [68, 2, 1, "", "neurons"], [68, 1, 1, "", "update"], [68, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[69, 1, 1, "", "forward"], [69, 2, 1, "", "inshape"], [69, 1, 1, "", "like_input"], [69, 1, 1, "", "like_synaptic"], [69, 2, 1, "", "outshape"], [69, 1, 1, "", "postsyn_receptive"], [69, 1, 1, "", "presyn_receptive"], [69, 2, 1, "", "selector"]], "inferno.neural.LinearDirect": [[70, 1, 1, "", "forward"], [70, 2, 1, "", "inshape"], [70, 1, 1, "", "like_input"], [70, 1, 1, "", "like_synaptic"], [70, 2, 1, "", "outshape"], [70, 1, 1, "", "postsyn_receptive"], [70, 1, 1, "", "presyn_receptive"], [70, 2, 1, "", "selector"]], "inferno.neural.LinearLateral": [[71, 2, 1, "", "delay"], [71, 1, 1, "", "forward"], [71, 2, 1, "", "inshape"], [71, 1, 1, "", "like_input"], [71, 1, 1, "", "like_synaptic"], [71, 2, 1, "", "outshape"], [71, 1, 1, "", "postsyn_receptive"], [71, 1, 1, "", "presyn_receptive"], [71, 2, 1, "", "selector"], [71, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[72, 2, 1, "", "batchedshape"], [72, 2, 1, "", "batchsz"], [72, 1, 1, "", "clear"], [72, 2, 1, "", "count"], [72, 2, 1, "", "dt"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "forward"], [72, 2, 1, "", "refrac"], [72, 2, 1, "", "shape"], [72, 2, 1, "", "spike"], [72, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[73, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[74, 1, 1, "", "forward"], [74, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[75, 1, 1, "", "clear"], [75, 2, 1, "", "dt"], [75, 1, 1, "", "forward"]], "inferno.neural.Serial": [[76, 1, 1, "", "add_cell"], [76, 1, 1, "", "add_connection"], [76, 1, 1, "", "add_neuron"], [76, 2, 1, "", "cell"], [76, 2, 1, "", "connection"], [76, 1, 1, "", "del_cell"], [76, 1, 1, "", "del_connection"], [76, 1, 1, "", "del_neuron"], [76, 1, 1, "", "forward"], [76, 2, 1, "", "neuron"], [76, 2, 1, "", "synapse"], [76, 2, 1, "", "updater"], [76, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[77, 1, 1, "", "clear"], [77, 2, 1, "", "current"], [77, 1, 1, "", "current_at"], [77, 2, 1, "", "delay"], [77, 2, 1, "", "dt"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "partialconstructor"], [77, 2, 1, "", "spike"], [77, 1, 1, "", "spike_at"]], "inferno.neural.Updatable": [[79, 1, 1, "", "clear"], [79, 1, 1, "", "defaultupdater"], [79, 2, 1, "", "updatable"], [79, 1, 1, "", "update"], [79, 2, 1, "", "updater"], [79, 1, 1, "", "updatesome"]], "inferno.neural.Updater": [[80, 1, 1, "", "clear"], [80, 1, 1, "", "forward"], [80, 2, 1, "", "names"], [80, 2, 1, "", "parent"]], "inferno.neural.connections.mixins": [[81, 0, 1, "", "WeightBiasDelayMixin"], [82, 0, 1, "", "WeightBiasMixin"], [83, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[81, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[82, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[83, 2, 1, "", "weight"]], "inferno.neural.functional": [[84, 4, 1, "", "adaptive_currents_linear"], [85, 4, 1, "", "adaptive_thresholds_linear_spike"], [86, 4, 1, "", "adaptive_thresholds_linear_voltage"], [87, 4, 1, "", "apply_adaptive_currents"], [88, 4, 1, "", "apply_adaptive_thresholds"], [89, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [90, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [91, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [92, 4, 1, "", "enc_poisson_interval"], [93, 4, 1, "", "enc_poisson_interval_online"], [94, 4, 1, "", "voltage_integration_linear"], [95, 4, 1, "", "voltage_integration_quadratic"], [96, 4, 1, "", "voltage_thresholding_constant"], [97, 4, 1, "", "voltage_thresholding_linear"]], "inferno.neural.mixins": [[98, 0, 1, "", "BatchMixin"], [99, 0, 1, "", "BatchShapeMixin"], [100, 0, 1, "", "DelayedMixin"], [101, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[98, 1, 1, "", "add_batched"], [98, 2, 1, "", "batchsz"]], "inferno.neural.mixins.BatchShapeMixin": [[99, 2, 1, "", "batchedshape"]], "inferno.neural.mixins.DelayedMixin": [[100, 1, 1, "", "add_delayed"], [100, 2, 1, "", "delay"], [100, 2, 1, "", "dt"]], "inferno.neural.mixins.ShapeMixin": [[101, 2, 1, "", "count"], [101, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[102, 0, 1, "", "AdaptiveCurrentMixin"], [103, 0, 1, "", "AdaptiveThresholdMixin"], [104, 0, 1, "", "CurrentMixin"], [105, 0, 1, "", "RefractoryMixin"], [106, 0, 1, "", "SpikeRefractoryMixin"], [107, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptiveCurrentMixin": [[102, 2, 1, "", "current_adaptation"]], "inferno.neural.neurons.mixins.AdaptiveThresholdMixin": [[103, 2, 1, "", "threshold_adapation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[104, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[105, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[106, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[107, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[108, 0, 1, "", "CurrentDerivedSpikeMixin"], [109, 0, 1, "", "CurrentMixin"], [110, 0, 1, "", "SpikeCurrentMixin"], [111, 0, 1, "", "SpikeDerivedCurrentMixin"], [112, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[108, 2, 1, "", "spike"], [108, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.CurrentMixin": [[109, 2, 1, "", "current"], [109, 1, 1, "", "current_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[111, 2, 1, "", "current"], [111, 1, 1, "", "current_at"]], "inferno.neural.synapses.mixins.SpikeMixin": [[112, 2, 1, "", "spike"], [112, 1, 1, "", "spike_at"]], "inferno.observe": [[115, 0, 1, "", "ConditionalCumulativeTraceReducer"], [116, 0, 1, "", "ConditionalNearestTraceReducer"], [117, 0, 1, "", "CumulativeTraceReducer"], [118, 0, 1, "", "DifferenceMonitor"], [119, 0, 1, "", "EMAReducer"], [120, 0, 1, "", "EventReducer"], [121, 0, 1, "", "FoldReducer"], [122, 0, 1, "", "InputMonitor"], [123, 0, 1, "", "Monitor"], [124, 0, 1, "", "MonitorConstructor"], [125, 0, 1, "", "MonitorPool"], [126, 0, 1, "", "NearestTraceReducer"], [127, 0, 1, "", "Observable"], [128, 0, 1, "", "OutputMonitor"], [129, 0, 1, "", "PassthroughReducer"], [130, 0, 1, "", "RecordReducer"], [131, 0, 1, "", "Reducer"], [132, 0, 1, "", "ScaledCumulativeTraceReducer"], [133, 0, 1, "", "ScaledNearestTraceReducer"], [134, 0, 1, "", "StateMonitor"]], "inferno.observe.ConditionalCumulativeTraceReducer": [[115, 2, 1, "", "dt"], [115, 1, 1, "", "fold"], [115, 1, 1, "", "interpolate"]], "inferno.observe.ConditionalNearestTraceReducer": [[116, 2, 1, "", "dt"], [116, 1, 1, "", "fold"], [116, 1, 1, "", "interpolate"]], "inferno.observe.CumulativeTraceReducer": [[117, 2, 1, "", "dt"], [117, 1, 1, "", "fold"], [117, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[118, 1, 1, "", "clear"], [118, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[119, 1, 1, "", "fold"], [119, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[120, 1, 1, "", "fold"], [120, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[121, 1, 1, "", "clear"], [121, 2, 1, "", "data"], [121, 1, 1, "", "dump"], [121, 1, 1, "", "fold"], [121, 1, 1, "", "forward"], [121, 1, 1, "", "interpolate"], [121, 1, 1, "", "peek"], [121, 1, 1, "", "push"], [121, 1, 1, "", "view"]], "inferno.observe.InputMonitor": [[122, 1, 1, "", "partialconstructor"]], "inferno.observe.Monitor": [[123, 1, 1, "", "clear"], [123, 1, 1, "", "dump"], [123, 2, 1, "", "latest"], [123, 1, 1, "", "partialconstructor"], [123, 1, 1, "", "peek"], [123, 2, 1, "", "reducer"], [123, 1, 1, "", "register"], [123, 1, 1, "", "view"]], "inferno.observe.MonitorPool": [[125, 1, 1, "", "add_monitor"], [125, 1, 1, "", "add_observed"], [125, 1, 1, "", "del_monitor"], [125, 1, 1, "", "del_observed"], [125, 1, 1, "", "get_monitor"], [125, 1, 1, "", "get_observed"], [125, 2, 1, "", "monitors"], [125, 2, 1, "", "named_monitors"], [125, 1, 1, "", "named_monitors_of"], [125, 2, 1, "", "pool"]], "inferno.observe.NearestTraceReducer": [[126, 2, 1, "", "dt"], [126, 1, 1, "", "fold"], [126, 1, 1, "", "interpolate"]], "inferno.observe.Observable": [[127, 1, 1, "", "add_monitor"], [127, 1, 1, "", "local_remap"], [127, 2, 1, "", "monitors"], [127, 1, 1, "", "realign_attribute"]], "inferno.observe.OutputMonitor": [[128, 1, 1, "", "partialconstructor"]], "inferno.observe.PassthroughReducer": [[129, 1, 1, "", "fold"], [129, 1, 1, "", "interpolate"]], "inferno.observe.RecordReducer": [[130, 1, 1, "", "add_record"], [130, 2, 1, "", "dt"], [130, 2, 1, "", "duration"]], "inferno.observe.Reducer": [[131, 1, 1, "", "clear"], [131, 1, 1, "", "dump"], [131, 1, 1, "", "forward"], [131, 2, 1, "", "latest"], [131, 1, 1, "", "peek"], [131, 1, 1, "", "push"], [131, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[132, 2, 1, "", "dt"], [132, 1, 1, "", "fold"], [132, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[133, 2, 1, "", "dt"], [133, 1, 1, "", "fold"], [133, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[134, 1, 1, "", "partialconstructor"]], "inferno.stats": [[139, 0, 1, "", "LogNormal"], [140, 0, 1, "", "Normal"], [141, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[139, 1, 1, "", "cdf"], [139, 1, 1, "", "logcdf"], [139, 1, 1, "", "logpdf"], [139, 1, 1, "", "mean"], [139, 1, 1, "", "params_mv"], [139, 1, 1, "", "pdf"], [139, 1, 1, "", "sample"], [139, 1, 1, "", "sample_mv"], [139, 1, 1, "", "validate"], [139, 1, 1, "", "variance"]], "inferno.stats.Normal": [[140, 1, 1, "", "cdf"], [140, 1, 1, "", "logcdf"], [140, 1, 1, "", "logpdf"], [140, 1, 1, "", "mean"], [140, 1, 1, "", "params_mv"], [140, 1, 1, "", "pdf"], [140, 1, 1, "", "sample"], [140, 1, 1, "", "sample_mv"], [140, 1, 1, "", "validate"], [140, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[141, 1, 1, "", "cdf"], [141, 1, 1, "", "logcdf"], [141, 1, 1, "", "logpmf"], [141, 1, 1, "", "mean"], [141, 1, 1, "", "pmf"], [141, 1, 1, "", "sample"], [141, 1, 1, "", "validate"], [141, 1, 1, "", "variance"]], "inferno.types": [[146, 0, 1, "", "ManyToMany"], [147, 0, 1, "", "ManyToManyMethod"], [148, 0, 1, "", "ManyToOne"], [149, 0, 1, "", "ManyToOneMethod"], [150, 0, 1, "", "OneToMany"], [151, 0, 1, "", "OneToManyMethod"], [152, 0, 1, "", "OneToOne"], [153, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 158, 165], "simul": 0, "refractori": [0, 3], "period": [0, 3], "model": [0, 159, 163, 167, 168, 169, 170], "save": 0, "restor": 0, "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 168], "decai": 2, "constant": 2, "trace": [2, 157, 165], "cumul": 2, "nearest": 2, "scale": 2, "paramet": [2, 139, 140, 141], "depend": [2, 158, 165, 166], "soft": 2, "hard": 2, "dirac": 2, "delta": [2, 169, 170], "heavisid": 2, "step": 2, "function": [2, 5, 160], "relationship": 2, "neuron": [3, 72, 159, 160, 163, 166, 167, 168], "system": 3, "dynam": [3, 160], "welcom": 4, "inferno": [4, 5, 157, 158, 159, 160, 161, 162], "": 4, "document": 4, "protocol": 5, "bound": 5, "interpol": [5, 20], "extrapol": [5, 17], "contextualhook": 6, "hook": [7, 159], "modul": [8, 165], "recordtensor": 9, "shape": [9, 45, 48, 50, 56, 57, 63, 69, 70, 71, 74, 84, 85, 86, 89, 90, 91, 92, 93, 108, 109, 111, 112, 121], "shapedtensor": 10, "statehook": 11, "astensor": 12, "empti": 13, "exp": 14, "exponential_smooth": 15, "full": 16, "fullbound": 18, "halfbound": 19, "bound_lower_multipl": 21, "bound_lower_pow": 22, "bound_lower_sharp": 23, "bound_multipl": 24, "bound_pow": 25, "bound_sharp": 26, "bound_upper_multipl": 27, "bound_upper_pow": 28, "bound_upper_sharp": 29, "extrap_expdecai": 30, "extrap_expratedecai": 31, "extrap_linear_backward": 32, "extrap_linear_forward": 33, "extrap_nearest": 34, "extrap_neighbor": 35, "extrap_next": 36, "extrap_previ": 37, "interp_expdecai": 38, "interp_expratedecai": 39, "interp_linear": 40, "interp_nearest": 41, "interp_next": 42, "interp_previ": 43, "holt_linear_smooth": 44, "isi": 45, "celltrain": 46, "independenttrain": 47, "mstdpet": [48, 165], "stdp": [49, 165], "toprateclassifi": 50, "alif": [51, 167], "adex": [52, 168], "bicliqu": 53, "cell": 54, "clamp": 55, "connect": [56, 159], "conv2d": 57, "deltacurr": 58, "deltapluscurr": 59, "eif": [60, 168], "glif1": [61, 167], "glif2": [62, 167], "homogeneouspoissonencod": 63, "infernoneuron": 64, "infernosynaps": 65, "izhikevich": [66, 168], "lif": [67, 167], "layer": 68, "lineardens": 69, "lineardirect": 70, "linearlater": 71, "normal": [73, 113, 114, 140], "poissonintervalencod": 74, "qif": [75, 168], "serial": 76, "synaps": [77, 159, 163, 169, 170], "synapseconstructor": 78, "updat": [79, 80, 158], "weightbiasdelaymixin": 81, "weightbiasmixin": 82, "weightmixin": 83, "adaptive_currents_linear": 84, "adaptive_thresholds_linear_spik": 85, "adaptive_thresholds_linear_voltag": 86, "apply_adaptive_curr": 87, "apply_adaptive_threshold": 88, "enc_homogeneous_poisson_exp_interv": 89, "enc_homogeneous_poisson_exp_interval_onlin": 90, "enc_inhomogenous_poisson_bernoulli_approx": 91, "enc_poisson_interv": 92, "enc_poisson_interval_onlin": 93, "voltage_integration_linear": 94, "voltage_integration_quadrat": 95, "voltage_thresholding_const": 96, "voltage_thresholding_linear": 97, "batchmixin": 98, "batchshapemixin": 99, "delayedmixin": 100, "shapemixin": 101, "adaptivecurrentmixin": 102, "adaptivethresholdmixin": 103, "currentmixin": [104, 109], "refractorymixin": 105, "spikerefractorymixin": 106, "voltagemixin": 107, "currentderivedspikemixin": 108, "spikecurrentmixin": 110, "spikederivedcurrentmixin": 111, "spikemixin": 112, "conditionalcumulativetracereduc": 115, "conditionalnearesttracereduc": 116, "cumulativetracereduc": 117, "differencemonitor": 118, "emareduc": 119, "eventreduc": 120, "foldreduc": 121, "inputmonitor": 122, "monitor": [123, 161], "monitorconstructor": 124, "monitorpool": 125, "nearesttracereduc": 126, "observ": [127, 161], "outputmonitor": 128, "passthroughreduc": 129, "recordreduc": 130, "reduc": [131, 161], "scaledcumulativetracereduc": 132, "scalednearesttracereduc": 133, "statemonitor": 134, "ones": 135, "rescal": 136, "scalar": 137, "sqrt": 138, "lognorm": 139, "support": [139, 140, 141], "poisson": 141, "trace_cumul": 142, "trace_cumulative_sc": 143, "trace_nearest": 144, "trace_nearest_sc": 145, "manytomani": 146, "manytomanymethod": 147, "manytoon": 148, "manytoonemethod": 149, "onetomani": 150, "onetomanymethod": 151, "onetoon": 152, "onetoonemethod": 153, "uniform": 154, "zero": 155, "api": 156, "refer": [156, 165, 166, 167, 168, 170], "infrastructur": 157, "tensor": 157, "creation": 157, "math": 157, "oper": 157, "spike": [157, 158, 165, 166], "type": [157, 159], "learn": [158, 163, 164, 165], "compon": [158, 159, 161], "plastic": [158, 165], "classifi": 158, "neural": [159, 160], "encod": [159, 160], "intern": 159, "mixin": 159, "stat": 162, "distribut": 162, "method": [163, 164, 165], "zoo": 163, "overview": [163, 164, 166], "resum": 164, "like": [164, 165], "hebbian": 165, "formul": [165, 166, 167, 168, 169, 170], "delai": 165, "mstdp": 165, "descript": [165, 167, 168, 170], "elig": 165, "triplet": 165, "adapt": [166, 167, 168], "current": [166, 170], "linear": [166, 167], "threshold": 166, "voltag": 166, "leaki": 167, "integr": [167, 168], "fire": [167, 168], "altern": 167, "gener": 167, "1": 167, "2": 167, "3": 167, "glif3": 167, "4": 167, "glif4": 167, "5": 167, "glif5": 167, "nonlinear": 168, "quadrat": 168, "conduct": 169, "base": [169, 170], "coba": 169, "variant": [169, 170], "cuba": 170}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Model Saving and Restoring": [[0, "model-saving-and-restoring"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Trace": [[2, "scaling-trace"]], "Parameter Dependence": [[2, "parameter-dependence"]], "Soft Dependence": [[2, "soft-dependence"]], "Hard Dependence": [[2, "hard-dependence"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "": [[3, "id1"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.functional": [[5, "module-inferno.functional"]], "Protocols": [[5, "protocols"]], "Bounding": [[5, "bounding"]], "Interpolation": [[5, "interpolation"], [20, "interpolation"]], "Extrapolation": [[5, "extrapolation"], [17, "extrapolation"]], "ContextualHook": [[6, "contextualhook"]], "Hook": [[7, "hook"]], "Module": [[8, "module"]], "RecordTensor": [[9, "recordtensor"]], "Shape": [[9, null], [9, null], [9, null], [9, null], [9, null], [9, null], [9, null], [45, null], [48, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [56, null], [56, null], [56, null], [56, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [63, null], [69, null], [69, null], [69, null], [69, null], [69, null], [69, null], [69, null], [70, null], [70, null], [70, null], [70, null], [70, null], [70, null], [70, null], [71, null], [71, null], [71, null], [71, null], [71, null], [71, null], [71, null], [74, null], [84, null], [85, null], [86, null], [89, null], [90, null], [91, null], [92, null], [93, null], [108, null], [109, null], [111, null], [112, null], [121, null]], "ShapedTensor": [[10, "shapedtensor"]], "StateHook": [[11, "statehook"]], "astensors": [[12, "astensors"]], "empty": [[13, "empty"]], "exp": [[14, "exp"]], "exponential_smoothing": [[15, "exponential-smoothing"]], "full": [[16, "full"]], "FullBounding": [[18, "fullbounding"]], "HalfBounding": [[19, "halfbounding"]], "bound_lower_multiplicative": [[21, "bound-lower-multiplicative"]], "bound_lower_power": [[22, "bound-lower-power"]], "bound_lower_sharp": [[23, "bound-lower-sharp"]], "bound_multiplicative": [[24, "bound-multiplicative"]], "bound_power": [[25, "bound-power"]], "bound_sharp": [[26, "bound-sharp"]], "bound_upper_multiplicative": [[27, "bound-upper-multiplicative"]], "bound_upper_power": [[28, "bound-upper-power"]], "bound_upper_sharp": [[29, "bound-upper-sharp"]], "extrap_expdecay": [[30, "extrap-expdecay"]], "extrap_expratedecay": [[31, "extrap-expratedecay"]], "extrap_linear_backward": [[32, "extrap-linear-backward"]], "extrap_linear_forward": [[33, "extrap-linear-forward"]], "extrap_nearest": [[34, "extrap-nearest"]], "extrap_neighbors": [[35, "extrap-neighbors"]], "extrap_next": [[36, "extrap-next"]], "extrap_previous": [[37, "extrap-previous"]], "interp_expdecay": [[38, "interp-expdecay"]], "interp_expratedecay": [[39, "interp-expratedecay"]], "interp_linear": [[40, "interp-linear"]], "interp_nearest": [[41, "interp-nearest"]], "interp_next": [[42, "interp-next"]], "interp_previous": [[43, "interp-previous"]], "holt_linear_smoothing": [[44, "holt-linear-smoothing"]], "isi": [[45, "isi"]], "CellTrainer": [[46, "celltrainer"]], "IndependentTrainer": [[47, "independenttrainer"]], "MSTDPET": [[48, "mstdpet"]], "STDP": [[49, "stdp"]], "TopRateClassifier": [[50, "toprateclassifier"]], "ALIF": [[51, "alif"]], "AdEx": [[52, "adex"]], "Biclique": [[53, "biclique"]], "Cell": [[54, "cell"]], "Clamping": [[55, "clamping"]], "Connection": [[56, "connection"]], "Conv2D": [[57, "conv2d"]], "DeltaCurrent": [[58, "deltacurrent"]], "DeltaPlusCurrent": [[59, "deltapluscurrent"]], "EIF": [[60, "eif"]], "GLIF1": [[61, "glif1"]], "GLIF2": [[62, "glif2"]], "HomogeneousPoissonEncoder": [[63, "homogeneouspoissonencoder"]], "InfernoNeuron": [[64, "infernoneuron"]], "InfernoSynapse": [[65, "infernosynapse"]], "Izhikevich": [[66, "izhikevich"]], "LIF": [[67, "lif"]], "Layer": [[68, "layer"]], "LinearDense": [[69, "lineardense"]], "LinearDirect": [[70, "lineardirect"]], "LinearLateral": [[71, "linearlateral"]], "Neuron": [[72, "neuron"]], "Normalization": [[73, "normalization"]], "PoissonIntervalEncoder": [[74, "poissonintervalencoder"]], "QIF": [[75, "qif"]], "Serial": [[76, "serial"]], "Synapse": [[77, "synapse"]], "SynapseConstructor": [[78, "synapseconstructor"]], "Updatable": [[79, "updatable"]], "Updater": [[80, "updater"]], "WeightBiasDelayMixin": [[81, "weightbiasdelaymixin"]], "WeightBiasMixin": [[82, "weightbiasmixin"]], "WeightMixin": [[83, "weightmixin"]], "adaptive_currents_linear": [[84, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[85, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[86, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[87, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[88, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[89, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[90, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[91, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[92, "enc-poisson-interval"]], "enc_poisson_interval_online": [[93, "enc-poisson-interval-online"]], "voltage_integration_linear": [[94, "voltage-integration-linear"]], "voltage_integration_quadratic": [[95, "voltage-integration-quadratic"]], "voltage_thresholding_constant": [[96, "voltage-thresholding-constant"]], "voltage_thresholding_linear": [[97, "voltage-thresholding-linear"]], "BatchMixin": [[98, "batchmixin"]], "BatchShapeMixin": [[99, "batchshapemixin"]], "DelayedMixin": [[100, "delayedmixin"]], "ShapeMixin": [[101, "shapemixin"]], "AdaptiveCurrentMixin": [[102, "adaptivecurrentmixin"]], "AdaptiveThresholdMixin": [[103, "adaptivethresholdmixin"]], "CurrentMixin": [[104, "currentmixin"], [109, "currentmixin"]], "RefractoryMixin": [[105, "refractorymixin"]], "SpikeRefractoryMixin": [[106, "spikerefractorymixin"]], "VoltageMixin": [[107, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[108, "currentderivedspikemixin"]], "SpikeCurrentMixin": [[110, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[111, "spikederivedcurrentmixin"]], "SpikeMixin": [[112, "spikemixin"]], "normal": [[113, "normal"]], "normalize": [[114, "normalize"]], "ConditionalCumulativeTraceReducer": [[115, "conditionalcumulativetracereducer"]], "ConditionalNearestTraceReducer": [[116, "conditionalnearesttracereducer"]], "CumulativeTraceReducer": [[117, "cumulativetracereducer"]], "DifferenceMonitor": [[118, "differencemonitor"]], "EMAReducer": [[119, "emareducer"]], "EventReducer": [[120, "eventreducer"]], "FoldReducer": [[121, "foldreducer"]], "InputMonitor": [[122, "inputmonitor"]], "Monitor": [[123, "monitor"]], "MonitorConstructor": [[124, "monitorconstructor"]], "MonitorPool": [[125, "monitorpool"]], "NearestTraceReducer": [[126, "nearesttracereducer"]], "Observable": [[127, "observable"]], "OutputMonitor": [[128, "outputmonitor"]], "PassthroughReducer": [[129, "passthroughreducer"]], "RecordReducer": [[130, "recordreducer"]], "Reducer": [[131, "reducer"]], "ScaledCumulativeTraceReducer": [[132, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[133, "scalednearesttracereducer"]], "StateMonitor": [[134, "statemonitor"]], "ones": [[135, "ones"]], "rescale": [[136, "rescale"]], "scalar": [[137, "scalar"]], "sqrt": [[138, "sqrt"]], "LogNormal": [[139, "lognormal"]], "Parameters": [[139, null], [140, null], [141, null]], "Support": [[139, null], [140, null], [141, null]], "Normal": [[140, "normal"]], "Poisson": [[141, "poisson"]], "trace_cumulative": [[142, "trace-cumulative"]], "trace_cumulative_scaled": [[143, "trace-cumulative-scaled"]], "trace_nearest": [[144, "trace-nearest"]], "trace_nearest_scaled": [[145, "trace-nearest-scaled"]], "ManyToMany": [[146, "manytomany"]], "ManyToManyMethod": [[147, "manytomanymethod"]], "ManyToOne": [[148, "manytoone"]], "ManyToOneMethod": [[149, "manytoonemethod"]], "OneToMany": [[150, "onetomany"]], "OneToManyMethod": [[151, "onetomanymethod"]], "OneToOne": [[152, "onetoone"]], "OneToOneMethod": [[153, "onetoonemethod"]], "uniform": [[154, "uniform"]], "zeros": [[155, "zeros"]], "API Reference": [[156, "api-reference"]], "inferno": [[157, "inferno"]], "Infrastructure": [[157, "infrastructure"]], "Tensor Creation": [[157, "tensor-creation"]], "Math Operations": [[157, "math-operations"]], "Spike Trace": [[157, "spike-trace"]], "Types": [[157, "types"], [159, "types"]], "inferno.learn": [[158, "module-inferno.learn"]], "Components": [[158, "components"], [159, "components"], [161, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[158, "updaters-spike-timing-dependent-plasticity"]], "Classifiers": [[158, "classifiers"]], "inferno.neural": [[159, "module-inferno.neural"]], "Modeling": [[159, "modeling"]], "Neurons": [[159, "neurons"], [163, "neurons"]], "Synapses": [[159, "synapses"], [163, "synapses"]], "Connections": [[159, "connections"]], "Encoders": [[159, "encoders"]], "Hooks": [[159, "hooks"]], "Internal Components": [[159, "internal-components"]], "Internal Mixins": [[159, "internal-mixins"]], "inferno.neural.functional": [[160, "module-inferno.neural.functional"]], "Encodings": [[160, "encodings"]], "Neuronal Dynamics": [[160, "neuronal-dynamics"]], "inferno.observe": [[161, "inferno-observe"]], "Monitors": [[161, "monitors"]], "Reducers": [[161, "reducers"]], "inferno.stats": [[162, "module-inferno.stats"]], "Distributions": [[162, "distributions"]], "Model and Method Zoo": [[163, "model-and-method-zoo"]], "Overview": [[163, "overview"], [164, "overview"], [166, "overview"]], "Learning Methods": [[163, "learning-methods"]], "ReSuMe-Like Learning Methods": [[164, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[165, "stdp-like-learning-methods"]], "Hebbian Learning": [[165, "hebbian-learning"]], "Spike Timing-Dependent Plasticity (STDP)": [[165, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[165, "formulation"], [165, "id1"], [165, "id2"], [166, "formulation"], [166, "id1"], [166, "id3"], [166, "id5"], [167, "formulation"], [167, "id1"], [167, "id4"], [168, "formulation"], [168, "id1"], [168, "id4"], [168, "id7"], [169, "formulation"], [170, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[165, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[165, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Description": [[165, "description"], [167, "description"], [167, "id2"], [167, "id5"], [168, "description"], [168, "id2"], [168, "id5"], [168, "id8"], [170, "description"]], "References": [[165, "references"], [165, "id3"], [166, "references"], [166, "id2"], [166, "id4"], [166, "id6"], [167, "references"], [167, "id3"], [167, "id6"], [168, "references"], [168, "id3"], [168, "id6"], [168, "id9"], [170, "references"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[165, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Triplet Spike-Timing Dependent Plasticity (STDP)": [[165, "triplet-spike-timing-dependent-plasticity-stdp"]], "Neuronal Adaptation": [[166, "neuronal-adaptation"]], "Adaptive Current, Linear": [[166, "adaptive-current-linear"]], "Adaptive Current, Linear Spike-Dependent": [[166, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[166, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[166, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[167, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[167, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[167, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[167, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[167, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[167, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[167, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[167, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[167, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[168, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[168, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[168, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[168, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[168, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[169, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[169, "delta-coba-variant"]], "Synapse Models, Current-Based": [[170, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[170, "delta-cuba-variant"]]}, "indexentries": {"inferno.functional": [[5, "module-inferno.functional"]], "module": [[5, "module-inferno.functional"], [158, "module-inferno.learn"], [159, "module-inferno.neural"], [160, "module-inferno.neural.functional"], [162, "module-inferno.stats"]], "contextualhook (class in inferno)": [[6, "inferno.ContextualHook"]], "hook (class in inferno)": [[7, "inferno.Hook"]], "deregister() (hook method)": [[7, "inferno.Hook.deregister"]], "evalexec (hook property)": [[7, "inferno.Hook.evalexec"]], "register() (hook method)": [[7, "inferno.Hook.register"]], "registered (hook property)": [[7, "inferno.Hook.registered"]], "trainexec (hook property)": [[7, "inferno.Hook.trainexec"]], "module (class in inferno)": [[8, "inferno.Module"]], "get_extra() (module method)": [[8, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[8, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[8, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[8, "inferno.Module.set_extra_state"]], "linkedattributes (recordtensor attribute)": [[9, "inferno.RecordTensor.LinkedAttributes"]], "recordtensor (class in inferno)": [[9, "inferno.RecordTensor"]], "align() (recordtensor method)": [[9, "inferno.RecordTensor.align"]], "attributes (recordtensor property)": [[9, "inferno.RecordTensor.attributes"]], "constraints (recordtensor property)": [[9, "inferno.RecordTensor.constraints"]], "create() (recordtensor class method)": [[9, "inferno.RecordTensor.create"]], "decr() (recordtensor method)": [[9, "inferno.RecordTensor.decr"]], "deinitialize() (recordtensor method)": [[9, "inferno.RecordTensor.deinitialize"]], "dt (recordtensor property)": [[9, "inferno.RecordTensor.dt"]], "duration (recordtensor property)": [[9, "inferno.RecordTensor.duration"]], "incr() (recordtensor method)": [[9, "inferno.RecordTensor.incr"]], "initialize() (recordtensor method)": [[9, "inferno.RecordTensor.initialize"]], "insert() (recordtensor method)": [[9, "inferno.RecordTensor.insert"]], "latest (recordtensor property)": [[9, "inferno.RecordTensor.latest"]], "peek() (recordtensor method)": [[9, "inferno.RecordTensor.peek"]], "pointer (recordtensor property)": [[9, "inferno.RecordTensor.pointer"]], "pop() (recordtensor method)": [[9, "inferno.RecordTensor.pop"]], "push() (recordtensor method)": [[9, "inferno.RecordTensor.push"]], "read() (recordtensor method)": [[9, "inferno.RecordTensor.read"]], "readrange() (recordtensor method)": [[9, "inferno.RecordTensor.readrange"]], "reconstrain() (recordtensor method)": [[9, "inferno.RecordTensor.reconstrain"]], "recordsz (recordtensor property)": [[9, "inferno.RecordTensor.recordsz"]], "reset() (recordtensor method)": [[9, "inferno.RecordTensor.reset"]], "select() (recordtensor method)": [[9, "inferno.RecordTensor.select"]], "shape (recordtensor property)": [[9, "inferno.RecordTensor.shape"]], "value (recordtensor property)": [[9, "inferno.RecordTensor.value"]], "write() (recordtensor method)": [[9, "inferno.RecordTensor.write"]], "writerange() (recordtensor method)": [[9, "inferno.RecordTensor.writerange"]], "linkedattributes (shapedtensor attribute)": [[10, "inferno.ShapedTensor.LinkedAttributes"]], "shapedtensor (class in inferno)": [[10, "inferno.ShapedTensor"]], "attributes (shapedtensor property)": [[10, "inferno.ShapedTensor.attributes"]], "compatible() (shapedtensor method)": [[10, "inferno.ShapedTensor.compatible"]], "constraints (shapedtensor property)": [[10, "inferno.ShapedTensor.constraints"]], "create() (shapedtensor class method)": [[10, "inferno.ShapedTensor.create"]], "dimensionality (shapedtensor property)": [[10, "inferno.ShapedTensor.dimensionality"]], "ignored (shapedtensor property)": [[10, "inferno.ShapedTensor.ignored"]], "live (shapedtensor property)": [[10, "inferno.ShapedTensor.live"]], "name (shapedtensor property)": [[10, "inferno.ShapedTensor.name"]], "owner (shapedtensor property)": [[10, "inferno.ShapedTensor.owner"]], "reconstrain() (shapedtensor method)": [[10, "inferno.ShapedTensor.reconstrain"]], "resize() (shapedtensor static method)": [[10, "inferno.ShapedTensor.resize"]], "strict (shapedtensor property)": [[10, "inferno.ShapedTensor.strict"]], "valid (shapedtensor property)": [[10, "inferno.ShapedTensor.valid"]], "value (shapedtensor property)": [[10, "inferno.ShapedTensor.value"]], "statehook (class in inferno)": [[11, "inferno.StateHook"]], "forward() (statehook method)": [[11, "inferno.StateHook.forward"]], "hook() (statehook method)": [[11, "inferno.StateHook.hook"]], "module (statehook property)": [[11, "inferno.StateHook.module"]], "register() (statehook method)": [[11, "inferno.StateHook.register"]], "astensors() (in module inferno)": [[12, "inferno.astensors"]], "empty() (in module inferno)": [[13, "inferno.empty"]], "exp() (in module inferno)": [[14, "inferno.exp"]], "exponential_smoothing() (in module inferno)": [[15, "inferno.exponential_smoothing"]], "full() (in module inferno)": [[16, "inferno.full"]], "extrapolation (class in inferno.functional)": [[17, "inferno.functional.Extrapolation"]], "fullbounding (class in inferno.functional)": [[18, "inferno.functional.FullBounding"]], "halfbounding (class in inferno.functional)": [[19, "inferno.functional.HalfBounding"]], "interpolation (class in inferno.functional)": [[20, "inferno.functional.Interpolation"]], "bound_lower_multiplicative() (in module inferno.functional)": [[21, "inferno.functional.bound_lower_multiplicative"]], "bound_lower_power() (in module inferno.functional)": [[22, "inferno.functional.bound_lower_power"]], "bound_lower_sharp() (in module inferno.functional)": [[23, "inferno.functional.bound_lower_sharp"]], "bound_multiplicative() (in module inferno.functional)": [[24, "inferno.functional.bound_multiplicative"]], "bound_power() (in module inferno.functional)": [[25, "inferno.functional.bound_power"]], "bound_sharp() (in module inferno.functional)": [[26, "inferno.functional.bound_sharp"]], "bound_upper_multiplicative() (in module inferno.functional)": [[27, "inferno.functional.bound_upper_multiplicative"]], "bound_upper_power() (in module inferno.functional)": [[28, "inferno.functional.bound_upper_power"]], "bound_upper_sharp() (in module inferno.functional)": [[29, "inferno.functional.bound_upper_sharp"]], "extrap_expdecay() (in module inferno.functional)": [[30, "inferno.functional.extrap_expdecay"]], "extrap_expratedecay() (in module inferno.functional)": [[31, "inferno.functional.extrap_expratedecay"]], "extrap_linear_backward() (in module inferno.functional)": [[32, "inferno.functional.extrap_linear_backward"]], "extrap_linear_forward() (in module inferno.functional)": [[33, "inferno.functional.extrap_linear_forward"]], "extrap_nearest() (in module inferno.functional)": [[34, "inferno.functional.extrap_nearest"]], "extrap_neighbors() (in module inferno.functional)": [[35, "inferno.functional.extrap_neighbors"]], "extrap_next() (in module inferno.functional)": [[36, "inferno.functional.extrap_next"]], "extrap_previous() (in module inferno.functional)": [[37, "inferno.functional.extrap_previous"]], "interp_expdecay() (in module inferno.functional)": [[38, "inferno.functional.interp_expdecay"]], "interp_expratedecay() (in module inferno.functional)": [[39, "inferno.functional.interp_expratedecay"]], "interp_linear() (in module inferno.functional)": [[40, "inferno.functional.interp_linear"]], "interp_nearest() (in module inferno.functional)": [[41, "inferno.functional.interp_nearest"]], "interp_next() (in module inferno.functional)": [[42, "inferno.functional.interp_next"]], "interp_previous() (in module inferno.functional)": [[43, "inferno.functional.interp_previous"]], "holt_linear_smoothing() (in module inferno)": [[44, "inferno.holt_linear_smoothing"]], "isi() (in module inferno)": [[45, "inferno.isi"]], "celltrainer (class in inferno.learn)": [[46, "inferno.learn.CellTrainer"]], "add_cell() (celltrainer method)": [[46, "inferno.learn.CellTrainer.add_cell"]], "add_monitor() (celltrainer method)": [[46, "inferno.learn.CellTrainer.add_monitor"]], "cells (celltrainer property)": [[46, "inferno.learn.CellTrainer.cells"]], "clear() (celltrainer method)": [[46, "inferno.learn.CellTrainer.clear"]], "del_cell() (celltrainer method)": [[46, "inferno.learn.CellTrainer.del_cell"]], "del_monitor() (celltrainer method)": [[46, "inferno.learn.CellTrainer.del_monitor"]], "forward() (celltrainer method)": [[46, "inferno.learn.CellTrainer.forward"]], "get_cell() (celltrainer method)": [[46, "inferno.learn.CellTrainer.get_cell"]], "get_monitor() (celltrainer method)": [[46, "inferno.learn.CellTrainer.get_monitor"]], "monitors (celltrainer property)": [[46, "inferno.learn.CellTrainer.monitors"]], "named_cells (celltrainer property)": [[46, "inferno.learn.CellTrainer.named_cells"]], "named_monitors (celltrainer property)": [[46, "inferno.learn.CellTrainer.named_monitors"]], "named_monitors_of() (celltrainer method)": [[46, "inferno.learn.CellTrainer.named_monitors_of"]], "train() (celltrainer method)": [[46, "inferno.learn.CellTrainer.train"]], "update() (celltrainer method)": [[46, "inferno.learn.CellTrainer.update"]], "independenttrainer (class in inferno.learn)": [[47, "inferno.learn.IndependentTrainer"]], "independenttrainer.unit (class in inferno.learn)": [[47, "inferno.learn.IndependentTrainer.Unit"]], "cell (independenttrainer.unit attribute)": [[47, "inferno.learn.IndependentTrainer.Unit.cell"]], "get_unit() (independenttrainer method)": [[47, "inferno.learn.IndependentTrainer.get_unit"]], "monitors (independenttrainer.unit attribute)": [[47, "inferno.learn.IndependentTrainer.Unit.monitors"]], "register_cell() (independenttrainer method)": [[47, "inferno.learn.IndependentTrainer.register_cell"]], "state (independenttrainer.unit attribute)": [[47, "inferno.learn.IndependentTrainer.Unit.state"]], "mstdpet (class in inferno.learn)": [[48, "inferno.learn.MSTDPET"]], "forward() (mstdpet method)": [[48, "inferno.learn.MSTDPET.forward"]], "register_cell() (mstdpet method)": [[48, "inferno.learn.MSTDPET.register_cell"]], "stdp (class in inferno.learn)": [[49, "inferno.learn.STDP"]], "forward() (stdp method)": [[49, "inferno.learn.STDP.forward"]], "register_cell() (stdp method)": [[49, "inferno.learn.STDP.register_cell"]], "toprateclassifier (class in inferno.learn)": [[50, "inferno.learn.TopRateClassifier"]], "assignments (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.assignments"]], "forward() (toprateclassifier method)": [[50, "inferno.learn.TopRateClassifier.forward"]], "infer() (toprateclassifier method)": [[50, "inferno.learn.TopRateClassifier.infer"]], "learn() (toprateclassifier method)": [[50, "inferno.learn.TopRateClassifier.learn"]], "nclass (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.nclass"]], "ndim (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.ndim"]], "occurances (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.occurances"]], "proportional (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.proportional"]], "proportions (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.proportions"]], "rates (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.rates"]], "shape (toprateclassifier property)": [[50, "inferno.learn.TopRateClassifier.shape"]], "alif (class in inferno.neural)": [[51, "inferno.neural.ALIF"]], "clear() (alif method)": [[51, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[51, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[51, "inferno.neural.ALIF.forward"]], "adex (class in inferno.neural)": [[52, "inferno.neural.AdEx"]], "clear() (adex method)": [[52, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[52, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[52, "inferno.neural.AdEx.forward"]], "biclique (class in inferno.neural)": [[53, "inferno.neural.Biclique"]], "add_cell() (biclique method)": [[53, "inferno.neural.Biclique.add_cell"]], "add_connection() (biclique method)": [[53, "inferno.neural.Biclique.add_connection"]], "add_neuron() (biclique method)": [[53, "inferno.neural.Biclique.add_neuron"]], "del_cell() (biclique method)": [[53, "inferno.neural.Biclique.del_cell"]], "del_connection() (biclique method)": [[53, "inferno.neural.Biclique.del_connection"]], "del_neuron() (biclique method)": [[53, "inferno.neural.Biclique.del_neuron"]], "wiring() (biclique method)": [[53, "inferno.neural.Biclique.wiring"]], "cell (class in inferno.neural)": [[54, "inferno.neural.Cell"]], "connection (cell property)": [[54, "inferno.neural.Cell.connection"]], "forward() (cell method)": [[54, "inferno.neural.Cell.forward"]], "local_remap() (cell method)": [[54, "inferno.neural.Cell.local_remap"]], "neuron (cell property)": [[54, "inferno.neural.Cell.neuron"]], "postspike (cell property)": [[54, "inferno.neural.Cell.postspike"]], "postvoltage (cell property)": [[54, "inferno.neural.Cell.postvoltage"]], "precurrent (cell property)": [[54, "inferno.neural.Cell.precurrent"]], "prespike (cell property)": [[54, "inferno.neural.Cell.prespike"]], "synapse (cell property)": [[54, "inferno.neural.Cell.synapse"]], "updater (cell property)": [[54, "inferno.neural.Cell.updater"]], "clamping (class in inferno.neural)": [[55, "inferno.neural.Clamping"]], "hook() (clamping method)": [[55, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[56, "inferno.neural.Connection"]], "batched_inshape (connection property)": [[56, "inferno.neural.Connection.batched_inshape"]], "batched_outshape (connection property)": [[56, "inferno.neural.Connection.batched_outshape"]], "batchsz (connection property)": [[56, "inferno.neural.Connection.batchsz"]], "bias (connection property)": [[56, "inferno.neural.Connection.bias"]], "biased (connection property)": [[56, "inferno.neural.Connection.biased"]], "clear() (connection method)": [[56, "inferno.neural.Connection.clear"]], "defaultupdater() (connection method)": [[56, "inferno.neural.Connection.defaultupdater"]], "delay (connection property)": [[56, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[56, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[56, "inferno.neural.Connection.dt"]], "extra_repr() (connection method)": [[56, "inferno.neural.Connection.extra_repr"]], "forward() (connection method)": [[56, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[56, "inferno.neural.Connection.inshape"]], "insize() (connection method)": [[56, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[56, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[56, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[56, "inferno.neural.Connection.outshape"]], "outsize() (connection method)": [[56, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[56, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[56, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[56, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[56, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[56, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[56, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[56, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[57, "inferno.neural.Conv2D"]], "forward() (conv2d method)": [[57, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[57, "inferno.neural.Conv2D.inshape"]], "like_input() (conv2d method)": [[57, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[57, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[57, "inferno.neural.Conv2D.outshape"]], "postsyn_receptive() (conv2d method)": [[57, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[57, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[57, "inferno.neural.Conv2D.selector"]], "deltacurrent (class in inferno.neural)": [[58, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[58, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[58, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[58, "inferno.neural.DeltaCurrent.partialconstructor"]], "spike_ (deltacurrent attribute)": [[58, "inferno.neural.DeltaCurrent.spike_"]], "deltapluscurrent (class in inferno.neural)": [[59, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[59, "inferno.neural.DeltaPlusCurrent.clear"]], "current_ (deltapluscurrent attribute)": [[59, "inferno.neural.DeltaPlusCurrent.current_"]], "forward() (deltapluscurrent method)": [[59, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[59, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "spike_ (deltapluscurrent attribute)": [[59, "inferno.neural.DeltaPlusCurrent.spike_"]], "eif (class in inferno.neural)": [[60, "inferno.neural.EIF"]], "clear() (eif method)": [[60, "inferno.neural.EIF.clear"]], "dt (eif property)": [[60, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[60, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[61, "inferno.neural.GLIF1"]], "clear() (glif1 method)": [[61, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[61, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[61, "inferno.neural.GLIF1.forward"]], "glif2 (class in inferno.neural)": [[62, "inferno.neural.GLIF2"]], "clear() (glif2 method)": [[62, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[62, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[62, "inferno.neural.GLIF2.forward"]], "homogeneouspoissonencoder (class in inferno.neural)": [[63, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[63, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[63, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[63, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[63, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "infernoneuron (class in inferno.neural)": [[64, "inferno.neural.InfernoNeuron"]], "batchsz (infernoneuron property)": [[64, "inferno.neural.InfernoNeuron.batchsz"]], "clear() (infernoneuron method)": [[64, "inferno.neural.InfernoNeuron.clear"]], "dt (infernoneuron property)": [[64, "inferno.neural.InfernoNeuron.dt"]], "forward() (infernoneuron method)": [[64, "inferno.neural.InfernoNeuron.forward"]], "refrac (infernoneuron property)": [[64, "inferno.neural.InfernoNeuron.refrac"]], "spike (infernoneuron property)": [[64, "inferno.neural.InfernoNeuron.spike"]], "voltage (infernoneuron property)": [[64, "inferno.neural.InfernoNeuron.voltage"]], "infernosynapse (class in inferno.neural)": [[65, "inferno.neural.InfernoSynapse"]], "clear() (infernosynapse method)": [[65, "inferno.neural.InfernoSynapse.clear"]], "current (infernosynapse property)": [[65, "inferno.neural.InfernoSynapse.current"]], "current_at() (infernosynapse method)": [[65, "inferno.neural.InfernoSynapse.current_at"]], "delay (infernosynapse property)": [[65, "inferno.neural.InfernoSynapse.delay"]], "dt (infernosynapse property)": [[65, "inferno.neural.InfernoSynapse.dt"]], "forward() (infernosynapse method)": [[65, "inferno.neural.InfernoSynapse.forward"]], "partialconstructor() (infernosynapse class method)": [[65, "inferno.neural.InfernoSynapse.partialconstructor"]], "spike (infernosynapse property)": [[65, "inferno.neural.InfernoSynapse.spike"]], "spike_at() (infernosynapse method)": [[65, "inferno.neural.InfernoSynapse.spike_at"]], "izhikevich (class in inferno.neural)": [[66, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[66, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[66, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[66, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[67, "inferno.neural.LIF"]], "clear() (lif method)": [[67, "inferno.neural.LIF.clear"]], "dt (lif property)": [[67, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[67, "inferno.neural.LIF.forward"]], "layer (class in inferno.neural)": [[68, "inferno.neural.Layer"]], "add_cell() (layer method)": [[68, "inferno.neural.Layer.add_cell"]], "add_connection() (layer method)": [[68, "inferno.neural.Layer.add_connection"]], "add_neuron() (layer method)": [[68, "inferno.neural.Layer.add_neuron"]], "cells (layer property)": [[68, "inferno.neural.Layer.cells"]], "connections (layer property)": [[68, "inferno.neural.Layer.connections"]], "del_cell() (layer method)": [[68, "inferno.neural.Layer.del_cell"]], "del_connection() (layer method)": [[68, "inferno.neural.Layer.del_connection"]], "del_neuron() (layer method)": [[68, "inferno.neural.Layer.del_neuron"]], "forward() (layer method)": [[68, "inferno.neural.Layer.forward"]], "get_cell() (layer method)": [[68, "inferno.neural.Layer.get_cell"]], "get_connection() (layer method)": [[68, "inferno.neural.Layer.get_connection"]], "get_neuron() (layer method)": [[68, "inferno.neural.Layer.get_neuron"]], "named_cells (layer property)": [[68, "inferno.neural.Layer.named_cells"]], "named_connections (layer property)": [[68, "inferno.neural.Layer.named_connections"]], "named_neurons (layer property)": [[68, "inferno.neural.Layer.named_neurons"]], "named_synapses (layer property)": [[68, "inferno.neural.Layer.named_synapses"]], "neurons (layer property)": [[68, "inferno.neural.Layer.neurons"]], "update() (layer method)": [[68, "inferno.neural.Layer.update"]], "wiring() (layer method)": [[68, "inferno.neural.Layer.wiring"]], "lineardense (class in inferno.neural)": [[69, "inferno.neural.LinearDense"]], "forward() (lineardense method)": [[69, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[69, "inferno.neural.LinearDense.inshape"]], "like_input() (lineardense method)": [[69, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[69, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[69, "inferno.neural.LinearDense.outshape"]], "postsyn_receptive() (lineardense method)": [[69, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[69, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[69, "inferno.neural.LinearDense.selector"]], "lineardirect (class in inferno.neural)": [[70, "inferno.neural.LinearDirect"]], "forward() (lineardirect method)": [[70, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[70, "inferno.neural.LinearDirect.inshape"]], "like_input() (lineardirect method)": [[70, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[70, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[70, "inferno.neural.LinearDirect.outshape"]], "postsyn_receptive() (lineardirect method)": [[70, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[70, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[70, "inferno.neural.LinearDirect.selector"]], "linearlateral (class in inferno.neural)": [[71, "inferno.neural.LinearLateral"]], "delay (linearlateral property)": [[71, "inferno.neural.LinearLateral.delay"]], "forward() (linearlateral method)": [[71, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[71, "inferno.neural.LinearLateral.inshape"]], "like_input() (linearlateral method)": [[71, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[71, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[71, "inferno.neural.LinearLateral.outshape"]], "postsyn_receptive() (linearlateral method)": [[71, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[71, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[71, "inferno.neural.LinearLateral.selector"]], "weight (linearlateral property)": [[71, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[72, "inferno.neural.Neuron"]], "batchedshape (neuron property)": [[72, "inferno.neural.Neuron.batchedshape"]], "batchsz (neuron property)": [[72, "inferno.neural.Neuron.batchsz"]], "clear() (neuron method)": [[72, "inferno.neural.Neuron.clear"]], "count (neuron property)": [[72, "inferno.neural.Neuron.count"]], "dt (neuron property)": [[72, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[72, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[72, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[72, "inferno.neural.Neuron.refrac"]], "shape (neuron property)": [[72, "inferno.neural.Neuron.shape"]], "spike (neuron property)": [[72, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[72, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[73, "inferno.neural.Normalization"]], "hook() (normalization method)": [[73, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[74, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[74, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[74, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[75, "inferno.neural.QIF"]], "clear() (qif method)": [[75, "inferno.neural.QIF.clear"]], "dt (qif property)": [[75, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[75, "inferno.neural.QIF.forward"]], "serial (class in inferno.neural)": [[76, "inferno.neural.Serial"]], "add_cell() (serial method)": [[76, "inferno.neural.Serial.add_cell"]], "add_connection() (serial method)": [[76, "inferno.neural.Serial.add_connection"]], "add_neuron() (serial method)": [[76, "inferno.neural.Serial.add_neuron"]], "cell (serial property)": [[76, "inferno.neural.Serial.cell"]], "connection (serial property)": [[76, "inferno.neural.Serial.connection"]], "del_cell() (serial method)": [[76, "inferno.neural.Serial.del_cell"]], "del_connection() (serial method)": [[76, "inferno.neural.Serial.del_connection"]], "del_neuron() (serial method)": [[76, "inferno.neural.Serial.del_neuron"]], "forward() (serial method)": [[76, "inferno.neural.Serial.forward"]], "neuron (serial property)": [[76, "inferno.neural.Serial.neuron"]], "synapse (serial property)": [[76, "inferno.neural.Serial.synapse"]], "updater (serial property)": [[76, "inferno.neural.Serial.updater"]], "wiring() (serial method)": [[76, "inferno.neural.Serial.wiring"]], "synapse (class in inferno.neural)": [[77, "inferno.neural.Synapse"]], "clear() (synapse method)": [[77, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[77, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[77, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[77, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[77, "inferno.neural.Synapse.dt"]], "extra_repr() (synapse method)": [[77, "inferno.neural.Synapse.extra_repr"]], "forward() (synapse method)": [[77, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[77, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[77, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[77, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[78, "inferno.neural.SynapseConstructor"]], "updatable (class in inferno.neural)": [[79, "inferno.neural.Updatable"]], "clear() (updatable method)": [[79, "inferno.neural.Updatable.clear"]], "defaultupdater() (updatable method)": [[79, "inferno.neural.Updatable.defaultupdater"]], "updatable (updatable property)": [[79, "inferno.neural.Updatable.updatable"]], "update() (updatable method)": [[79, "inferno.neural.Updatable.update"]], "updater (updatable property)": [[79, "inferno.neural.Updatable.updater"]], "updatesome() (updatable method)": [[79, "inferno.neural.Updatable.updatesome"]], "updater (class in inferno.neural)": [[80, "inferno.neural.Updater"]], "clear() (updater method)": [[80, "inferno.neural.Updater.clear"]], "forward() (updater method)": [[80, "inferno.neural.Updater.forward"]], "names (updater property)": [[80, "inferno.neural.Updater.names"]], "parent (updater property)": [[80, "inferno.neural.Updater.parent"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[81, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[81, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[82, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[82, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[83, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[83, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[84, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[85, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[86, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[87, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[88, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[89, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[90, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[91, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[92, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[93, "inferno.neural.functional.enc_poisson_interval_online"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[94, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[95, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding_constant() (in module inferno.neural.functional)": [[96, "inferno.neural.functional.voltage_thresholding_constant"]], "voltage_thresholding_linear() (in module inferno.neural.functional)": [[97, "inferno.neural.functional.voltage_thresholding_linear"]], "batchmixin (class in inferno.neural.mixins)": [[98, "inferno.neural.mixins.BatchMixin"]], "add_batched() (batchmixin method)": [[98, "inferno.neural.mixins.BatchMixin.add_batched"]], "batchsz (batchmixin property)": [[98, "inferno.neural.mixins.BatchMixin.batchsz"]], "batchshapemixin (class in inferno.neural.mixins)": [[99, "inferno.neural.mixins.BatchShapeMixin"]], "batchedshape (batchshapemixin property)": [[99, "inferno.neural.mixins.BatchShapeMixin.batchedshape"]], "delayedmixin (class in inferno.neural.mixins)": [[100, "inferno.neural.mixins.DelayedMixin"]], "add_delayed() (delayedmixin method)": [[100, "inferno.neural.mixins.DelayedMixin.add_delayed"]], "delay (delayedmixin property)": [[100, "inferno.neural.mixins.DelayedMixin.delay"]], "dt (delayedmixin property)": [[100, "inferno.neural.mixins.DelayedMixin.dt"]], "shapemixin (class in inferno.neural.mixins)": [[101, "inferno.neural.mixins.ShapeMixin"]], "count (shapemixin property)": [[101, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[101, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptivecurrentmixin (class in inferno.neural.neurons.mixins)": [[102, "inferno.neural.neurons.mixins.AdaptiveCurrentMixin"]], "current_adaptation (adaptivecurrentmixin property)": [[102, "inferno.neural.neurons.mixins.AdaptiveCurrentMixin.current_adaptation"]], "adaptivethresholdmixin (class in inferno.neural.neurons.mixins)": [[103, "inferno.neural.neurons.mixins.AdaptiveThresholdMixin"]], "threshold_adapation (adaptivethresholdmixin property)": [[103, "inferno.neural.neurons.mixins.AdaptiveThresholdMixin.threshold_adapation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[104, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[104, "inferno.neural.neurons.mixins.CurrentMixin.current"], [109, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[105, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[105, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[106, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[106, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[107, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[107, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[108, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[108, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "spike_at() (currentderivedspikemixin method)": [[108, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike_at"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[109, "inferno.neural.synapses.mixins.CurrentMixin"]], "current_at() (currentmixin method)": [[109, "inferno.neural.synapses.mixins.CurrentMixin.current_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[110, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[111, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[111, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "current_at() (spikederivedcurrentmixin method)": [[111, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current_at"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[112, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[112, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "spike_at() (spikemixin method)": [[112, "inferno.neural.synapses.mixins.SpikeMixin.spike_at"]], "normal() (in module inferno)": [[113, "inferno.normal"]], "normalize() (in module inferno)": [[114, "inferno.normalize"]], "conditionalcumulativetracereducer (class in inferno.observe)": [[115, "inferno.observe.ConditionalCumulativeTraceReducer"]], "dt (conditionalcumulativetracereducer property)": [[115, "inferno.observe.ConditionalCumulativeTraceReducer.dt"]], "fold() (conditionalcumulativetracereducer method)": [[115, "inferno.observe.ConditionalCumulativeTraceReducer.fold"]], "interpolate() (conditionalcumulativetracereducer method)": [[115, "inferno.observe.ConditionalCumulativeTraceReducer.interpolate"]], "conditionalnearesttracereducer (class in inferno.observe)": [[116, "inferno.observe.ConditionalNearestTraceReducer"]], "dt (conditionalnearesttracereducer property)": [[116, "inferno.observe.ConditionalNearestTraceReducer.dt"]], "fold() (conditionalnearesttracereducer method)": [[116, "inferno.observe.ConditionalNearestTraceReducer.fold"]], "interpolate() (conditionalnearesttracereducer method)": [[116, "inferno.observe.ConditionalNearestTraceReducer.interpolate"]], "cumulativetracereducer (class in inferno.observe)": [[117, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[117, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[117, "inferno.observe.CumulativeTraceReducer.fold"]], "interpolate() (cumulativetracereducer method)": [[117, "inferno.observe.CumulativeTraceReducer.interpolate"]], "differencemonitor (class in inferno.observe)": [[118, "inferno.observe.DifferenceMonitor"]], "clear() (differencemonitor method)": [[118, "inferno.observe.DifferenceMonitor.clear"]], "partialconstructor() (differencemonitor class method)": [[118, "inferno.observe.DifferenceMonitor.partialconstructor"]], "emareducer (class in inferno.observe)": [[119, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[119, "inferno.observe.EMAReducer.fold"]], "interpolate() (emareducer method)": [[119, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[120, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[120, "inferno.observe.EventReducer.fold"]], "interpolate() (eventreducer method)": [[120, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[121, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[121, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[121, "inferno.observe.FoldReducer.data"]], "dump() (foldreducer method)": [[121, "inferno.observe.FoldReducer.dump"]], "fold() (foldreducer method)": [[121, "inferno.observe.FoldReducer.fold"]], "forward() (foldreducer method)": [[121, "inferno.observe.FoldReducer.forward"]], "interpolate() (foldreducer method)": [[121, "inferno.observe.FoldReducer.interpolate"]], "peek() (foldreducer method)": [[121, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[121, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[121, "inferno.observe.FoldReducer.view"]], "inputmonitor (class in inferno.observe)": [[122, "inferno.observe.InputMonitor"]], "partialconstructor() (inputmonitor class method)": [[122, "inferno.observe.InputMonitor.partialconstructor"]], "monitor (class in inferno.observe)": [[123, "inferno.observe.Monitor"]], "clear() (monitor method)": [[123, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[123, "inferno.observe.Monitor.dump"]], "latest (monitor property)": [[123, "inferno.observe.Monitor.latest"]], "partialconstructor() (monitor class method)": [[123, "inferno.observe.Monitor.partialconstructor"]], "peek() (monitor method)": [[123, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[123, "inferno.observe.Monitor.reducer"]], "register() (monitor method)": [[123, "inferno.observe.Monitor.register"]], "view() (monitor method)": [[123, "inferno.observe.Monitor.view"]], "monitorconstructor (class in inferno.observe)": [[124, "inferno.observe.MonitorConstructor"]], "monitorpool (class in inferno.observe)": [[125, "inferno.observe.MonitorPool"]], "add_monitor() (monitorpool method)": [[125, "inferno.observe.MonitorPool.add_monitor"]], "add_observed() (monitorpool method)": [[125, "inferno.observe.MonitorPool.add_observed"]], "del_monitor() (monitorpool method)": [[125, "inferno.observe.MonitorPool.del_monitor"]], "del_observed() (monitorpool method)": [[125, "inferno.observe.MonitorPool.del_observed"]], "get_monitor() (monitorpool method)": [[125, "inferno.observe.MonitorPool.get_monitor"]], "get_observed() (monitorpool method)": [[125, "inferno.observe.MonitorPool.get_observed"]], "monitors (monitorpool property)": [[125, "inferno.observe.MonitorPool.monitors"]], "named_monitors (monitorpool property)": [[125, "inferno.observe.MonitorPool.named_monitors"]], "named_monitors_of() (monitorpool method)": [[125, "inferno.observe.MonitorPool.named_monitors_of"]], "pool (monitorpool property)": [[125, "inferno.observe.MonitorPool.pool"]], "nearesttracereducer (class in inferno.observe)": [[126, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[126, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[126, "inferno.observe.NearestTraceReducer.fold"]], "interpolate() (nearesttracereducer method)": [[126, "inferno.observe.NearestTraceReducer.interpolate"]], "observable (class in inferno.observe)": [[127, "inferno.observe.Observable"]], "add_monitor() (observable method)": [[127, "inferno.observe.Observable.add_monitor"]], "local_remap() (observable method)": [[127, "inferno.observe.Observable.local_remap"]], "monitors (observable property)": [[127, "inferno.observe.Observable.monitors"]], "realign_attribute() (observable method)": [[127, "inferno.observe.Observable.realign_attribute"]], "outputmonitor (class in inferno.observe)": [[128, "inferno.observe.OutputMonitor"]], "partialconstructor() (outputmonitor class method)": [[128, "inferno.observe.OutputMonitor.partialconstructor"]], "passthroughreducer (class in inferno.observe)": [[129, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[129, "inferno.observe.PassthroughReducer.fold"]], "interpolate() (passthroughreducer method)": [[129, "inferno.observe.PassthroughReducer.interpolate"]], "recordreducer (class in inferno.observe)": [[130, "inferno.observe.RecordReducer"]], "add_record() (recordreducer method)": [[130, "inferno.observe.RecordReducer.add_record"]], "dt (recordreducer property)": [[130, "inferno.observe.RecordReducer.dt"]], "duration (recordreducer property)": [[130, "inferno.observe.RecordReducer.duration"]], "reducer (class in inferno.observe)": [[131, "inferno.observe.Reducer"]], "clear() (reducer method)": [[131, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[131, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[131, "inferno.observe.Reducer.forward"]], "latest (reducer property)": [[131, "inferno.observe.Reducer.latest"]], "peek() (reducer method)": [[131, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[131, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[131, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[132, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "interpolate() (scaledcumulativetracereducer method)": [[132, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[133, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[133, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[133, "inferno.observe.ScaledNearestTraceReducer.fold"]], "interpolate() (scalednearesttracereducer method)": [[133, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[134, "inferno.observe.StateMonitor"]], "partialconstructor() (statemonitor class method)": [[134, "inferno.observe.StateMonitor.partialconstructor"]], "ones() (in module inferno)": [[135, "inferno.ones"]], "rescale() (in module inferno)": [[136, "inferno.rescale"]], "scalar() (in module inferno)": [[137, "inferno.scalar"]], "sqrt() (in module inferno)": [[138, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[139, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[139, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[139, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[139, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[139, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[139, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[139, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[139, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[140, "inferno.stats.Normal"]], "cdf() (normal class method)": [[140, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[140, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[140, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[140, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[140, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[140, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[140, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[140, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[140, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[140, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[141, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[141, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[141, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[141, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[141, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[141, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[141, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[141, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[141, "inferno.stats.Poisson.variance"]], "trace_cumulative() (in module inferno)": [[142, "inferno.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno)": [[143, "inferno.trace_cumulative_scaled"]], "trace_nearest() (in module inferno)": [[144, "inferno.trace_nearest"]], "trace_nearest_scaled() (in module inferno)": [[145, "inferno.trace_nearest_scaled"]], "manytomany (class in inferno.types)": [[146, "inferno.types.ManyToMany"]], "manytomanymethod (class in inferno.types)": [[147, "inferno.types.ManyToManyMethod"]], "manytoone (class in inferno.types)": [[148, "inferno.types.ManyToOne"]], "manytoonemethod (class in inferno.types)": [[149, "inferno.types.ManyToOneMethod"]], "onetomany (class in inferno.types)": [[150, "inferno.types.OneToMany"]], "onetomanymethod (class in inferno.types)": [[151, "inferno.types.OneToManyMethod"]], "onetoone (class in inferno.types)": [[152, "inferno.types.OneToOne"]], "onetoonemethod (class in inferno.types)": [[153, "inferno.types.OneToOneMethod"]], "uniform() (in module inferno)": [[154, "inferno.uniform"]], "zeros() (in module inferno)": [[155, "inferno.zeros"]], "inferno.learn": [[158, "module-inferno.learn"]], "inferno.neural": [[159, "module-inferno.neural"]], "inferno.neural.functional": [[160, "module-inferno.neural.functional"]], "inferno.stats": [[162, "module-inferno.stats"]]}})