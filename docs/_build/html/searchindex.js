Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.mult_lower_bounding", "reference/generated/inferno.learn.functional.mult_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.tensorize", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.mult_lower_bounding.rst", "reference/generated/inferno.learn.functional.mult_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.tensorize.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "mult_lower_bounding", "mult_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "simple_exponential_smoothing", "sqrt", "LogNormal", "Normal", "Poisson", "tensorize", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 47, 96, 137, 141, 142], "provid": [0, 5, 8, 9, 10, 27, 110], "two": [0, 3, 6, 7, 8, 9, 37, 38, 140, 142], "main": 0, "wai": [0, 2, 10], "interact": [0, 12], "through": [0, 3, 37, 38, 48, 49, 50, 78, 79, 144], "its": [0, 2, 5, 6, 7, 10, 11, 22, 37, 44, 65, 66, 142, 144], "interfac": 0, "The": [0, 2, 3, 6, 7, 11, 12, 22, 23, 38, 40, 47, 53, 63, 64, 65, 66, 68, 69, 71, 73, 85, 89, 95, 96, 98, 101, 106, 107, 108, 114, 116, 139, 140, 142], "latter": [0, 47, 140, 142], "can": [0, 2, 3, 5, 6, 8, 10, 11, 21, 24, 25, 26, 34, 35, 43, 45, 80, 98, 99, 101, 103, 104, 108, 141, 142], "distinguish": 0, "have": [0, 3, 7, 22, 25, 26, 38, 47, 48, 49, 71, 73, 95, 96, 106, 107], "modul": [0, 6, 7, 8, 11, 12, 22, 23, 36, 37, 44, 47, 51, 52, 53, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 101, 103, 104, 108, 119, 121, 123, 125, 137], "name": [0, 5, 6, 7, 10, 22, 24, 36, 47, 52, 83, 85, 87, 89, 114, 115, 116], "which": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 52, 53, 54, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 110, 113, 116, 126, 139, 140, 141, 142, 144], "end": [0, 2, 16, 19, 21, 24, 28, 29, 34, 35, 38, 39, 40, 42, 43, 45, 46, 70, 71, 72, 73, 83, 93, 94, 100, 106, 107, 112, 139, 140, 141, 142, 144], "In": [0, 2, 7, 44, 53, 96, 141, 144], "gener": [0, 2, 3, 6, 11, 22, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 60, 61, 62, 65, 66, 67, 68, 69, 76, 77, 83, 91, 114, 115, 116, 126, 137, 140, 142], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 87, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 114, 115, 116, 117, 139, 140, 141, 142, 144], "great": 0, "get": [0, 22, 44, 65, 66], "off": [0, 83], "ground": [0, 23], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 10], "tensor": [0, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 126, 127], "shape": [0, 6, 13, 15, 34, 35, 39, 40, 41, 42, 43, 45, 46, 51, 54, 55, 56, 79, 80, 91, 109, 111, 126, 127], "compat": [0, 6, 10], "automat": [0, 10, 23, 60, 61, 62], "reduct": 0, "batch": [0, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 78, 79, 80, 87, 96], "axi": 0, "done": [0, 60, 61, 62], "you": [0, 10], "meanwhil": [0, 3], "more": [0, 3, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 60, 61, 62, 103, 104, 137, 140], "control": [0, 5, 11, 43, 45, 54, 75, 77, 139, 142], "over": [0, 2, 7, 23, 24, 34, 35, 38, 43, 48, 49, 50, 80, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 139, 140, 141, 142, 144], "flow": 0, "logic": [0, 7, 71, 73, 76, 77, 96], "allow": [0, 44, 65, 66, 70, 72, 93, 96, 100, 140], "greater": [0, 26, 67], "custom": [0, 24, 34, 35, 43, 45, 80], "base": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137], "class": [0, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125], "extend": [0, 10, 91, 126], "implement": [0, 2, 7, 10, 22, 26, 34, 35, 37, 41, 45, 51, 54, 55, 60, 62, 75, 76, 77, 96, 97, 137, 139, 140, 141], "subclass": [0, 5, 8, 11, 22, 26, 37, 38, 48, 49, 50, 51, 55, 97], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 27, 34, 35, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 54, 56, 60, 62, 65, 71, 73, 74, 75, 87, 96, 99, 114, 115, 116, 117, 141, 142], "from": [0, 2, 6, 7, 8, 10, 11, 13, 15, 17, 22, 23, 24, 37, 38, 39, 40, 44, 45, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 65, 66, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 106, 107, 109, 111, 114, 115, 116, 126, 127, 142, 144], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 5, 6, 7, 8, 10, 11, 21, 22, 24, 25, 26, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 101, 103, 104, 108, 116, 126, 139, 140, 141, 142, 144], "certain": 0, "case": [0, 2, 11, 19, 21, 24, 28, 29, 34, 39, 40, 42, 43, 46, 70, 71, 72, 73, 83, 92, 93, 100, 106, 107, 139, 144], "mai": [0, 2, 6, 9, 10, 24, 38, 47], "faster": [0, 44, 53], "less": [0, 26, 65, 66], "type": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "check": [0, 6, 71, 73], "need": [0, 10, 44, 47, 65, 66], "paramet": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 126, 127, 139, 140, 142], "remain": [0, 34, 42, 43, 46, 51, 60, 61, 62, 76, 77, 82, 83, 94, 140], "same": [0, 2, 5, 7, 10, 11, 34, 38, 43, 47, 80, 93, 94, 95, 96, 100, 102, 106, 107, 118, 119, 120, 121, 122, 123, 124, 125, 142], "multipl": [0, 2, 3, 30, 31, 38, 43, 47, 77, 96, 106, 107, 139], "call": [0, 7, 8, 10, 11, 12, 22, 36, 37, 38, 48, 49, 50, 52, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 98, 99, 101, 103, 104, 108, 116, 141, 142], "pre": [0, 24, 37, 38, 48, 49, 50, 139], "comput": [0, 2, 6, 23, 37, 38, 44, 48, 49, 50, 53, 110, 114, 115, 116], "initi": [0, 22, 38, 48, 49, 50, 51, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107], "unlik": [0, 11, 12], "artifici": 0, "neuron": [0, 23, 34, 35, 37, 41, 42, 43, 45, 46, 47, 54, 60, 61, 62, 74, 75, 76, 77, 80, 81, 82, 83, 84, 139, 144], "typic": [0, 10, 140, 142], "found": [0, 10], "ann": 0, "snn": 0, "ar": [0, 2, 5, 6, 7, 22, 23, 24, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 76, 77, 83, 85, 87, 89, 96, 97, 98, 110, 114, 115, 116, 117, 137, 139, 140, 141, 142], "fundament": 0, "state": [0, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 70, 71, 72, 73, 76, 77, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 112], "biolog": [0, 2, 3, 141], "electr": [0, 140, 141, 142, 144], "potenti": [0, 2, 3, 24, 29, 31, 33, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 74, 75, 76, 77, 83, 139, 140, 141, 142, 144], "differ": [0, 7, 23, 24, 34, 35, 39, 40, 41, 43, 45, 46, 54, 60, 62, 70, 72, 74, 75, 77, 87, 93, 96, 100, 140, 141, 142], "between": [0, 7, 9, 17, 18, 19, 20, 37, 39, 40, 44, 47, 53, 65, 66, 67, 68, 69, 93, 94, 95, 96, 97, 100, 102, 106, 107, 139, 142], "interior": 0, "exterior": 0, "cell": [0, 34, 35, 41, 43, 45, 46, 54, 74, 75, 140, 141, 142], "drive": 0, "forc": 0, "behind": [0, 2], "action": [0, 2, 3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 76, 77, 83, 140, 141, 142, 144], "simplifi": [0, 144], "model": [0, 2, 3, 21, 25, 26, 28, 29, 30, 31, 32, 33, 47, 140], "when": [0, 2, 5, 7, 8, 10, 11, 12, 23, 24, 34, 35, 36, 37, 38, 43, 45, 47, 48, 49, 50, 52, 60, 61, 62, 76, 77, 80, 87, 93, 96, 98, 99, 100, 101, 103, 104, 108, 117, 139, 140, 141], "": [0, 2, 6, 8, 10, 11, 12, 16, 17, 18, 19, 20, 22, 35, 41, 44, 45, 53, 54, 60, 62, 65, 66, 67, 68, 69, 71, 73, 75, 94, 96, 99, 105, 106, 107, 108, 112, 140, 141, 142], "import": [0, 2, 10], "treat": [0, 2, 24, 39, 40, 87], "variabl": [0, 2, 10], "separ": [0, 38, 44, 53], "each": [0, 2, 6, 7, 8, 23, 39, 40, 44, 53, 96, 140, 141, 142, 144], "sampl": [0, 7, 9, 17, 18, 19, 20, 23, 44, 53, 65, 66, 68, 69, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 114, 115, 116, 126], "present": [0, 6, 7, 23, 24, 25, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 96, 140], "dure": [0, 3, 34, 42, 43, 46, 51, 83], "fix": [0, 3, 34, 35, 41, 42, 43, 45, 46, 54, 116, 142], "hyperparamet": [0, 2, 137], "do": [0, 78, 79], "duplic": 0, "instead": [0, 2, 141], "broadcast": [0, 37, 40, 60, 61, 62, 63, 64], "some": [0, 2, 7, 9, 47, 71, 73, 94], "includ": [0, 7, 9, 10, 24, 27, 34, 35, 37, 38, 43, 45, 47, 48, 49, 50, 53, 68, 69, 79, 80, 96, 103, 104, 137], "adapt": [0, 3, 34, 35, 43, 45, 60, 61, 62, 63, 64, 70, 71, 72, 73, 80, 137], "behavior": [0, 5, 23, 24, 34, 35, 43, 44, 45, 47, 65, 66, 80, 137, 140, 141], "input": [0, 2, 6, 8, 13, 14, 15, 22, 23, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 109, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 142, 144], "A": [0, 2, 11, 24, 34, 35, 43, 45, 80, 116], "common": [0, 2, 39, 40, 51, 55, 56], "exampl": [0, 11, 63, 64, 142], "an": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 79, 80, 83, 87, 93, 95, 97, 100, 108, 116, 118, 119, 120, 121, 122, 123, 140, 141, 142, 144], "threshold": [0, 34, 35, 43, 45, 61, 62, 64, 76, 77, 137, 141, 142], "where": [0, 2, 6, 7, 11, 21, 23, 24, 25, 26, 29, 34, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 83, 87, 94, 96, 139, 140, 141, 142, 144], "defin": [0, 2, 5, 25, 26, 141], "minimum": [0, 6, 25, 26, 44, 65, 66, 110], "membran": [0, 3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 74, 75, 76, 77, 80, 81, 84, 140, 141, 142], "spike": [0, 2, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 61, 62, 64, 65, 66, 67, 68, 69, 76, 77, 83, 85, 87, 88, 89, 90, 137, 141, 142, 144], "These": [0, 23, 40, 140, 141], "should": [0, 6, 7, 8, 10, 11, 12, 22, 23, 24, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 60, 61, 62, 65, 66, 80, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "share": [0, 6], "across": [0, 34, 35, 41, 43, 45, 46, 48, 49, 50, 54, 74, 75, 140, 141, 142], "all": [0, 2, 22, 47, 48, 50, 52, 65, 66, 67, 68, 69, 70, 71, 92, 93, 96, 99, 105, 106, 110, 117, 141], "contribut": [0, 2, 106, 107], "portion": 0, "updat": [0, 2, 7, 8, 11, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 45, 60, 61, 62, 70, 71, 72, 73, 76, 77, 80, 139], "also": [0, 3, 6, 7, 24, 34, 35, 37, 38, 43, 45, 48, 49, 50, 67, 71, 73, 80, 141, 142], "appli": [0, 3, 6, 11, 12, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 48, 49, 50, 52, 60, 61, 62, 63, 64, 96, 103, 104, 139, 140, 141, 142, 144], "weight": [0, 11, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 37, 38, 48, 49, 50, 57, 58, 59, 137], "bias": [0, 37, 38, 48, 49, 50, 57, 58], "handl": [0, 10], "either": [0, 2, 7, 8, 23, 57, 62, 87, 140], "reduc": [0, 2, 23, 24, 34, 35, 43, 60, 61, 62, 80, 96, 97, 98, 99, 101, 103, 104, 108], "output": [0, 8, 12, 13, 15, 16, 23, 37, 38, 44, 47, 48, 49, 50, 53, 65, 66, 67, 68, 69, 71, 73, 76, 77, 91, 95, 99, 101, 103, 104, 106, 107, 109, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 142], "along": [0, 11, 38, 52, 60, 61, 62, 79, 92, 96, 110], "dimens": [0, 6, 7, 23, 24, 34, 35, 37, 38, 43, 44, 45, 48, 49, 50, 52, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 92, 96, 110], "former": [0, 47, 140], "effici": 0, "make": [0, 6], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 5, 137], "perform": [0, 2, 8, 11, 16, 23, 36, 38, 52, 70, 71, 72, 73, 96, 97, 112, 116], "But": 0, "might": 0, "necessari": 0, "hand": [0, 96], "detail": [0, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 137], "inform": [0, 8, 51, 103, 104, 140], "process": [0, 22, 24, 44, 65, 66], "arxiv": [0, 140], "1909": 0, "02549": 0, "becaus": [0, 7], "unit": [0, 7, 93, 94, 95, 96, 100, 102, 106, 107, 144], "relev": 0, "match": [0, 2, 6, 48, 49, 50, 70, 71, 72, 73, 93, 95, 100, 106, 107], "theoret": 0, "continu": [0, 114], "descript": [0, 137], "specifi": [0, 6, 7, 8, 13, 15, 22, 23, 25, 52, 55, 91, 92, 98, 101, 108, 109, 111, 126, 127, 139], "length": [0, 2, 7, 9, 17, 18, 19, 20, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 83, 93, 94, 95, 96, 97, 100, 102, 106, 107, 139, 140, 141, 142, 144], "given": [0, 10, 21, 22, 23, 24, 25, 53, 55, 68, 69, 76, 77, 96, 97, 99, 105, 114, 115, 116, 137, 140, 141, 144], "millisecond": [0, 24, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 82, 93, 96, 100, 106, 107], "On": 0, "step": [0, 3, 7, 16, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 93, 94, 95, 96, 97, 100, 102, 106, 107, 112, 139, 140, 141, 142, 144], "amount": [0, 9, 23, 34, 35, 38, 43, 45, 60, 61, 116, 139], "ha": [0, 5, 7, 10, 21, 22, 25, 26, 34, 37, 38, 43, 48, 49, 50, 80, 83, 85, 87, 89, 96, 108, 142, 144], "elaps": 0, "subtract": 0, "inclus": [0, 36], "bound": [0, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 62, 87, 137], "zero": [0, 38, 48, 49, 50, 92, 93, 94, 96, 100, 102, 106, 107, 116], "equal": [0, 2, 65, 66], "consid": [0, 2, 16, 70, 71, 72, 73, 93, 95, 96, 100, 106, 107, 112, 116, 141], "out": [0, 38, 39, 40, 87, 139], "therefor": [0, 6, 7, 96], "evenli": 0, "divis": 0, "simualt": [0, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 54], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 7, 18, 34, 97], "integ": [0, 3, 6, 7], "phenomenon": 2, "rate": [2, 23, 24, 26, 27, 43, 44, 53, 62, 65, 66, 68, 69, 116, 139, 140, 141, 142], "quantiti": 2, "decreas": [2, 140], "proport": [2, 23, 139, 140, 141], "current": [2, 3, 6, 7, 16, 22, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 60, 63, 70, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 112, 137, 139, 141, 142], "valu": [2, 6, 7, 8, 10, 11, 14, 15, 16, 17, 23, 24, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 67, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 100, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 126, 140, 141, 142, 144], "It": [2, 7, 47, 142], "describ": [2, 137], "differenti": 2, "equat": 2, "tau": [2, 17, 24, 70, 71, 72, 73, 93, 94, 100, 106, 107], "frac": [2, 17, 18, 23, 34, 35, 38, 41, 43, 45, 46, 54, 60, 61, 65, 66, 70, 71, 72, 73, 75, 94, 114, 115, 116, 139, 140, 141, 142], "dn": 2, "dt": [2, 7, 24, 34, 35, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 93, 96, 100, 106, 107, 139, 140, 141, 142], "n": [2, 44, 48, 49, 50, 63, 64, 65, 66, 114, 115, 116], "solut": [2, 139, 140, 141], "t": [2, 16, 17, 18, 19, 20, 23, 24, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 83, 93, 94, 100, 106, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 139, 140, 141, 142, 144], "n_0": [2, 7, 23, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96], "e": [2, 5, 10, 14, 26, 27, 53, 67, 68, 69, 114, 115, 116, 142], "0": [2, 7, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 60, 61, 62, 78, 79, 83, 92, 93, 94, 95, 100, 102, 106, 107, 127, 139, 142, 144], "oft": 2, "neural": [2, 47], "network": [2, 47], "simul": [2, 3, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 60, 61, 62, 74, 75, 76, 77, 93, 96, 100, 106, 107, 140, 141, 142, 144], "involv": 2, "discret": [2, 7, 93, 96, 100, 106, 107, 116, 142, 144], "timestep": [2, 34], "those": [2, 5, 34, 37, 38, 48, 49, 50], "thei": [2, 5, 67], "often": [2, 139, 142], "appear": 2, "form": [2, 8, 10], "exp": [2, 17, 23, 24, 34, 35, 41, 43, 46, 61, 70, 71, 72, 73, 74, 93, 94, 100, 106, 107, 114, 115, 139, 140, 141, 142], "left": [2, 17, 23, 34, 35, 38, 41, 43, 45, 46, 50, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 94, 96, 114, 115, 139, 140, 141, 142], "right": [2, 17, 23, 34, 35, 38, 41, 43, 45, 46, 50, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 94, 96, 114, 115, 139, 140, 141, 142], "underli": [2, 7, 38, 94, 96, 98, 99, 101, 103, 104, 108, 141, 142], "wa": [2, 8, 9, 21, 22, 25, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62], "solv": 2, "analyt": 2, "approxim": [2, 35, 41, 45, 54, 60, 62, 67, 75, 140, 142], "via": [2, 5], "euler": [2, 35, 41, 45, 54, 60, 62, 75], "method": [2, 5, 7, 10, 22, 24, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 60, 62, 65, 66, 67, 75, 85, 87, 89, 96, 97, 117], "both": 2, "repres": [2, 5, 6, 37, 40, 51, 55, 79, 83, 142], "select": [2, 7, 19, 20, 55, 87, 96, 98, 101], "term": [2, 62, 139, 141], "long": [2, 139], "live": 2, "correspond": [2, 10, 25, 34, 35, 41, 42, 43, 45, 46, 47, 51, 54, 60, 61, 62, 76, 77, 83, 114, 115], "under": [2, 7, 139, 142], "relat": [2, 96, 137, 142], "ne": 2, "k": [2, 23, 60, 61, 62, 63, 64, 71, 73, 106, 107, 116, 119, 121, 123, 125], "That": [2, 139], "after": [2, 7, 8, 9, 11, 21, 22, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 101, 103, 104, 108, 110, 140, 141, 142], "repeat": 2, "applic": [2, 93, 94, 95, 100, 102, 106, 107], "1": [2, 7, 16, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 62, 63, 64, 65, 66, 67, 83, 92, 94, 109, 112, 114, 115, 116, 137, 139, 140, 142, 144], "start": [2, 142], "To": [2, 12, 13, 15, 44, 65, 66, 91, 109, 126, 127, 140, 141], "outsid": [2, 96], "notion": 2, "life": 2, "we": [2, 10], "ln": 2, "b": [2, 16, 23, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 108], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 116], "sometim": 2, "lambda": [2, 23, 116, 141], "context": [2, 140], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 7, 93, 94, 95, 96, 97, 100, 102, 106, 107], "activ": [2, 6], "formal": 2, "sum": [2, 23, 24, 34, 35, 43, 45, 80], "previou": [2, 7, 17, 18, 20, 23, 39, 40, 87, 97, 102], "occur": [2, 11, 12, 23, 24, 36, 39, 40, 47, 52, 87, 116, 140, 141, 142, 144], "howev": 2, "purpos": [2, 106, 107], "comparison": 2, "grow": 2, "complex": [2, 14, 15, 16, 52, 70, 71, 72, 73, 92, 93, 100, 106, 107, 111, 112, 113], "quadrat": [2, 45, 54, 75, 137], "respect": [2, 24, 38, 48, 49, 50, 57, 99], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 22, 23, 71, 73, 141], "than": [2, 11, 22, 23, 26, 65, 66, 67, 71, 73, 141, 142], "everi": [2, 6, 7, 44, 65, 66], "prior": [2, 7, 9, 11, 12, 17, 18, 19, 20, 34, 42, 43, 46, 51, 70, 71, 83, 87, 93, 94, 95, 96, 97, 100, 102, 106, 107], "leav": [2, 141], "sort": [2, 6], "simplest": 2, "dx": 2, "x": [2, 14, 21, 24, 28, 29, 45, 48, 49, 50, 70, 71, 72, 73, 93, 94, 100, 106, 107, 112, 113, 114, 115, 144], "sum_f": 2, "f": [2, 24, 34, 38, 42, 43, 44, 46, 53, 65, 66, 67, 70, 71, 72, 73, 83, 93, 100, 106, 107], "amplitud": [2, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 70, 71, 72, 73, 93, 100, 106, 107], "construct": [2, 8, 13, 15, 39, 40, 55, 56, 91, 98, 99, 101, 103, 104, 108, 109, 126, 127], "evalu": [2, 8, 11, 34, 35, 43, 45], "otherwis": [2, 10, 19, 34, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 53, 70, 71, 72, 73, 83, 93, 98, 100, 101, 106, 107], "interpret": 2, "follow": [2, 3, 7, 8, 53, 68, 69, 87, 94, 96, 114, 115, 139, 141], "whenev": 2, "add": [2, 10, 11, 22, 24, 70, 71, 73, 93, 106], "four": [2, 7, 8, 24], "variant": [2, 39, 40, 137], "discuss": 2, "below": [2, 140, 142], "featur": 2, "beyond": 2, "just": 2, "being": [2, 10, 23, 27, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 53, 54, 65, 66, 67, 68, 69, 79, 98, 99, 101, 103, 104, 108, 139], "previous": [2, 11, 12, 36, 52, 96], "come": 2, "fact": 2, "factor": [2, 16, 94, 112, 142], "x_": [2, 16, 24, 70, 71, 72, 73, 93, 94, 100, 106, 107, 112, 139], "begin": [2, 16, 19, 21, 24, 28, 29, 34, 35, 38, 39, 40, 42, 43, 45, 46, 70, 71, 72, 73, 83, 93, 94, 100, 106, 107, 112, 139, 140, 141, 142, 144], "x_t": [2, 70, 71, 72, 73, 93, 100, 106, 107], "lvert": [2, 70, 72, 93, 100], "f_": [2, 24, 34, 42, 43, 46, 70, 71, 72, 73, 83, 93, 100, 106, 107, 139], "rvert": [2, 70, 72, 93, 100], "leq": [2, 70, 72, 93, 100, 114, 115, 116], "epsilon": [2, 70, 72, 92, 93, 100], "text": [2, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 93, 100, 106, 107, 114, 115, 116, 139, 140, 141, 142, 144], "here": [2, 11, 12, 137], "target": [2, 7, 10, 70, 72, 93, 98, 99, 100, 101, 103, 104, 108, 114, 115], "permiss": 2, "error": [2, 10], "For": [2, 9, 11, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64, 93, 94, 100, 106, 107, 108], "set": [2, 6, 7, 8, 13, 15, 34, 35, 38, 43, 44, 45, 48, 49, 53, 60, 61, 62, 65, 66, 70, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 106, 107, 109, 126, 127, 139, 141, 142], "unspecifi": [2, 6, 117], "test": [2, 6, 71, 73, 93, 95, 100, 106, 107, 114, 115, 116], "wherea": 2, "chang": [2, 5, 10, 24, 37, 38, 48, 49, 50, 78, 79, 94, 139, 140, 144], "addit": [2, 22, 38, 43, 44, 48, 49, 50, 65, 66, 71, 73, 77, 140, 141], "replac": [2, 39, 40, 47, 87], "modifi": [2, 6, 8, 13, 15, 21, 25, 26, 91, 98, 99, 101, 103, 104, 108, 109, 111, 126, 127], "onli": [2, 5, 6, 8, 10, 11, 12, 36, 38, 39, 52, 96, 98], "most": [2, 7, 9, 17, 18, 19, 20, 24, 37, 38, 44, 48, 49, 50, 65, 66, 93, 94, 95, 96, 97, 100, 102, 106, 107, 139, 140], "recent": [2, 7, 9, 17, 18, 19, 20, 24, 37, 38, 48, 49, 50, 93, 94, 95, 96, 97, 100, 102, 106, 107, 139], "event": [2, 95, 116], "chosen": 2, "depend": [2, 8, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 47, 48, 49, 50, 61, 62, 64, 78, 79, 101, 137, 141], "desir": [2, 52, 92, 114, 115], "properti": [2, 6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 96, 99, 100, 106, 107, 109, 111, 114, 115, 116, 126, 127, 141], "formul": 2, "abov": [2, 35, 41, 140, 142], "ani": [2, 3, 5, 7, 8, 10, 11, 12, 37, 38, 40, 48, 49, 50, 57, 58, 96, 97, 99, 101, 103, 104, 117, 141, 142, 144], "exactli": 2, "toler": [2, 7, 70, 71, 72, 73, 87, 93, 96, 100], "meet": [2, 7], "criterion": [2, 95, 106, 107], "compon": [2, 71, 73, 140, 141], "ad": [2, 6, 7, 22, 24, 38, 44, 57, 58, 59, 65, 66, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96], "sf": [2, 71, 73, 106, 107], "hold": 2, "align": [2, 16, 34, 35, 38, 43, 45, 94, 112, 139, 140, 141, 142], "neq": [2, 24, 144], "int_": 2, "infti": [2, 34, 43, 64, 140, 141, 142], "theta": [2, 21, 28, 29, 34, 43, 76, 77, 139, 140, 141, 142], "neg": [2, 6], "argument": [2, 6, 7, 8, 9, 11, 12, 22, 23, 27, 37, 38, 47, 48, 49, 50, 96, 99, 103, 104, 114, 115, 116], "posit": [2, 6, 7, 47], "geq": [2, 21, 28, 29, 76, 77], "deriv": [2, 85, 87, 89, 114, 142], "d": [2, 7, 87, 96, 140, 141], "And": [2, 38, 139], "integr": [2, 34, 35, 41, 42, 43, 46, 51, 54, 55, 71, 73, 74, 75, 137, 144], "kind": 3, "absolut": [3, 34, 35, 41, 42, 43, 45, 46, 54, 60, 61, 62, 70, 72, 74, 75, 76, 77, 83, 93, 100], "arp": [3, 34, 42, 43, 46, 83], "rel": [3, 9, 17, 18, 19, 20, 93, 94, 95, 97, 100, 102, 106, 107, 114, 115], "rrp": 3, "cannot": [3, 6, 7, 10, 21, 25, 78, 79, 140], "presynapt": [3, 24, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 63, 74, 75, 76, 77, 139, 140, 141, 144], "doe": [3, 6, 47, 85, 89, 116, 144], "affect": [3, 71, 73, 137], "depolar": [3, 142], "repolar": 3, "hyperpolar": 3, "mean": [3, 24, 34, 35, 43, 80, 98, 99, 101, 103, 104, 108, 114, 115, 116], "while": [3, 34, 35, 41, 42, 43, 45, 46, 54, 76, 77], "difficult": 3, "fire": [3, 34, 35, 41, 42, 43, 46, 54, 64, 137, 140], "imposs": 3, "time": [3, 7, 9, 16, 17, 18, 19, 20, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 116, 137, 140, 141, 142, 144], "voltag": [3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 64, 74, 75, 76, 77, 84, 137, 141, 142], "reset": [3, 7, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 62, 76, 77, 96, 140, 141, 142], "determin": [3, 13, 15, 38, 48, 49, 50, 68, 91, 93, 100, 109, 111, 117, 126, 127], "strongli": 3, "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "map": [5, 47, 96, 98, 101, 103, 104], "unpack": [5, 98], "function": [5, 7, 8, 9, 10, 11, 12, 14, 24, 27, 34, 35, 39, 40, 43, 45, 55, 60, 61, 62, 71, 73, 76, 77, 80, 87, 91, 95, 96, 99, 103, 104, 106, 107, 113, 114, 115, 116, 126, 139, 144], "conjunct": 5, "attr": [5, 108], "librari": [5, 7], "wrap": 5, "_asadict_": 5, "dict": [5, 6, 8, 10, 11, 47, 99, 114, 115, 116], "str": [5, 6, 7, 8, 10, 11, 22, 36, 47, 51, 52, 99, 108, 114, 115, 116], "field": [5, 141, 142], "converet": 5, "dictionari": [5, 6, 10, 47], "flatten": 5, "nest": [5, 108], "object": [5, 8, 9, 10, 12, 22, 47, 56, 59, 78, 80, 81, 82, 84, 86, 87, 90], "own": 5, "If": [5, 7, 8, 11, 22, 23, 25, 26, 34, 35, 37, 38, 41, 43, 44, 45, 46, 48, 49, 50, 54, 57, 60, 61, 62, 65, 66, 80, 98, 101, 117], "conflict": [5, 47], "one": [5, 8, 24, 34, 35, 43, 45, 49, 50, 80, 98, 120, 121, 122, 123, 124, 125, 139, 140], "preserv": [5, 34, 35, 43, 45, 96], "overridden": [5, 22], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "packag": 5, "attribut": [5, 6, 7, 23, 36, 52, 79, 80, 83, 87, 108, 142], "were": [5, 22, 23, 24], "regist": [5, 6, 7, 8, 10, 11, 12, 22, 36, 37, 38, 48, 49, 52, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 98, 99, 101, 103, 104, 108], "constraint": [6, 7, 78, 79, 96], "tupl": [6, 13, 15, 16, 22, 23, 24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 76, 77, 79, 80, 91, 92, 98, 103, 104, 109, 110, 114, 115, 117, 126, 127], "int": [6, 7, 13, 14, 15, 16, 23, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 91, 92, 93, 100, 106, 107, 109, 110, 111, 112, 113, 126, 127], "support": [6, 38, 39, 40, 48, 49, 50, 55, 56], "dimension": [6, 38], "constrain": [6, 7, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "buffer": [6, 7, 10, 78, 87], "dim": [6, 51, 52, 55, 56, 78, 79, 92, 110], "size": [6, 7, 13, 15, 23, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 78, 79, 87, 91, 109, 126, 127], "rais": [6, 7, 8, 10, 14, 21, 22, 25, 26, 37, 51, 55, 97, 140], "valueerror": [6, 7, 26], "must": [6, 7, 8, 10, 22, 25, 26, 37, 38, 40, 48, 49, 50, 51, 55, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 106, 107], "number": [6, 7, 14, 23, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 79, 87, 91, 96, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126], "element": [6, 7, 23, 38, 48, 49, 50, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 92, 93, 95, 100, 106, 107, 117], "runtimeerror": [6, 7, 8, 21, 25], "2": [6, 38, 43, 114, 115, 116, 137, 142], "first": [6, 39, 40, 63, 64, 65, 67, 68, 141], "second": [6, 141], "assign": [6, 10, 23, 24, 25, 26, 34, 43, 50, 80], "invalid": [6, 10], "reconstrain": 6, "bool": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 111, 114, 115, 116, 126, 127], "torch": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 127], "classmethod": [6, 39, 40, 55, 114, 115, 116], "compatible_": 6, "compatible_lik": 6, "like": [6, 10, 13, 15, 24, 34, 35, 37, 38, 43, 45, 48, 49, 50, 55, 80, 91, 109, 111, 126, 127, 137], "none": [6, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 52, 53, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 126, 127], "option": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 72, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 126, 127], "default": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 126, 127], "insuffici": 6, "contain": [6, 16, 47, 76, 77], "nonposit": 6, "compatibl": 6, "compatible_like_": 6, "against": 6, "result": [6, 7, 23, 37, 38, 93, 94, 95, 96, 100, 102, 103, 104, 106, 107, 114, 115, 116], "low": 6, "high": 6, "increas": [6, 34, 35, 41, 43, 45, 54, 60, 61, 75, 140, 142], "order": [6, 52, 92, 96, 139], "constraints_repr": 6, "string": [6, 10, 36, 52], "represent": 6, "underscor": 6, "deregister_constrain": [6, 7], "deregist": [6, 8, 22], "fulli": [6, 10, 36, 52], "qualifi": [6, 10, 36, 52], "mindim": 6, "requir": [6, 9, 13, 15, 21, 22, 24, 25, 26, 38, 57, 58, 59, 71, 73, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 96, 109, 111, 126, 127], "static": 6, "mindims_": 6, "edit": 6, "exist": [6, 10, 22, 23, 34, 47, 96], "reshap": [6, 37, 38, 48, 49, 50], "accordingli": [6, 116], "remov": [6, 11], "new": [6, 7, 23, 24, 25, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 93, 96, 100, 106, 107], "had": 6, "extern": [6, 144], "longer": 6, "incompat": [6, 7], "register_constrain": [6, 7], "attributeerror": [6, 7, 10], "step_tim": [7, 17, 18, 19, 20, 24, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107, 142], "float": [7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 92, 93, 94, 95, 96, 97, 100, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116], "history_len": [7, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107], "dimensionalmodul": [7, 51, 78, 79, 81, 82, 83, 84], "keep": [7, 24, 34, 35, 43, 45, 80], "track": 7, "store": [7, 10, 22, 23, 24, 50, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "nonneg": [7, 65, 66, 67, 68, 69], "unconstrain": 7, "impli": [7, 140], "freed": 7, "other": [7, 10, 11, 23, 36, 52, 98, 101, 103, 104, 108, 141], "self": [7, 96], "hlen": [7, 96], "offset": [7, 37, 38, 48, 49, 50], "latest_first": 7, "true": [7, 8, 11, 12, 22, 23, 34, 35, 36, 41, 42, 43, 44, 45, 46, 52, 53, 54, 65, 66, 98, 99, 101, 103, 104, 108, 116], "retriev": [7, 22, 87, 96], "record": [7, 96, 98, 99, 101, 105, 108], "window": 7, "index": [7, 37, 38, 48, 49, 50, 96], "tick": 7, "back": [7, 141], "zeroth": 7, "fals": [7, 11, 12, 22, 23, 24, 36, 38, 39, 40, 44, 48, 49, 50, 52, 53, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 96, 98, 101, 103, 104, 108], "observ": [7, 9, 17, 18, 19, 20, 24, 39, 40, 70, 71, 72, 73, 87, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 114, 115], "hsize": 7, "slice": [7, 44, 53, 66, 69], "latest": [7, 16, 70, 71, 72, 73, 100, 107, 112], "By": [7, 11], "correct": 7, "configur": 7, "normal": [7, 11, 23, 36, 110, 114, 144], "circumst": 7, "pushto": 7, "insert": 7, "befor": [7, 8, 10, 22, 36, 38, 50, 52, 87, 96, 97, 98, 99, 101, 103, 104, 108, 110, 140, 142], "been": [7, 96], "sinc": [7, 11, 44, 65, 66, 95], "last": [7, 34, 37, 38, 42, 43, 46, 48, 49, 50, 51, 60, 61, 62, 83, 95, 96, 144], "data": [7, 9, 13, 15, 17, 18, 19, 20, 22, 24, 37, 38, 48, 49, 50, 80, 81, 84, 91, 92, 93, 94, 95, 96, 97, 100, 102, 106, 107, 109, 110, 111, 126, 127], "advanc": 7, "push": [7, 96, 105], "uniniti": [7, 13], "final": 7, "interpol": [7, 17, 18, 19, 20, 39, 40, 87, 93, 94, 95, 96, 97, 100, 102, 106, 107], "1e": [7, 92, 96], "07": [7, 96, 140], "maximum": [7, 23, 24, 25, 26, 38, 39, 40, 44, 48, 49, 50, 53, 55, 56, 67, 87, 96, 110], "onsid": 7, "7": [7, 96], "cdot": [7, 23, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96, 139], "ldot": [7, 23, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 96], "enforc": [7, 47, 96], "gather": [7, 23, 96], "take": [7, 11, 47, 67, 85, 89, 98, 101, 113, 118, 119, 120, 121, 122, 123, 124, 125, 139], "nearest": [7, 19, 24, 39, 40, 100, 107], "produc": 7, "scalar": [7, 13, 15, 91, 109, 114, 115, 116, 117, 126, 127], "within": [7, 10], "without": [7, 22, 26, 27, 71, 73, 140, 141, 142], "ever": 7, "attempt": [7, 34, 43, 80], "regardless": [7, 12], "pass": [7, 8, 11, 12, 21, 22, 24, 25, 26, 34, 35, 37, 38, 43, 45, 47, 48, 49, 50, 80, 96, 98, 99, 103, 104, 144], "overwritten": 7, "exact": [7, 95], "manual": [7, 78, 79], "increment": 7, "specif": [7, 10, 114, 142], "prehook": [8, 12, 98, 99, 104, 108], "callabl": [8, 9, 11, 12, 24, 27, 34, 35, 43, 45, 80, 96, 99, 101, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125], "posthook": [8, 99, 101, 103, 108], "prehook_kwarg": [8, 99], "posthook_kwarg": [8, 99], "train_upd": [8, 12, 36, 52, 98, 99, 101, 103, 104, 108], "eval_upd": [8, 12, 36, 52, 98, 99, 101, 103, 104, 108], "forward": [8, 11, 12, 22, 23, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 96, 98, 99, 101, 103, 104, 105, 108], "itself": [8, 11, 12, 37, 38, 48, 49, 50], "nn": [8, 10, 11, 12, 36, 52], "register_forward_hook": [8, 99, 103], "manag": [8, 22, 76, 77, 78, 79, 87], "removablehandl": 8, "keyword": [8, 9, 11, 22, 27, 37, 38, 47, 48, 49, 50, 99, 103, 104], "register_forward_pre_hook": [8, 99, 104], "run": [8, 11, 12, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 54, 55], "train": [8, 11, 12, 22, 34, 35, 36, 43, 44, 45, 47, 52, 53, 65, 66, 67, 68, 69, 98, 99, 101, 103, 104, 108, 137], "mode": [8, 11, 12, 34, 35, 36, 39, 40, 43, 45, 51, 52, 98, 99, 101, 103, 104, 108], "eval": [8, 12, 22, 36, 52, 98, 99, 101, 103, 104, 108], "signatur": [8, 21, 25, 26, 39, 40, 55], "arg": [8, 9, 10, 11, 27, 55, 56, 99, 105, 118, 119, 120, 121, 122, 123, 124, 125], "Or": 8, "with_kwarg": [8, 103, 104], "kwarg": [8, 9, 10, 11, 22, 24, 27, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 96, 99, 105, 118, 119, 120, 121, 122, 123, 124, 125], "see": [8, 91, 99, 103, 104, 126, 141, 142], "further": 8, "least": 8, "typeerror": [8, 10, 25], "instanc": [8, 10, 108], "alreadi": [8, 24], "on_ev": 8, "on_train": 8, "three": 8, "init": [8, 70, 71, 72, 73], "pytorch": [8, 10, 24, 34, 35, 43, 45, 80, 116], "warn": 8, "runtimewarn": 8, "ignor": [8, 12], "registr": [8, 22], "protocol": [9, 27, 56, 118, 119, 120, 121, 122, 123, 124, 125], "prev_data": [9, 17, 18, 19, 20, 93, 94, 95, 97, 100, 102, 106, 107], "next_data": [9, 17, 18, 19, 20, 93, 94, 95, 97, 100, 102, 106, 107], "subsequ": [9, 17, 18, 19, 20, 40, 93, 94, 95, 97, 100, 102, 106, 107], "sample_at": [9, 17, 18, 19, 20, 93, 94, 95, 97, 100, 102, 106, 107], "step_data": [9, 17, 18, 19, 20, 93, 94, 95, 97, 100, 102, 106, 107], "measur": [9, 96], "interp_previ": 9, "interp_nearest": [9, 96], "interp_linear": 9, "interp_exp_decai": 9, "partial": [9, 27, 38, 39, 40, 48, 49, 50, 55], "fill": [9, 15, 27, 91, 93, 94, 95, 97, 100, 102, 106, 107, 109, 111, 126, 127], "extens": 10, "so": [10, 94, 144], "extra": [10, 51], "similar": [10, 24, 34, 35, 43, 45, 71, 73, 80], "regular": [10, 11], "g": [10, 26, 27], "enabl": 10, "simpl": [10, 63, 64, 112], "export": 10, "__init__": 10, "made": [10, 96], "parent": 10, "child": 10, "constructor": [10, 38, 39, 40, 48, 49, 50, 55, 56, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_extra": 10, "throw": 10, "similarli": 10, "get_submodul": 10, "look": 10, "referenc": 10, "refer": [10, 24, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 117, 137, 139], "path": 10, "termin": 10, "resolv": 10, "someth": 10, "get_extra_st": 10, "state_dict": [10, 22], "set_extra_st": 10, "your": 10, "build": [10, 47], "note": [10, 141, 144], "picklabl": 10, "work": [10, 98, 101, 137], "serial": 10, "backward": 10, "guarante": [10, 47], "break": 10, "pickl": 10, "register_extra": 10, "manner": [10, 97], "register_buff": 10, "except": [10, 11, 12, 36, 52, 71, 73, 141], "limit": [10, 24, 34, 35, 39, 40, 43, 45, 80, 87], "access": 10, "load_state_dict": 10, "hook": [11, 12, 22, 36, 52, 99, 103, 104, 108], "inner_train_upd": 11, "inner_eval_upd": 11, "as_prehook": [11, 12, 36, 52, 108], "prepend": [11, 12, 24, 36, 52, 98, 101, 103, 104, 108], "always_cal": [11, 12, 36, 52], "statehook": [11, 36, 52], "act": [11, 12], "inner": [11, 38, 48, 49, 50], "associ": [11, 22, 24, 44, 53], "trigger": [11, 12, 140, 141, 142], "layer": [11, 22, 24], "__call__": [11, 12], "even": [11, 12, 36, 52, 108], "whether": 11, "alter": [11, 38, 48, 49, 96], "add_inn": 11, "innerhook": 11, "condition": 11, "on_eval_inn": 11, "on_train_inn": 11, "remove_inn": 11, "singl": [12, 47, 96, 98, 101], "dtype": [13, 15, 91, 95, 106, 107, 109, 111, 114, 115, 116, 126, 127], "layout": [13, 15, 22, 24, 91, 109, 111, 126, 127], "devic": [13, 15, 91, 109, 111, 126, 127], "requires_grad": [13, 15, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 109, 111, 126, 127], "overrid": [13, 15, 23, 91, 109, 111, 126, 127], "gradient": [13, 15, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 109, 111, 126, 127], "ndarrai": [14, 113], "agnost": [14, 113], "exponenti": [14, 16, 17, 24, 34, 35, 41, 43, 44, 45, 46, 54, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 93, 94, 100, 106, 107, 112, 137, 140], "y": [14, 48, 49, 50, 113, 141], "numpi": [14, 113], "ob": [16, 93, 94, 95, 97, 100, 102, 106, 107, 112], "level": [16, 112], "trend": 16, "alpha": [16, 94, 112], "beta": 16, "holt": 16, "linear": [16, 34, 48, 49, 50, 60, 61, 62, 63, 64, 74, 94, 137, 142], "smooth": [16, 94, 112], "s_0": [16, 94, 112], "x_0": [16, 94, 112], "b_0": 16, "x_1": 16, "s_": [16, 94, 112], "s_t": [16, 94, 112], "b_": 16, "b_t": 16, "revis": [16, 112], "time_const": [17, 41, 42, 46, 54, 60, 61, 74, 75, 93, 100, 106, 107], "decai": [17, 23, 24, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 93, 100, 106, 107, 140, 141], "d_": [17, 18, 19, 20, 139], "constant": [17, 24, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 74, 75, 93, 94, 100, 106, 107, 139, 140, 141, 142], "linearlli": 18, "wmin": [21, 25, 26], "wmax": [21, 25, 26], "weightdepend": [21, 25], "hard": [21, 24, 28, 29, 137], "lower": [21, 24, 25, 26, 28, 30, 32, 36, 62, 139, 140], "w_": [21, 25, 38, 139], "min": [21, 25, 28, 30, 32, 36, 110, 139], "upper": [21, 25, 26, 29, 31, 33, 36, 139], "max": [21, 24, 25, 29, 31, 33, 34, 35, 36, 43, 45, 62, 80, 110, 139, 140], "a_": [21, 24, 25, 28, 29, 30, 31, 32, 33, 139], "w": [21, 24, 25, 28, 29, 30, 31, 32, 33, 38, 48, 49, 50, 139], "eta_": [21, 24, 25, 28, 29, 30, 31, 32, 33, 139], "exclud": [21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 37, 38, 48, 49, 50, 51, 55, 56, 79], "updatebound": [21, 24, 25, 26], "abc": [22, 26, 37, 51, 55, 97, 105], "interdepend": 22, "attach": 22, "detach": 22, "monitor": [22, 24, 98, 101, 103, 104, 108, 140], "_register_state_dict_hook": 22, "add_monitor": [22, 24], "trainabl": [22, 24], "identifi": 22, "successfulli": [22, 24], "abstract": [22, 26, 37, 51, 55, 97, 105], "notimplementederror": [22, 26, 37, 51, 55, 97], "add_train": 22, "clear": [22, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 96, 99, 105], "submodul": [22, 47], "delet": [22, 37, 38, 48, 49, 50], "well": [22, 25, 58, 137], "del_monitor": 22, "dentifi": 22, "del_train": 22, "get_monitor": 22, "yield": [22, 44, 53, 66, 69], "captur": 22, "num_class": 23, "classifi": 23, "per": [23, 38, 87], "intern": [23, 50, 79], "calcul": [23, 24, 97, 141], "learn": [23, 24, 26, 27, 34, 35, 37, 38, 43, 45, 48, 49, 50], "multipli": [23, 71, 73, 141], "them": [23, 83, 98, 99, 101, 103, 104, 108, 137], "b_k": [23, 35, 45, 60, 62, 140, 142], "group": [23, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 54, 55, 56, 60, 61, 62, 79], "total": [23, 140, 141, 142, 144], "possibl": [23, 96], "decay_r": 23, "scale": [23, 44, 52, 53, 68, 69, 71, 73, 92, 106, 107, 114, 115], "logit": 23, "label": 23, "infer": 23, "truth": 23, "predict": 23, "averag": [23, 60, 61, 62, 94], "nclass": 23, "ndim": 23, "l_1": 23, "raw": 23, "recalcul": 23, "lr_post": 24, "lr_pre": 24, "tc_post": 24, "tc_pre": 24, "delai": [24, 37, 38, 39, 40, 48, 49, 50, 55, 56, 57, 87, 137], "interp_toler": 24, "trace_mod": 24, "liter": [24, 39, 40], "cumul": [24, 93, 106, 114, 115, 116], "wd_lower": 24, "wd_upper": 24, "batch_reduct": [24, 34, 35, 43, 45, 80], "layerwiseupdat": 24, "plastic": [24, 137], "delta": [24, 34, 35, 39, 40, 41, 43, 44, 45, 46, 53, 54, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 93, 94, 100, 106, 107, 137, 139, 140, 141, 142], "bigl": 24, "post": [24, 37, 38, 48, 49, 50, 139], "bigr": 24, "trace": [24, 70, 71, 72, 73, 93, 100, 106, 107, 137], "vari": 24, "qquad": [24, 114, 115], "m": [24, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 82, 83, 87, 140, 141, 142, 144], "postsynapt": [24, 34, 37, 42, 43, 46, 51, 60, 61, 62, 83, 139, 140], "ltp": [24, 26, 139], "ltd": [24, 26, 139], "tau_": [24, 139], "assum": [24, 34, 37, 38, 43, 48, 49, 50, 80, 96], "co": [24, 39, 40, 87], "origin": [24, 34, 35, 43, 45, 80, 96], "visit": [24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64], "soft": [24, 25, 30, 31, 32, 33, 137], "zoo": [24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64], "spike_post": 24, "spike_pr": 24, "trace_post": 24, "trace_pr": 24, "fail": [24, 96], "lrpost": 24, "lrpre": 24, "depress": [24, 28, 30, 32, 139, 140], "minpow": 25, "maxpow": 25, "expon": [25, 32, 33], "mu_": [25, 32, 33, 139], "power": [25, 30, 31, 32, 33, 139], "effect": [25, 26, 38, 48, 49, 140, 142], "magnitud": [26, 139, 140], "hasmax": 26, "hasmin": 26, "power_upper_bound": [27, 31], "power_lower_bound": [27, 30], "hard_upper_bound": 27, "hard_lower_bound": 27, "v_": [28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 46, 54, 60, 62, 74, 75, 76, 77, 140, 141, 142], "v": [28, 29, 30, 31, 32, 33], "equival": [30, 31, 96, 141], "law": [32, 33, 139], "rest_v": [34, 35, 41, 42, 43, 45, 46, 54, 60, 62, 74, 75, 77], "reset_v": [34, 35, 41, 42, 45, 46, 54, 76], "thresh_eq_v": [34, 43, 142], "refrac_t": [34, 35, 41, 42, 43, 45, 46, 54, 76, 77, 83], "tc_membran": [34, 35, 43, 45], "tc_adapt": [34, 35, 45], "spike_incr": [34, 35, 43, 45, 60, 61], "resist": [34, 35, 41, 42, 43, 45, 46, 54, 74, 75, 141], "batch_siz": [34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 56, 78, 79], "adaptationmixin": [34, 35, 43, 45], "voltagemixin": [34, 35, 41, 42, 43, 45, 46, 54], "spikerefractorymixin": [34, 35, 41, 42, 43, 45, 46, 54], "leaki": [34, 42, 43, 46, 137], "dynam": [34, 35, 39, 40, 41, 42, 43, 45, 46, 51, 54, 55, 74, 75, 76, 77, 140, 141, 142], "v_m": [34, 35, 41, 43, 45, 46, 54, 60, 62, 74, 75, 76, 77, 140, 141, 142], "rest": [34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 51, 54, 55, 60, 62, 74, 75, 77, 140, 141, 142], "r_mi": [34, 35, 41, 43, 45, 46, 54, 74, 75, 141, 142], "tau_m": [34, 35, 41, 43, 45, 46, 54, 74, 75, 141, 142], "theta_": [34, 43, 62, 64, 140, 141, 142], "sum_k": [34, 35, 43, 45, 140, 141, 142], "theta_k": [34, 43, 61, 62, 64, 140, 141], "tau_k": [34, 35, 45, 60, 61, 70, 71, 72, 73, 140, 141, 142], "leftarrow": [34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 76, 77, 140, 141, 142], "d_k": [34, 43, 45, 140, 141, 142], "equilibrium": [34, 35, 41, 43, 45, 46, 54, 60, 62, 64, 74, 75, 77, 140, 141, 142], "mv": [34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 64, 74, 75, 76, 77, 84, 140, 141, 142], "refractori": [34, 35, 41, 42, 43, 44, 45, 46, 51, 54, 60, 61, 62, 65, 66, 68, 69, 74, 75, 76, 77, 82, 83], "period": [34, 35, 41, 42, 43, 44, 45, 46, 51, 54, 60, 61, 62, 65, 66, 68, 69, 74, 75, 76, 77, 82, 83], "r_m": [34, 35, 41, 43, 45, 46, 54, 74, 75, 141], "omega": [34, 35, 41, 43, 45, 46, 54, 74, 75, 141], "keep_adapt": [34, 35, 43, 45], "refrac_lock": [34, 35, 41, 42, 43, 45, 46, 54], "na": [34, 35, 41, 42, 43, 45, 46, 54, 60, 63, 74, 75, 76, 77, 81, 85, 86, 88, 140, 141, 142, 144], "setter": [34, 43, 50, 80, 85, 89], "additon": [34, 43, 80], "lead": [34, 43, 80], "unreduc": [34, 43, 80], "bsize": [34, 37, 38, 42, 43, 46, 48, 49, 50, 51, 78, 79], "refrac": [34, 42, 43, 44, 46, 51, 60, 61, 62, 65, 66, 76, 77, 82, 83], "t_": [34, 42, 43, 46, 83, 139], "millivolt": [34, 42, 43, 46, 51, 84], "rheobase_v": [35, 41], "sharp": [35, 41, 142], "thresh_v": [35, 41, 42, 45, 46, 54, 76, 77, 142], "voltage_coupl": [35, 45, 60], "delta_t": [35, 41, 142], "v_t": [35, 41, 142], "i_x": [35, 40, 45, 140, 142, 144], "w_k": [35, 45, 60, 63, 140, 142], "a_k": [35, 60, 61, 62, 140, 142], "approach": [35, 41, 142], "rapidli": [35, 41], "steep": [35, 41, 142], "natur": [35, 41, 45, 54, 75, 114, 115, 116], "rheobas": [35, 41, 142], "strength": [35, 45, 54, 60, 75], "coupl": [35, 45, 60, 140, 142], "mu": [35, 45, 60, 114, 115, 140, 141, 142], "rang": [36, 96], "synaps": [37, 38, 39, 40, 47, 48, 49, 50, 56, 85, 86, 87, 88, 89, 90], "bia": [37, 38, 48, 49, 50, 57, 58], "learnabl": [37, 38, 48, 49, 50, 57, 58, 59], "binshap": [37, 38, 48, 49, 50], "boutshap": [37, 38, 48, 49, 50], "clearabl": [37, 38, 48, 49, 50], "delayedbi": [37, 38, 48, 49, 50], "maxmimum": [37, 38, 48, 49, 50], "valid": [37, 38, 48, 49, 50, 114, 115, 116], "compos": [37, 47], "py": [37, 38, 48, 49, 50], "meth": [37, 38, 48, 49, 50], "inshap": [37, 38, 48, 49, 50], "insiz": [37, 38, 48, 49, 50], "cach": [37, 38, 48, 49, 50], "refresh": [37, 38, 48, 49, 50], "like_input": [37, 38, 48, 49, 50], "syncurr": [37, 38, 48, 49, 50], "synspik": [37, 38, 48, 49, 50], "like_synapt": [37, 38, 48, 49, 50], "outshap": [37, 38, 48, 49, 50], "outsiz": [37, 38, 48, 49, 50], "postsyn_recept": [37, 38, 48, 49, 50], "l": 37, "presyn_recept": [37, 38, 48, 49, 50], "selector": [37, 38, 39, 40, 48, 49, 50, 55, 87], "synapt": [37, 38, 39, 40, 48, 49, 50, 55, 85, 86, 87, 88, 89], "height": 38, "width": 38, "channel": 38, "filter": [38, 47], "kernel": 38, "stride": 38, "pad": 38, "dilat": 38, "synapseconstructor": [38, 39, 40, 48, 49, 50, 55], "weight_init": [38, 48, 49, 50], "onetoon": [38, 48, 49, 50, 71, 73, 76, 77, 95, 96, 106, 107], "bias_init": [38, 48, 49, 50], "delay_init": [38, 48, 49, 50], "weightbiasdelaymixin": [38, 48, 49, 50], "connect": [38, 47, 48, 49, 50, 55, 56, 57, 58, 59, 139], "convolut": 38, "spatial": 38, "plane": 38, "expect": [38, 44, 47, 48, 49, 50, 53, 65, 66, 67, 68, 69, 98, 101, 114, 115, 116], "c": 38, "h": 38, "kh": 38, "kw": 38, "delay_": [38, 48, 49, 57], "creat": [38, 48, 49, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "unless": [38, 48, 49], "later": [38, 48, 49], "uniform": [38, 48, 49, 50], "random": [38, 48, 49, 50, 91, 114, 115, 116, 126], "interv": [38, 44, 48, 49, 50, 53, 65, 66, 68, 69], "rand": [38, 48, 49, 50, 126], "still": [38, 44, 65, 66, 70, 72, 93, 100], "anoth": [38, 87], "h_": 38, "formula": 38, "document": 38, "lfloor": [38, 116], "p_h": 38, "d_h": 38, "k_h": 38, "s_h": 38, "rfloor": [38, 116], "p_w": 38, "d_w": 38, "k_w": 38, "s_w": 38, "ph": 38, "pw": 38, "side": [38, 141], "dh": 38, "dw": [38, 139], "sh": 38, "sw": 38, "oper": [38, 97], "reli": 38, "upon": [38, 142], "expand": 38, "consequenti": 38, "memori": [38, 44, 53], "spike_q": [39, 40], "interp_mod": [39, 40], "interp_tol": [39, 40], "current_overbound": [39, 40], "spike_overbound": [39, 40], "delayedspikecurrentaccessormixin": [39, 40], "spikederivedcurrentmixin": 39, "memoryless": [39, 40], "respond": [39, 40, 140], "instantan": [39, 40], "q": [39, 40, 144], "charg": [39, 40, 144], "carri": [39, 40, 144], "pc": [39, 40, 144], "cuba": [39, 40, 137], "partialconstructor": [39, 40, 55], "spikecurrentmixin": 40, "passthrough": [40, 102], "inject": 40, "glif": [42, 43, 137, 140, 141], "alia": 42, "lif": [42, 137], "reset_v_add": 43, "reset_v_mul": 43, "rc_adapt": 43, "lambda_k": [43, 141], "m_v": [43, 77, 141], "b_v": [43, 77, 141], "unitless": [43, 45, 54, 70, 71, 72, 73, 75, 77, 142], "frequenc": [44, 53, 65, 66, 67, 68, 69, 140], "compens": [44, 65, 66, 68, 69, 116], "generatormixin": [44, 53], "refractorystepmixin": 44, "encod": [44, 53], "poisson": [44, 53, 65, 66, 67, 68, 69], "distribut": [44, 53, 65, 66, 67, 68, 69, 114, 115, 116], "randomli": [44, 65, 66], "point": [44, 65, 66, 116, 142], "hz": [44, 53, 65, 66, 67, 68, 69], "inter": [44, 65, 66, 87], "pseudorandom": [44, 53, 65, 66, 68, 69, 91, 114, 115, 116, 126], "distanc": [44, 65, 66], "th": [44, 60, 61, 62, 65, 66], "onlin": [44, 53], "iter": [44, 53, 66, 69], "intens": [44, 53], "hertz": [44, 53], "pin": 44, "crit_v": [45, 54, 75], "affin": [45, 54, 75], "crit": [45, 54, 75, 142], "drift": [45, 54, 75], "toward": [45, 54, 75, 141, 142], "awai": [45, 54, 75, 142], "connection_kwarg": 47, "neuron_kwarg": 47, "sequenti": 47, "block": 47, "kei": 47, "written": 47, "avoid": 47, "alwai": [47, 87], "uniqu": 47, "architectur": 47, "explicitli": 47, "go": 47, "unexpect": 47, "in_shap": 48, "out_shap": 48, "interc": [48, 50], "prod": [48, 49, 50], "m_0": 48, "unbatch": [48, 49, 50], "transform": [48, 49, 50], "odot": [49, 50], "inputoutput": [49, 50], "i_n": 50, "lineardens": 50, "creation": 50, "mask": [50, 71, 73, 74, 75], "shapemixin": [51, 55], "extra_repr": 51, "p": [52, 92, 114, 115, 116], "norm": [52, 92], "stepmixin": 53, "replic": [53, 68, 69, 79], "bindsnet": [53, 68, 69], "parameter": [53, 68, 69, 139], "invers": [53, 68, 69, 141, 144], "historymodul": [55, 85, 86, 87, 88, 89, 90, 105], "nanoamper": [55, 81, 86, 87, 89], "current_at": [55, 87], "spike_at": [55, 87], "boolean": 55, "newli": 56, "weightbiasmixin": 57, "mixin": [57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "inherit": [57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "weight_": [57, 58, 59], "bias_": [57, 58], "weightmixin": 58, "maintain": [60, 61, 62, 76, 77], "doesn": [60, 61, 62], "adapt_r": 62, "rebound_r": 62, "adapt_reset_min": 62, "permit": [62, 71, 73], "adap": [63, 64], "i_": 63, "optioon": [65, 66], "nonsens": [65, 66], "1000": [65, 66], "inhomogen": 67, "_description_": 67, "clamp": 67, "exce": 67, "never": [68, 69], "condit": [70, 71, 72, 73, 142], "count": [70, 72, 79, 93, 100, 116], "incorpor": [70, 71, 72, 73, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107, 141, 142], "matchfn": [71, 73], "trace_cumul": 71, "predic": [71, 73], "datatyp": [71, 73, 95, 106, 107], "trace_nearest": 73, "masked_input": [74, 75], "held": [76, 77], "v_slope": 77, "v_intercept": 77, "batchmixin": 79, "concept": 79, "_shape": 79, "bshape": 79, "adaptation_": 80, "adapt_batchreduc": 80, "current_": [81, 85, 86, 87, 88], "refrac_": [82, 83], "refractorymixin": 83, "driven": 84, "voltage_": 84, "currentmixin": [85, 88], "therefrom": [85, 89], "_to_spik": [85, 87], "noth": [85, 89], "primit": [86, 88, 90], "primitive_curr": 87, "primitive_spik": 87, "current_interp": 87, "spike_interp": 87, "current_overv": 87, "spike_overv": 87, "_to_curr": [87, 89], "spike_": [87, 88, 89, 90], "_current_interp": 87, "_spike_interp": 87, "_current_ob_v": 87, "_spike_ob_v": 87, "_primitive_curr": 87, "_primitive_spik": 87, "_interp_tol": 87, "spikemixin": [88, 89], "randn": 91, "12": [92, 140], "demonin": 92, "foldingreduc": [93, 94, 95, 100, 102, 106, 107], "fold": [93, 94, 95, 97, 100, 102, 106, 107], "entir": [93, 94, 95, 100, 102, 106, 107], "empti": [93, 94, 95, 97, 100, 102, 106, 107], "move": 94, "decoupl": 94, "infin": 95, "fold_fn": 96, "math": 96, "map_fn": 96, "keepshap": 96, "reiniti": [96, 99, 105], "storag": 96, "histor": 96, "dump": [96, 99, 105], "tempor": 96, "oldest": 96, "peek": [96, 99, 105], "view": [96, 99, 105], "fall": 96, "foldreduc": 97, "manytoon": 98, "receiv": 98, "sent": 98, "directli": 102, "content": [103, 104], "dot": 108, "notat": 108, "turn": 108, "ti": 108, "resmin": 110, "resmax": 110, "srcmin": 110, "srcmax": 110, "unchang": 110, "amin": 110, "amax": 110, "shortcut": 111, "full": 111, "squar": 113, "root": 113, "continuousdistribut": [114, 115], "log": [114, 115, 116], "probabl": [114, 115, 116], "mathbb": [114, 115, 116], "r": [114, 115, 116, 141], "locat": [114, 115], "sigma": [114, 115], "_": [114, 115, 116], "cdf": [114, 115, 116], "loc": [114, 115], "erf": [114, 115], "sqrt": [114, 115], "standard": [114, 115], "deviat": [114, 115], "logcdf": [114, 115, 116], "logarithm": [114, 115, 116], "logpdf": [114, 115], "densiti": [114, 115], "pi": [114, 115], "likelihood": [114, 115], "mid": [114, 115, 116], "sim": [114, 115, 116], "params_mv": [114, 115], "varianc": [114, 115, 116], "mu_x": [114, 115], "sigma_x": [114, 115], "pdf": [114, 115], "variat": [114, 115, 116], "mathcal": [114, 115], "sample_mv": [114, 115], "non": [114, 115, 116, 117], "var": [114, 115, 116], "lnormal": 115, "discretedistribut": 116, "_0": 116, "gamma": 116, "logpmf": 116, "mass": 116, "pmf": 116, "metal": 116, "shader": 116, "although": [116, 142], "strictli": 116, "degener": 116, "convers": 117, "convert": 117, "leftmost": 117, "arbitrari": [118, 119, 120, 121, 122, 123], "uniformli": 126, "depth": 137, "academ": 137, "plan": 137, "futur": 137, "alif": 137, "3": [137, 142], "4": [137, 140, 142], "5": [137, 142], "nonlinear": 137, "qif": 137, "izhikevich": 137, "eif": 137, "adex": 137, "conduct": [137, 141], "coba": 137, "stdp": 137, "anti": 137, "hebbian": 137, "astdp": 137, "mstdp": 137, "elig": 137, "mstdpet": 137, "resum": 137, "tbd": 138, "categori": 139, "With": [139, 140, 141, 142], "w_t": 139, "dirac": [139, 144], "pp": 139, "adjust": 139, "neighbor": 139, "flip": 139, "sign": 139, "postsynpat": 139, "place": 139, "penal": 139, "penalti": 139, "heavisid": 139, "impos": 140, "regard": 140, "steadi": 140, "give": 140, "degre": 140, "freedom": 140, "modif": 140, "dampen": 140, "amplifi": 140, "addition": 140, "said": 140, "goe": 140, "dw_k": [140, 142], "approx": [140, 142], "subthreshold": [140, 142], "doi": [140, 141, 142], "10": [140, 141, 142], "1017": [140, 141, 142], "cbo9781107447615": [140, 141, 142], "6": [140, 142], "1152": 140, "jn": 140, "00686": 140, "2005": 140, "Be": [140, 141], "1038": [140, 141], "s41467": [140, 141], "017": [140, 141], "02717": [140, 141], "allen": [140, 141], "institut": [140, 141], "whitepap": [140, 141], "rebound": 140, "1162": 140, "neco": 140, "2008": 140, "680": 140, "neco_a_00196": 140, "1803": 140, "09574": 140, "021": 140, "24427": 140, "8": [140, 142], "00234": 140, "2019": 140, "dv_m": [141, 142], "basic": 141, "rule": 141, "slope": [141, 142], "show": [141, 142], "v_r": [141, 142], "60": [141, 142], "plot": [141, 142], "c_m": 141, "g_l": 141, "capacit": 141, "nf": 141, "phrase": 141, "leak": 141, "expos": 141, "isbn": [141, 142, 144], "9780262548083": [141, 142, 144], "020": 141, "17236": 141, "fraction": 141, "intercept": 141, "convent": 141, "conting": 141, "reach": 141, "critic": 142, "tendenc": 142, "stabl": 142, "unstabl": 142, "attract": 142, "repel": 142, "v_c": 142, "50": 142, "depeend": 142, "3390": 142, "brainsci12070863": 142, "7551": 142, "mitpress": 142, "2526": 142, "001": 142, "0001": 142, "close": 142, "rapid": 142, "upsw": 142, "rightarrow": 142, "easi": 142, "confus": 142, "unrel": 142, "occasion": 142, "denot": 142, "vartheta_": 142, "rh": 142, "thresh": 142, "usual": 142, "simuat": 142, "illustr": 142, "4249": 142, "scholarpedia": 142, "8427": 142, "1523": 142, "jneurosci": 142, "23": 142, "37": 142, "11628": 142, "2003": 142, "t_f": 144, "veri": 144, "role": 144, "deliv": 144, "dramat": 144}, "objects": {"inferno": [[5, 0, 1, "", "Configuration"], [6, 0, 1, "", "DimensionalModule"], [7, 0, 1, "", "HistoryModule"], [8, 0, 1, "", "Hook"], [9, 0, 1, "", "Interpolation"], [10, 0, 1, "", "Module"], [11, 0, 1, "", "RemoteHook"], [12, 0, 1, "", "StateHook"], [13, 3, 1, "", "empty"], [14, 3, 1, "", "exp"], [15, 3, 1, "", "full"], [16, 3, 1, "", "holt_linear_smoothing"], [17, 3, 1, "", "interp_exp_decay"], [18, 3, 1, "", "interp_linear"], [19, 3, 1, "", "interp_nearest"], [20, 3, 1, "", "interp_previous"], [130, 4, 0, "-", "learn"], [132, 4, 0, "-", "neural"], [91, 3, 1, "", "normal"], [92, 3, 1, "", "normalize"], [109, 3, 1, "", "ones"], [110, 3, 1, "", "rescale"], [111, 3, 1, "", "scalar"], [112, 3, 1, "", "simple_exponential_smoothing"], [113, 3, 1, "", "sqrt"], [135, 4, 0, "-", "stats"], [117, 3, 1, "", "tensorize"], [126, 3, 1, "", "uniform"], [127, 3, 1, "", "zeros"]], "inferno.Configuration": [[5, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[6, 1, 1, "", "compatible"], [6, 1, 1, "", "compatible_"], [6, 1, 1, "", "compatible_like"], [6, 1, 1, "", "compatible_like_"], [6, 2, 1, "", "constraints"], [6, 2, 1, "", "constraints_repr"], [6, 1, 1, "", "deregister_constrained"], [6, 2, 1, "", "mindims"], [6, 1, 1, "", "mindims_"], [6, 1, 1, "", "reconstrain"], [6, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "dt"], [7, 1, 1, "", "history"], [7, 2, 1, "", "hlen"], [7, 2, 1, "", "hsize"], [7, 1, 1, "", "latest"], [7, 1, 1, "", "pushto"], [7, 1, 1, "", "register_constrained"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "select"], [7, 1, 1, "", "tick"], [7, 1, 1, "", "update"]], "inferno.Hook": [[8, 1, 1, "", "deregister"], [8, 2, 1, "", "on_eval"], [8, 2, 1, "", "on_train"], [8, 1, 1, "", "posthook"], [8, 1, 1, "", "prehook"], [8, 1, 1, "", "register"], [8, 2, 1, "", "registered"]], "inferno.Module": [[10, 1, 1, "", "get_extra"], [10, 1, 1, "", "get_extra_state"], [10, 1, 1, "", "register_extra"], [10, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[11, 1, 1, "", "add_inner"], [11, 1, 1, "", "innerhook"], [11, 2, 1, "", "on_eval_inner"], [11, 2, 1, "", "on_train_inner"], [11, 1, 1, "", "remove_inner"]], "inferno.StateHook": [[12, 2, 1, "", "module"], [12, 1, 1, "", "register"]], "inferno.learn": [[21, 0, 1, "", "HardWeightDependence"], [22, 0, 1, "", "LayerwiseUpdater"], [23, 0, 1, "", "MaxRateClassifier"], [24, 0, 1, "", "STDP"], [25, 0, 1, "", "SoftWeightDependence"], [26, 0, 1, "", "WeightDependence"], [131, 4, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[21, 1, 1, "", "lower"], [21, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[22, 1, 1, "", "add_monitor"], [22, 1, 1, "", "add_monitors"], [22, 1, 1, "", "add_trainable"], [22, 1, 1, "", "attach"], [22, 1, 1, "", "clear"], [22, 1, 1, "", "del_monitor"], [22, 1, 1, "", "del_monitors"], [22, 1, 1, "", "del_trainable"], [22, 1, 1, "", "detach"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_monitor"], [22, 1, 1, "", "get_monitors"], [22, 2, 1, "", "monitors"], [22, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[23, 2, 1, "", "assignments"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "infer"], [23, 1, 1, "", "learn"], [23, 2, 1, "", "nclass"], [23, 2, 1, "", "ndim"], [23, 2, 1, "", "occurances"], [23, 2, 1, "", "proportional"], [23, 2, 1, "", "proportions"], [23, 2, 1, "", "rates"], [23, 2, 1, "", "shape"]], "inferno.learn.STDP": [[24, 1, 1, "", "add_monitors"], [24, 2, 1, "", "dt"], [24, 1, 1, "", "forward"], [24, 2, 1, "", "lrpost"], [24, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[25, 1, 1, "", "lower"], [25, 2, 1, "", "maxpow"], [25, 2, 1, "", "minpow"], [25, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[26, 2, 1, "", "hasmax"], [26, 2, 1, "", "hasmin"], [26, 1, 1, "", "lower"], [26, 1, 1, "", "upper"], [26, 2, 1, "", "wmax"], [26, 2, 1, "", "wmin"]], "inferno.learn.functional": [[27, 0, 1, "", "UpdateBounding"], [28, 3, 1, "", "hard_lower_bounding"], [29, 3, 1, "", "hard_upper_bounding"], [30, 3, 1, "", "mult_lower_bounding"], [31, 3, 1, "", "mult_upper_bounding"], [32, 3, 1, "", "power_lower_bounding"], [33, 3, 1, "", "power_upper_bounding"]], "inferno.neural": [[34, 0, 1, "", "ALIF"], [35, 0, 1, "", "AdEx"], [36, 0, 1, "", "Clamping"], [37, 0, 1, "", "Connection"], [38, 0, 1, "", "Conv2D"], [39, 0, 1, "", "DeltaCurrent"], [40, 0, 1, "", "DeltaPlusCurrent"], [41, 0, 1, "", "EIF"], [42, 0, 1, "", "GLIF1"], [43, 0, 1, "", "GLIF2"], [44, 0, 1, "", "HomogeneousPoissonEncoder"], [45, 0, 1, "", "Izhikevich"], [46, 0, 1, "", "LIF"], [47, 0, 1, "", "Layer"], [48, 0, 1, "", "LinearDense"], [49, 0, 1, "", "LinearDirect"], [50, 0, 1, "", "LinearLateral"], [51, 0, 1, "", "Neuron"], [52, 0, 1, "", "Normalization"], [53, 0, 1, "", "PoissonIntervalEncoder"], [54, 0, 1, "", "QIF"], [55, 0, 1, "", "Synapse"], [56, 0, 1, "", "SynapseConstructor"], [133, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[34, 2, 1, "", "adaptation"], [34, 2, 1, "", "bsize"], [34, 1, 1, "", "clear"], [34, 2, 1, "", "dt"], [34, 1, 1, "", "forward"], [34, 2, 1, "", "refrac"], [34, 2, 1, "", "spike"], [34, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[35, 1, 1, "", "clear"], [35, 2, 1, "", "dt"], [35, 1, 1, "", "forward"]], "inferno.neural.Connection": [[37, 2, 1, "", "bias"], [37, 2, 1, "", "biased"], [37, 2, 1, "", "binshape"], [37, 2, 1, "", "boutshape"], [37, 2, 1, "", "bsize"], [37, 1, 1, "", "clear"], [37, 2, 1, "", "delay"], [37, 2, 1, "", "delayedby"], [37, 2, 1, "", "dt"], [37, 1, 1, "", "forward"], [37, 2, 1, "", "inshape"], [37, 2, 1, "", "insize"], [37, 1, 1, "", "like_input"], [37, 1, 1, "", "like_synaptic"], [37, 2, 1, "", "outshape"], [37, 2, 1, "", "outsize"], [37, 1, 1, "", "postsyn_receptive"], [37, 1, 1, "", "presyn_receptive"], [37, 2, 1, "", "selector"], [37, 2, 1, "", "synapse"], [37, 2, 1, "", "syncurrent"], [37, 2, 1, "", "synspike"], [37, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[38, 2, 1, "", "bias"], [38, 2, 1, "", "biased"], [38, 2, 1, "", "binshape"], [38, 2, 1, "", "boutshape"], [38, 2, 1, "", "bsize"], [38, 1, 1, "", "clear"], [38, 2, 1, "", "delay"], [38, 2, 1, "", "delayedby"], [38, 2, 1, "", "dt"], [38, 1, 1, "", "forward"], [38, 2, 1, "", "inshape"], [38, 2, 1, "", "insize"], [38, 1, 1, "", "like_input"], [38, 1, 1, "", "like_synaptic"], [38, 2, 1, "", "outshape"], [38, 2, 1, "", "outsize"], [38, 1, 1, "", "postsyn_receptive"], [38, 1, 1, "", "presyn_receptive"], [38, 2, 1, "", "selector"], [38, 2, 1, "", "syncurrent"], [38, 2, 1, "", "synspike"], [38, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[39, 1, 1, "", "clear"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[40, 1, 1, "", "clear"], [40, 1, 1, "", "forward"], [40, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[41, 1, 1, "", "clear"], [41, 2, 1, "", "dt"], [41, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[42, 2, 1, "", "bsize"], [42, 1, 1, "", "clear"], [42, 2, 1, "", "dt"], [42, 1, 1, "", "forward"], [42, 2, 1, "", "refrac"], [42, 2, 1, "", "spike"], [42, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[43, 2, 1, "", "adaptation"], [43, 2, 1, "", "bsize"], [43, 1, 1, "", "clear"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"], [43, 2, 1, "", "refrac"], [43, 2, 1, "", "spike"], [43, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[44, 2, 1, "", "compensated"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "frequency"], [44, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[45, 1, 1, "", "clear"], [45, 2, 1, "", "dt"], [45, 1, 1, "", "forward"]], "inferno.neural.LIF": [[46, 2, 1, "", "bsize"], [46, 1, 1, "", "clear"], [46, 2, 1, "", "dt"], [46, 1, 1, "", "forward"], [46, 2, 1, "", "refrac"], [46, 2, 1, "", "spike"], [46, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[47, 1, 1, "", "clear"], [47, 2, 1, "", "connection"], [47, 1, 1, "", "forward"], [47, 2, 1, "", "neuron"], [47, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[48, 2, 1, "", "bias"], [48, 2, 1, "", "biased"], [48, 2, 1, "", "binshape"], [48, 2, 1, "", "boutshape"], [48, 2, 1, "", "bsize"], [48, 1, 1, "", "clear"], [48, 2, 1, "", "delay"], [48, 2, 1, "", "delayedby"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"], [48, 2, 1, "", "inshape"], [48, 2, 1, "", "insize"], [48, 1, 1, "", "like_input"], [48, 1, 1, "", "like_synaptic"], [48, 2, 1, "", "outshape"], [48, 2, 1, "", "outsize"], [48, 1, 1, "", "postsyn_receptive"], [48, 1, 1, "", "presyn_receptive"], [48, 2, 1, "", "selector"], [48, 2, 1, "", "syncurrent"], [48, 2, 1, "", "synspike"], [48, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[49, 2, 1, "", "bias"], [49, 2, 1, "", "biased"], [49, 2, 1, "", "binshape"], [49, 2, 1, "", "boutshape"], [49, 2, 1, "", "bsize"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "delay"], [49, 2, 1, "", "delayedby"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "inshape"], [49, 2, 1, "", "insize"], [49, 1, 1, "", "like_input"], [49, 1, 1, "", "like_synaptic"], [49, 2, 1, "", "outshape"], [49, 2, 1, "", "outsize"], [49, 1, 1, "", "postsyn_receptive"], [49, 1, 1, "", "presyn_receptive"], [49, 2, 1, "", "selector"], [49, 2, 1, "", "syncurrent"], [49, 2, 1, "", "synspike"], [49, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[50, 2, 1, "", "bias"], [50, 2, 1, "", "biased"], [50, 2, 1, "", "binshape"], [50, 2, 1, "", "boutshape"], [50, 2, 1, "", "bsize"], [50, 1, 1, "", "clear"], [50, 2, 1, "", "delay"], [50, 2, 1, "", "delayedby"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "inshape"], [50, 2, 1, "", "insize"], [50, 1, 1, "", "like_input"], [50, 1, 1, "", "like_synaptic"], [50, 2, 1, "", "outshape"], [50, 2, 1, "", "outsize"], [50, 1, 1, "", "postsyn_receptive"], [50, 1, 1, "", "presyn_receptive"], [50, 2, 1, "", "selector"], [50, 2, 1, "", "syncurrent"], [50, 2, 1, "", "synspike"], [50, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[51, 2, 1, "", "bsize"], [51, 1, 1, "", "clear"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "refrac"], [51, 2, 1, "", "spike"], [51, 2, 1, "", "voltage"]], "inferno.neural.PoissonIntervalEncoder": [[53, 1, 1, "", "forward"], [53, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[54, 1, 1, "", "clear"], [54, 2, 1, "", "dt"], [54, 1, 1, "", "forward"]], "inferno.neural.Synapse": [[55, 1, 1, "", "clear"], [55, 2, 1, "", "current"], [55, 1, 1, "", "current_at"], [55, 2, 1, "", "delay"], [55, 2, 1, "", "dt"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "partialconstructor"], [55, 2, 1, "", "spike"], [55, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[57, 0, 1, "", "WeightBiasDelayMixin"], [58, 0, 1, "", "WeightBiasMixin"], [59, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[57, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[58, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[59, 2, 1, "", "weight"]], "inferno.neural.functional": [[60, 3, 1, "", "adaptive_currents_linear"], [61, 3, 1, "", "adaptive_thresholds_linear_spike"], [62, 3, 1, "", "adaptive_thresholds_linear_voltage"], [63, 3, 1, "", "apply_adaptive_currents"], [64, 3, 1, "", "apply_adaptive_thresholds"], [65, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [66, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [67, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [68, 3, 1, "", "enc_poisson_interval"], [69, 3, 1, "", "enc_poisson_interval_online"], [70, 3, 1, "", "trace_cumulative"], [71, 3, 1, "", "trace_cumulative_scaled"], [72, 3, 1, "", "trace_nearest"], [73, 3, 1, "", "trace_nearest_scaled"], [74, 3, 1, "", "voltage_integration_linear"], [75, 3, 1, "", "voltage_integration_quadratic"], [76, 3, 1, "", "voltage_thresholding"], [77, 3, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[78, 0, 1, "", "BatchMixin"], [79, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[78, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[79, 2, 1, "", "bshape"], [79, 2, 1, "", "bsize"], [79, 2, 1, "", "count"], [79, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[80, 0, 1, "", "AdaptationMixin"], [81, 0, 1, "", "CurrentMixin"], [82, 0, 1, "", "RefractoryMixin"], [83, 0, 1, "", "SpikeRefractoryMixin"], [84, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[80, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[81, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[82, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[83, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[84, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[85, 0, 1, "", "CurrentDerivedSpikeMixin"], [86, 0, 1, "", "CurrentMixin"], [87, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [88, 0, 1, "", "SpikeCurrentMixin"], [89, 0, 1, "", "SpikeDerivedCurrentMixin"], [90, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[85, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[86, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[87, 1, 1, "", "current_at"], [87, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[89, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[90, 2, 1, "", "spike"]], "inferno.observe": [[93, 0, 1, "", "CumulativeTraceReducer"], [94, 0, 1, "", "EMAReducer"], [95, 0, 1, "", "EventReducer"], [96, 0, 1, "", "FoldReducer"], [97, 0, 1, "", "FoldingReducer"], [98, 0, 1, "", "InputMonitor"], [99, 0, 1, "", "Monitor"], [100, 0, 1, "", "NearestTraceReducer"], [101, 0, 1, "", "OutputMonitor"], [102, 0, 1, "", "PassthroughReducer"], [103, 0, 1, "", "PostMonitor"], [104, 0, 1, "", "PreMonitor"], [105, 0, 1, "", "Reducer"], [106, 0, 1, "", "ScaledCumulativeTraceReducer"], [107, 0, 1, "", "ScaledNearestTraceReducer"], [108, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[93, 2, 1, "", "dt"], [93, 1, 1, "", "fold"], [93, 1, 1, "", "initialize"], [93, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[94, 1, 1, "", "fold"], [94, 1, 1, "", "initialize"], [94, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[95, 1, 1, "", "fold"], [95, 1, 1, "", "initialize"], [95, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[96, 1, 1, "", "clear"], [96, 2, 1, "", "data"], [96, 2, 1, "", "dt"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "forward"], [96, 2, 1, "", "hlen"], [96, 1, 1, "", "peek"], [96, 1, 1, "", "push"], [96, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[97, 1, 1, "", "fold"], [97, 1, 1, "", "initialize"], [97, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[99, 1, 1, "", "clear"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "peek"], [99, 2, 1, "", "reducer"], [99, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[100, 2, 1, "", "dt"], [100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[102, 1, 1, "", "fold"], [102, 1, 1, "", "initialize"], [102, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[105, 1, 1, "", "clear"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "forward"], [105, 1, 1, "", "peek"], [105, 1, 1, "", "push"], [105, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[106, 2, 1, "", "dt"], [106, 1, 1, "", "fold"], [106, 1, 1, "", "initialize"], [106, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[107, 2, 1, "", "dt"], [107, 1, 1, "", "fold"], [107, 1, 1, "", "initialize"], [107, 1, 1, "", "interpolate"]], "inferno.stats": [[114, 0, 1, "", "LogNormal"], [115, 0, 1, "", "Normal"], [116, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[114, 1, 1, "", "cdf"], [114, 1, 1, "", "logcdf"], [114, 1, 1, "", "logpdf"], [114, 1, 1, "", "mean"], [114, 1, 1, "", "params_mv"], [114, 1, 1, "", "pdf"], [114, 1, 1, "", "sample"], [114, 1, 1, "", "sample_mv"], [114, 1, 1, "", "validate"], [114, 1, 1, "", "variance"]], "inferno.stats.Normal": [[115, 1, 1, "", "cdf"], [115, 1, 1, "", "logcdf"], [115, 1, 1, "", "logpdf"], [115, 1, 1, "", "mean"], [115, 1, 1, "", "params_mv"], [115, 1, 1, "", "pdf"], [115, 1, 1, "", "sample"], [115, 1, 1, "", "sample_mv"], [115, 1, 1, "", "validate"], [115, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[116, 1, 1, "", "cdf"], [116, 1, 1, "", "logcdf"], [116, 1, 1, "", "logpmf"], [116, 1, 1, "", "mean"], [116, 1, 1, "", "pmf"], [116, 1, 1, "", "sample"], [116, 1, 1, "", "validate"], [116, 1, 1, "", "variance"]], "inferno.typing": [[118, 0, 1, "", "ManyToMany"], [119, 0, 1, "", "ManyToManyMethod"], [120, 0, 1, "", "ManyToOne"], [121, 0, 1, "", "ManyToOneMethod"], [122, 0, 1, "", "OneToMany"], [123, 0, 1, "", "OneToManyMethod"], [124, 0, 1, "", "OneToOne"], [125, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 131, 133], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 130, 139], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 142], "decai": 2, "constant": 2, "trace": [2, 133, 139], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 143, 144], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 51, 132, 133, 137, 140, 141, 142], "system": 3, "dynam": [3, 133], "welcom": 4, "inferno": [4, 129, 130, 131, 132, 133, 134, 135, 136], "": 4, "document": 4, "configur": 5, "dimensionalmodul": 6, "historymodul": 7, "shape": [7, 23, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96], "hook": [8, 132], "interpol": [9, 129], "modul": [10, 139], "remotehook": 11, "statehook": 12, "empti": 13, "exp": 14, "full": 15, "holt_linear_smooth": 16, "interp_exp_decai": 17, "interp_linear": 18, "interp_nearest": 19, "interp_previ": 20, "hardweightdepend": 21, "layerwiseupdat": 22, "maxrateclassifi": 23, "stdp": [24, 139], "softweightdepend": 25, "weightdepend": 26, "updatebound": 27, "hard_lower_bound": 28, "hard_upper_bound": 29, "mult_lower_bound": 30, "mult_upper_bound": 31, "power_lower_bound": 32, "power_upper_bound": 33, "alif": [34, 141], "adex": [35, 142], "clamp": 36, "connect": [37, 132], "conv2d": 38, "deltacurr": 39, "deltapluscurr": 40, "eif": [41, 142], "glif1": [42, 141], "glif2": [43, 141], "homogeneouspoissonencod": 44, "izhikevich": [45, 142], "lif": [46, 141], "layer": 47, "lineardens": 48, "lineardirect": 49, "linearlater": 50, "normal": [52, 91, 92, 115], "poissonintervalencod": 53, "qif": [54, 142], "synaps": [55, 132, 137, 143, 144], "synapseconstructor": 56, "weightbiasdelaymixin": 57, "weightbiasmixin": 58, "weightmixin": 59, "adaptive_currents_linear": 60, "adaptive_thresholds_linear_spik": 61, "adaptive_thresholds_linear_voltag": 62, "apply_adaptive_curr": 63, "apply_adaptive_threshold": 64, "enc_homogeneous_poisson_exp_interv": 65, "enc_homogeneous_poisson_exp_interval_onlin": 66, "enc_inhomogenous_poisson_bernoulli_approx": 67, "enc_poisson_interv": 68, "enc_poisson_interval_onlin": 69, "trace_cumul": 70, "trace_cumulative_sc": 71, "trace_nearest": 72, "trace_nearest_sc": 73, "voltage_integration_linear": 74, "voltage_integration_quadrat": 75, "voltage_threshold": 76, "voltage_thresholding_slope_intercept": 77, "batchmixin": 78, "shapemixin": 79, "adaptationmixin": 80, "currentmixin": [81, 86], "refractorymixin": 82, "spikerefractorymixin": 83, "voltagemixin": 84, "currentderivedspikemixin": 85, "delayedspikecurrentaccessormixin": 87, "spikecurrentmixin": 88, "spikederivedcurrentmixin": 89, "spikemixin": 90, "cumulativetracereduc": 93, "emareduc": 94, "eventreduc": 95, "foldreduc": 96, "foldingreduc": 97, "inputmonitor": 98, "monitor": [99, 134], "nearesttracereduc": 100, "outputmonitor": 101, "passthroughreduc": 102, "postmonitor": 103, "premonitor": 104, "reduc": [105, 134], "scaledcumulativetracereduc": 106, "scalednearesttracereduc": 107, "statemonitor": 108, "ones": 109, "rescal": 110, "scalar": 111, "simple_exponential_smooth": 112, "sqrt": 113, "lognorm": 114, "paramet": [114, 115, 116, 130, 131], "support": [114, 115, 116], "poisson": 116, "tensor": [117, 129], "manytomani": 118, "manytomanymethod": 119, "manytoon": 120, "manytoonemethod": 121, "onetomani": 122, "onetomanymethod": 123, "onetoon": 124, "onetoonemethod": 125, "uniform": 126, "zero": 127, "api": 128, "refer": [128, 140, 141, 142, 144], "infrastructur": 129, "gener": [129, 141], "math": 129, "learn": [130, 131, 137, 138, 139], "compon": [130, 132, 134], "updat": 130, "spike": [130, 133, 139, 140], "depend": [130, 131, 139, 140], "plastic": [130, 139], "bound": [130, 139], "classifi": 130, "neural": [132, 133], "encod": [132, 133], "type": [132, 136], "mixin": 132, "observ": 134, "stat": 135, "distribut": 135, "callabl": 136, "model": [137, 141, 142, 143, 144], "method": [137, 138, 139], "zoo": 137, "overview": [137, 138, 139, 140], "resum": 138, "like": [138, 139], "formul": [139, 140, 141, 142, 143, 144], "delai": 139, "anti": 139, "hebbian": 139, "astdp": 139, "descript": [139, 141, 142, 144], "mstdp": 139, "elig": 139, "mstdpet": 139, "weight": 139, "soft": 139, "hard": 139, "adapt": [140, 141, 142], "current": [140, 144], "linear": [140, 141], "threshold": 140, "voltag": 140, "leaki": 141, "integr": [141, 142], "fire": [141, 142], "altern": 141, "1": 141, "2": 141, "3": 141, "glif3": 141, "4": 141, "glif4": 141, "5": 141, "glif5": 141, "nonlinear": 142, "quadrat": 142, "conduct": 143, "base": [143, 144], "coba": 143, "variant": [143, 144], "cuba": 144}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "Configuration": [[5, "configuration"]], "DimensionalModule": [[6, "dimensionalmodule"]], "HistoryModule": [[7, "historymodule"]], "Shape": [[7, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [37, null], [37, null], [37, null], [37, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [44, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [53, null], [60, null], [61, null], [62, null], [65, null], [66, null], [67, null], [68, null], [69, null], [87, null], [87, null], [96, null]], "Hook": [[8, "hook"]], "Interpolation": [[9, "interpolation"], [129, "interpolation"]], "Module": [[10, "module"]], "RemoteHook": [[11, "remotehook"]], "StateHook": [[12, "statehook"]], "empty": [[13, "empty"]], "exp": [[14, "exp"]], "full": [[15, "full"]], "holt_linear_smoothing": [[16, "holt-linear-smoothing"]], "interp_exp_decay": [[17, "interp-exp-decay"]], "interp_linear": [[18, "interp-linear"]], "interp_nearest": [[19, "interp-nearest"]], "interp_previous": [[20, "interp-previous"]], "HardWeightDependence": [[21, "hardweightdependence"]], "LayerwiseUpdater": [[22, "layerwiseupdater"]], "MaxRateClassifier": [[23, "maxrateclassifier"]], "STDP": [[24, "stdp"]], "SoftWeightDependence": [[25, "softweightdependence"]], "WeightDependence": [[26, "weightdependence"]], "UpdateBounding": [[27, "updatebounding"]], "hard_lower_bounding": [[28, "hard-lower-bounding"]], "hard_upper_bounding": [[29, "hard-upper-bounding"]], "mult_lower_bounding": [[30, "mult-lower-bounding"]], "mult_upper_bounding": [[31, "mult-upper-bounding"]], "power_lower_bounding": [[32, "power-lower-bounding"]], "power_upper_bounding": [[33, "power-upper-bounding"]], "ALIF": [[34, "alif"]], "AdEx": [[35, "adex"]], "Clamping": [[36, "clamping"]], "Connection": [[37, "connection"]], "Conv2D": [[38, "conv2d"]], "DeltaCurrent": [[39, "deltacurrent"]], "DeltaPlusCurrent": [[40, "deltapluscurrent"]], "EIF": [[41, "eif"]], "GLIF1": [[42, "glif1"]], "GLIF2": [[43, "glif2"]], "HomogeneousPoissonEncoder": [[44, "homogeneouspoissonencoder"]], "Izhikevich": [[45, "izhikevich"]], "LIF": [[46, "lif"]], "Layer": [[47, "layer"]], "LinearDense": [[48, "lineardense"]], "LinearDirect": [[49, "lineardirect"]], "LinearLateral": [[50, "linearlateral"]], "Neuron": [[51, "neuron"]], "Normalization": [[52, "normalization"]], "PoissonIntervalEncoder": [[53, "poissonintervalencoder"]], "QIF": [[54, "qif"]], "Synapse": [[55, "synapse"]], "SynapseConstructor": [[56, "synapseconstructor"]], "WeightBiasDelayMixin": [[57, "weightbiasdelaymixin"]], "WeightBiasMixin": [[58, "weightbiasmixin"]], "WeightMixin": [[59, "weightmixin"]], "adaptive_currents_linear": [[60, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[61, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[62, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[63, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[64, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[65, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[66, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[67, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[68, "enc-poisson-interval"]], "enc_poisson_interval_online": [[69, "enc-poisson-interval-online"]], "trace_cumulative": [[70, "trace-cumulative"]], "trace_cumulative_scaled": [[71, "trace-cumulative-scaled"]], "trace_nearest": [[72, "trace-nearest"]], "trace_nearest_scaled": [[73, "trace-nearest-scaled"]], "voltage_integration_linear": [[74, "voltage-integration-linear"]], "voltage_integration_quadratic": [[75, "voltage-integration-quadratic"]], "voltage_thresholding": [[76, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[77, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[78, "batchmixin"]], "ShapeMixin": [[79, "shapemixin"]], "AdaptationMixin": [[80, "adaptationmixin"]], "CurrentMixin": [[81, "currentmixin"], [86, "currentmixin"]], "RefractoryMixin": [[82, "refractorymixin"]], "SpikeRefractoryMixin": [[83, "spikerefractorymixin"]], "VoltageMixin": [[84, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[85, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[87, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[88, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[89, "spikederivedcurrentmixin"]], "SpikeMixin": [[90, "spikemixin"]], "normal": [[91, "normal"]], "normalize": [[92, "normalize"]], "CumulativeTraceReducer": [[93, "cumulativetracereducer"]], "EMAReducer": [[94, "emareducer"]], "EventReducer": [[95, "eventreducer"]], "FoldReducer": [[96, "foldreducer"]], "FoldingReducer": [[97, "foldingreducer"]], "InputMonitor": [[98, "inputmonitor"]], "Monitor": [[99, "monitor"]], "NearestTraceReducer": [[100, "nearesttracereducer"]], "OutputMonitor": [[101, "outputmonitor"]], "PassthroughReducer": [[102, "passthroughreducer"]], "PostMonitor": [[103, "postmonitor"]], "PreMonitor": [[104, "premonitor"]], "Reducer": [[105, "reducer"]], "ScaledCumulativeTraceReducer": [[106, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[107, "scalednearesttracereducer"]], "StateMonitor": [[108, "statemonitor"]], "ones": [[109, "ones"]], "rescale": [[110, "rescale"]], "scalar": [[111, "scalar"]], "simple_exponential_smoothing": [[112, "simple-exponential-smoothing"]], "sqrt": [[113, "sqrt"]], "LogNormal": [[114, "lognormal"]], "Parameters": [[114, null], [115, null], [116, null]], "Support": [[114, null], [115, null], [116, null]], "Normal": [[115, "normal"]], "Poisson": [[116, "poisson"]], "tensorize": [[117, "tensorize"]], "ManyToMany": [[118, "manytomany"]], "ManyToManyMethod": [[119, "manytomanymethod"]], "ManyToOne": [[120, "manytoone"]], "ManyToOneMethod": [[121, "manytoonemethod"]], "OneToMany": [[122, "onetomany"]], "OneToManyMethod": [[123, "onetomanymethod"]], "OneToOne": [[124, "onetoone"]], "OneToOneMethod": [[125, "onetoonemethod"]], "uniform": [[126, "uniform"]], "zeros": [[127, "zeros"]], "API Reference": [[128, "api-reference"]], "inferno": [[129, "inferno"]], "Infrastructure": [[129, "infrastructure"]], "General Math": [[129, "general-math"]], "Tensors": [[129, "tensors"]], "inferno.learn": [[130, "module-inferno.learn"]], "Components": [[130, "components"], [132, "components"], [134, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[130, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[130, "parameter-update-bounding"]], "Classifiers": [[130, "classifiers"]], "inferno.learn.functional": [[131, "module-inferno.learn.functional"]], "Parameter Dependence": [[131, "parameter-dependence"]], "inferno.neural": [[132, "module-inferno.neural"]], "Neurons": [[132, "neurons"], [137, "neurons"]], "Synapses": [[132, "synapses"], [137, "synapses"]], "Connections": [[132, "connections"]], "Encoders": [[132, "encoders"]], "Hooks": [[132, "hooks"]], "Types": [[132, "types"]], "Mixins": [[132, "mixins"]], "inferno.neural.functional": [[133, "module-inferno.neural.functional"]], "Encodings": [[133, "encodings"]], "Neuronal Dynamics": [[133, "neuronal-dynamics"]], "Spike Trace": [[133, "spike-trace"]], "inferno.observe": [[134, "inferno-observe"]], "Monitors": [[134, "monitors"]], "Reducers": [[134, "reducers"]], "inferno.stats": [[135, "module-inferno.stats"]], "Distributions": [[135, "distributions"]], "inferno.typing": [[136, "inferno-typing"]], "Callable Types": [[136, "callable-types"]], "Model and Method Zoo": [[137, "model-and-method-zoo"]], "Overview": [[137, "overview"], [138, "overview"], [139, "overview"], [140, "overview"]], "Learning Methods": [[137, "learning-methods"]], "ReSuMe-Like Learning Methods": [[138, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[139, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[139, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[139, "formulation"], [139, "id1"], [139, "id2"], [139, "id3"], [139, "id5"], [140, "formulation"], [140, "id1"], [140, "id3"], [140, "id5"], [141, "formulation"], [141, "id1"], [141, "id4"], [142, "formulation"], [142, "id1"], [142, "id4"], [142, "id7"], [143, "formulation"], [144, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[139, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[139, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[139, "description"], [139, "id4"], [141, "description"], [141, "id2"], [141, "id5"], [142, "description"], [142, "id2"], [142, "id5"], [142, "id8"], [144, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[139, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[139, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[139, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[139, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[140, "neuronal-adaptation"]], "Adaptive Current, Linear": [[140, "adaptive-current-linear"]], "References": [[140, "references"], [140, "id2"], [140, "id4"], [140, "id6"], [141, "references"], [141, "id3"], [141, "id6"], [142, "references"], [142, "id3"], [142, "id6"], [142, "id9"], [144, "references"]], "Adaptive Current, Linear Spike-Dependent": [[140, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[140, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[140, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[141, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[141, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[141, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[141, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[141, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[141, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[141, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[141, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[141, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[142, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[142, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[142, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[142, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[142, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[143, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[143, "delta-coba-variant"]], "Synapse Models, Current-Based": [[144, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[144, "delta-cuba-variant"]]}, "indexentries": {"configuration (class in inferno)": [[5, "inferno.Configuration"]], "_asadict_() (configuration method)": [[5, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[6, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[6, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[6, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[7, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[7, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[7, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[7, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[7, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[7, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[7, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[7, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[7, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[7, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[7, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[7, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[7, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[8, "inferno.Hook"]], "deregister() (hook method)": [[8, "inferno.Hook.deregister"]], "on_eval (hook property)": [[8, "inferno.Hook.on_eval"]], "on_train (hook property)": [[8, "inferno.Hook.on_train"]], "posthook() (hook method)": [[8, "inferno.Hook.posthook"]], "prehook() (hook method)": [[8, "inferno.Hook.prehook"]], "register() (hook method)": [[8, "inferno.Hook.register"]], "registered (hook property)": [[8, "inferno.Hook.registered"]], "interpolation (class in inferno)": [[9, "inferno.Interpolation"]], "module (class in inferno)": [[10, "inferno.Module"]], "get_extra() (module method)": [[10, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[10, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[10, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[10, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[11, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[11, "inferno.RemoteHook.add_inner"]], "innerhook() (remotehook method)": [[11, "inferno.RemoteHook.innerhook"]], "on_eval_inner (remotehook property)": [[11, "inferno.RemoteHook.on_eval_inner"]], "on_train_inner (remotehook property)": [[11, "inferno.RemoteHook.on_train_inner"]], "remove_inner() (remotehook method)": [[11, "inferno.RemoteHook.remove_inner"]], "statehook (class in inferno)": [[12, "inferno.StateHook"]], "module (statehook property)": [[12, "inferno.StateHook.module"]], "register() (statehook method)": [[12, "inferno.StateHook.register"]], "empty() (in module inferno)": [[13, "inferno.empty"]], "exp() (in module inferno)": [[14, "inferno.exp"]], "full() (in module inferno)": [[15, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[16, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[17, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[18, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[19, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[20, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[21, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[22, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[23, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[24, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[24, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[24, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[24, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[24, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[24, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[25, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[26, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[26, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[26, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[27, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[28, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[29, "inferno.learn.functional.hard_upper_bounding"]], "mult_lower_bounding() (in module inferno.learn.functional)": [[30, "inferno.learn.functional.mult_lower_bounding"]], "mult_upper_bounding() (in module inferno.learn.functional)": [[31, "inferno.learn.functional.mult_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[32, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[33, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[34, "inferno.neural.ALIF"]], "adaptation (alif property)": [[34, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[34, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[34, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[34, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[34, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[34, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[34, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[34, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[35, "inferno.neural.AdEx"]], "clear() (adex method)": [[35, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[35, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[35, "inferno.neural.AdEx.forward"]], "clamping (class in inferno.neural)": [[36, "inferno.neural.Clamping"]], "connection (class in inferno.neural)": [[37, "inferno.neural.Connection"]], "bias (connection property)": [[37, "inferno.neural.Connection.bias"]], "biased (connection property)": [[37, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[37, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[37, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[37, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[37, "inferno.neural.Connection.clear"]], "delay (connection property)": [[37, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[37, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[37, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[37, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[37, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[37, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[37, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[37, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[37, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[37, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[37, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[37, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[37, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[37, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[37, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[37, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[37, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[38, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[38, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[38, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[38, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[38, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[38, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[38, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[38, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[38, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[38, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[38, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[38, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[38, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[38, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[38, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[38, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[38, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[38, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[38, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[38, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[38, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[38, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[38, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[39, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[39, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[39, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[39, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[40, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[40, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[40, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[40, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[41, "inferno.neural.EIF"]], "clear() (eif method)": [[41, "inferno.neural.EIF.clear"]], "dt (eif property)": [[41, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[41, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[42, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[42, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[42, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[42, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[42, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[42, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[42, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[42, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[43, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[43, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[43, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[43, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[43, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[43, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[43, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[43, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[43, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[44, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[44, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[45, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[45, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[45, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[45, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[46, "inferno.neural.LIF"]], "bsize (lif property)": [[46, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[46, "inferno.neural.LIF.clear"]], "dt (lif property)": [[46, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[46, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[46, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[46, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[46, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[47, "inferno.neural.Layer"]], "clear() (layer method)": [[47, "inferno.neural.Layer.clear"]], "connection (layer property)": [[47, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[47, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[47, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[47, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[48, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[48, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[48, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[48, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[48, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[48, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[48, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[48, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[48, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[48, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[48, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[48, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[48, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[48, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[48, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[48, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[48, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[48, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[48, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[48, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[48, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[48, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[48, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[49, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[49, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[49, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[49, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[49, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[49, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[49, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[49, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[49, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[49, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[49, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[49, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[49, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[49, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[49, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[49, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[49, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[49, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[49, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[50, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[50, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[50, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[50, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[50, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[50, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[50, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[50, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[50, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[50, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[50, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[50, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[50, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[50, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[50, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[50, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[50, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[50, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[50, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[51, "inferno.neural.Neuron"]], "bsize (neuron property)": [[51, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[51, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[51, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[51, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[51, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[51, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[51, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[51, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[52, "inferno.neural.Normalization"]], "poissonintervalencoder (class in inferno.neural)": [[53, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[53, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[53, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[54, "inferno.neural.QIF"]], "clear() (qif method)": [[54, "inferno.neural.QIF.clear"]], "dt (qif property)": [[54, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[54, "inferno.neural.QIF.forward"]], "synapse (class in inferno.neural)": [[55, "inferno.neural.Synapse"]], "clear() (synapse method)": [[55, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[55, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[55, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[55, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[55, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[55, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[55, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[55, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[55, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[56, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[57, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[57, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[58, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[58, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[59, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[59, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[60, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[61, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[62, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[78, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[78, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[79, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[80, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[80, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[81, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[81, "inferno.neural.neurons.mixins.CurrentMixin.current"], [86, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[82, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[82, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[83, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[83, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[84, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[84, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[85, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[85, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[86, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[88, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[89, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[89, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[90, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[90, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[91, "inferno.normal"]], "normalize() (in module inferno)": [[92, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[93, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[93, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[94, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[94, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[94, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[94, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[95, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[95, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[95, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[95, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[96, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[96, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[96, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[96, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[96, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[96, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[96, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[96, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[96, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[96, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[97, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[98, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[99, "inferno.observe.Monitor"]], "clear() (monitor method)": [[99, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[99, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[99, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[99, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[99, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[100, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[100, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[101, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[102, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[103, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[104, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[105, "inferno.observe.Reducer"]], "clear() (reducer method)": [[105, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[105, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[105, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[105, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[105, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[105, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[106, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[107, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[107, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[108, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[109, "inferno.ones"]], "rescale() (in module inferno)": [[110, "inferno.rescale"]], "scalar() (in module inferno)": [[111, "inferno.scalar"]], "simple_exponential_smoothing() (in module inferno)": [[112, "inferno.simple_exponential_smoothing"]], "sqrt() (in module inferno)": [[113, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[114, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[114, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[114, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[114, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[114, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[114, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[114, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[114, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[114, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[114, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[114, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[115, "inferno.stats.Normal"]], "cdf() (normal class method)": [[115, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[115, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[115, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[115, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[115, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[115, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[115, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[115, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[115, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[115, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[116, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[116, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[116, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[116, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[116, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[116, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[116, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[116, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[116, "inferno.stats.Poisson.variance"]], "tensorize() (in module inferno)": [[117, "inferno.tensorize"]], "manytomany (class in inferno.typing)": [[118, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[119, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[120, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[121, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[122, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[123, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[124, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[125, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[126, "inferno.uniform"]], "zeros() (in module inferno)": [[127, "inferno.zeros"]], "inferno.learn": [[130, "module-inferno.learn"]], "module": [[130, "module-inferno.learn"], [131, "module-inferno.learn.functional"], [132, "module-inferno.neural"], [133, "module-inferno.neural.functional"], [135, "module-inferno.stats"]], "inferno.learn.functional": [[131, "module-inferno.learn.functional"]], "inferno.neural": [[132, "module-inferno.neural"]], "inferno.neural.functional": [[133, "module-inferno.neural.functional"]], "inferno.stats": [[135, "module-inferno.stats"]]}})