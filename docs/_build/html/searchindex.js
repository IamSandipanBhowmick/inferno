Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/distributions", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.dists.Poisson", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/distributions.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.dists.Poisson.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.dists", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "Poisson", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "simple_exponential_smoothing", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 47, 96, 130, 134, 135], "provid": [0, 6, 9, 10, 11, 29, 110], "two": [0, 3, 7, 8, 9, 10, 37, 38, 133, 135], "main": 0, "wai": [0, 2, 11], "interact": [0, 13], "through": [0, 3, 37, 38, 48, 49, 50, 78, 79, 137], "its": [0, 2, 6, 7, 8, 11, 12, 24, 37, 44, 65, 66, 135, 137], "interfac": 0, "The": [0, 2, 3, 7, 8, 12, 13, 14, 24, 25, 38, 40, 47, 53, 63, 64, 65, 66, 68, 69, 71, 73, 85, 89, 95, 96, 98, 101, 106, 107, 108, 132, 133, 135], "latter": [0, 47, 133, 135], "can": [0, 2, 3, 6, 7, 9, 11, 12, 23, 26, 27, 28, 34, 35, 43, 45, 80, 98, 99, 101, 103, 104, 108, 134, 135], "distinguish": 0, "have": [0, 3, 8, 24, 27, 28, 38, 47, 48, 49, 71, 73, 95, 96, 106, 107], "modul": [0, 7, 8, 9, 12, 13, 24, 25, 36, 37, 44, 47, 51, 52, 53, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 101, 103, 104, 108, 113, 115, 117, 119, 130], "name": [0, 6, 7, 8, 11, 24, 26, 36, 47, 52, 83, 85, 87, 89], "which": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 24, 25, 26, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 52, 53, 54, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 110, 120, 132, 133, 134, 135, 137], "end": [0, 2, 18, 21, 23, 26, 30, 31, 34, 35, 38, 39, 40, 42, 43, 45, 46, 70, 71, 72, 73, 83, 93, 94, 100, 106, 107, 111, 132, 133, 134, 135, 137], "In": [0, 2, 8, 44, 53, 96, 134, 137], "gener": [0, 2, 3, 7, 12, 14, 24, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 60, 61, 62, 65, 66, 67, 68, 69, 76, 77, 83, 91, 120, 130, 133, 135], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 87, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 132, 133, 134, 135, 137], "great": 0, "get": [0, 24, 44, 65, 66], "off": [0, 83], "ground": [0, 25], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 11], "tensor": [0, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 120, 121], "shape": [0, 7, 15, 17, 34, 35, 39, 40, 41, 42, 43, 45, 46, 51, 54, 55, 56, 79, 80, 91, 109, 120, 121], "compat": [0, 7, 11], "automat": [0, 11, 25, 60, 61, 62], "reduct": 0, "batch": [0, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 78, 79, 80, 87, 96], "axi": 0, "done": [0, 60, 61, 62], "you": [0, 11], "meanwhil": [0, 3], "more": [0, 3, 26, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 60, 61, 62, 103, 104, 130, 133], "control": [0, 6, 12, 43, 45, 54, 75, 77, 132, 135], "over": [0, 2, 8, 25, 26, 34, 35, 38, 43, 48, 49, 50, 80, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 132, 133, 134, 135, 137], "flow": 0, "logic": [0, 8, 71, 73, 76, 77, 96], "allow": [0, 44, 65, 66, 70, 72, 93, 96, 100, 133], "greater": [0, 28, 67], "custom": [0, 26, 34, 35, 43, 45, 80], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130], "class": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119], "extend": [0, 11, 91, 120], "implement": [0, 2, 8, 11, 24, 28, 34, 35, 37, 41, 45, 51, 54, 55, 60, 62, 75, 76, 77, 96, 97, 130, 132, 133, 134], "subclass": [0, 6, 9, 12, 24, 28, 37, 38, 48, 49, 50, 51, 55, 97], "us": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 54, 56, 60, 62, 65, 71, 73, 74, 75, 87, 96, 99, 134, 135], "from": [0, 2, 7, 8, 9, 11, 12, 14, 15, 17, 19, 24, 25, 26, 37, 38, 39, 40, 44, 45, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 65, 66, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 106, 107, 109, 120, 121, 135, 137], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 6, 7, 8, 9, 11, 12, 14, 23, 24, 26, 27, 28, 34, 35, 37, 38, 43, 44, 45, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 101, 103, 104, 108, 120, 132, 133, 134, 135, 137], "certain": 0, "case": [0, 2, 12, 21, 23, 26, 30, 31, 34, 39, 40, 42, 43, 46, 70, 71, 72, 73, 83, 92, 93, 100, 106, 107, 132, 137], "mai": [0, 2, 7, 10, 11, 26, 38, 47], "faster": [0, 44, 53], "less": [0, 28, 65, 66], "type": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "check": [0, 7, 71, 73], "need": [0, 11, 44, 47, 65, 66], "paramet": [0, 2, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 120, 121, 132, 133, 135], "remain": [0, 34, 42, 43, 46, 51, 60, 61, 62, 76, 77, 82, 83, 94, 133], "same": [0, 2, 6, 8, 11, 12, 34, 38, 43, 47, 80, 93, 94, 95, 96, 100, 102, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 135], "multipl": [0, 2, 3, 38, 43, 47, 77, 96, 132], "call": [0, 8, 9, 11, 12, 13, 14, 24, 36, 37, 38, 48, 49, 50, 52, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 98, 99, 101, 103, 104, 108, 134, 135], "pre": [0, 26, 37, 38, 48, 49, 50, 132], "comput": [0, 2, 7, 14, 25, 37, 38, 44, 48, 49, 50, 53, 110], "initi": [0, 24, 38, 48, 49, 50, 51, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107], "unlik": [0, 12, 13], "artifici": 0, "neuron": [0, 25, 34, 35, 37, 41, 42, 43, 45, 46, 47, 54, 60, 61, 62, 74, 75, 76, 77, 80, 81, 82, 83, 84, 132, 137], "typic": [0, 11, 133, 135], "found": [0, 11], "ann": 0, "snn": 0, "ar": [0, 2, 6, 7, 8, 24, 25, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 76, 77, 83, 85, 87, 89, 96, 97, 98, 110, 130, 132, 133, 134, 135], "fundament": 0, "state": [0, 8, 11, 12, 13, 18, 19, 20, 21, 22, 24, 25, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 70, 71, 72, 73, 76, 77, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 111], "biolog": [0, 2, 3, 134], "electr": [0, 133, 134, 135, 137], "potenti": [0, 2, 3, 26, 31, 33, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 74, 75, 76, 77, 83, 132, 133, 134, 135, 137], "differ": [0, 8, 25, 26, 34, 35, 39, 40, 41, 43, 45, 46, 54, 60, 62, 70, 72, 74, 75, 77, 87, 93, 96, 100, 133, 134, 135], "between": [0, 8, 10, 19, 20, 21, 22, 37, 39, 40, 44, 47, 53, 65, 66, 67, 68, 69, 93, 94, 95, 96, 97, 100, 102, 106, 107, 132, 135], "interior": 0, "exterior": 0, "cell": [0, 34, 35, 41, 43, 45, 46, 54, 74, 75, 133, 134, 135], "drive": 0, "forc": 0, "behind": [0, 2], "action": [0, 2, 3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 76, 77, 83, 133, 134, 135, 137], "simplifi": [0, 137], "model": [0, 2, 3, 23, 27, 28, 30, 31, 32, 33, 47, 133], "when": [0, 2, 6, 8, 9, 11, 12, 13, 25, 26, 34, 35, 36, 37, 38, 43, 45, 47, 48, 49, 50, 52, 60, 61, 62, 76, 77, 80, 87, 93, 96, 98, 99, 100, 101, 103, 104, 108, 132, 133, 134], "": [0, 2, 7, 9, 11, 12, 13, 18, 19, 20, 21, 22, 24, 35, 41, 44, 45, 53, 54, 60, 62, 65, 66, 67, 68, 69, 71, 73, 75, 94, 96, 99, 105, 106, 107, 108, 111, 133, 134, 135], "import": [0, 2, 11], "treat": [0, 2, 26, 39, 40, 87], "variabl": [0, 2, 11], "separ": [0, 38, 44, 53], "each": [0, 2, 7, 8, 9, 25, 39, 40, 44, 53, 96, 133, 134, 135, 137], "sampl": [0, 8, 10, 14, 19, 20, 21, 22, 25, 44, 53, 65, 66, 68, 69, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 120], "present": [0, 7, 8, 25, 26, 27, 28, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 96, 133], "dure": [0, 3, 34, 42, 43, 46, 51, 83], "fix": [0, 3, 14, 34, 35, 41, 42, 43, 45, 46, 54, 135], "hyperparamet": [0, 2, 130], "do": [0, 78, 79], "duplic": 0, "instead": [0, 2, 134], "broadcast": [0, 37, 40, 60, 61, 62, 63, 64], "some": [0, 2, 8, 10, 47, 71, 73, 94], "includ": [0, 8, 10, 11, 26, 29, 34, 35, 37, 38, 43, 45, 47, 48, 49, 50, 53, 68, 69, 79, 80, 96, 103, 104, 130], "adapt": [0, 3, 34, 35, 43, 45, 60, 61, 62, 63, 64, 70, 71, 72, 73, 80, 130], "behavior": [0, 6, 25, 26, 34, 35, 43, 44, 45, 47, 65, 66, 80, 130, 133, 134], "input": [0, 2, 7, 9, 15, 16, 17, 24, 25, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 132, 133, 134, 135, 137], "A": [0, 2, 12, 26, 34, 35, 43, 45, 80], "common": [0, 2, 39, 40, 51, 55, 56], "exampl": [0, 12, 63, 64, 135], "an": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 25, 26, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 79, 80, 83, 87, 93, 95, 97, 100, 108, 112, 113, 114, 115, 116, 117, 133, 134, 135, 137], "threshold": [0, 34, 35, 43, 45, 61, 62, 64, 76, 77, 130, 134, 135], "where": [0, 2, 7, 8, 12, 23, 25, 26, 27, 28, 31, 34, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 83, 87, 94, 96, 132, 133, 134, 135, 137], "defin": [0, 2, 6, 27, 28, 134], "minimum": [0, 7, 27, 28, 44, 65, 66, 110], "membran": [0, 3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 74, 75, 76, 77, 80, 81, 84, 133, 134, 135], "spike": [0, 2, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 61, 62, 64, 65, 66, 67, 68, 69, 76, 77, 83, 85, 87, 88, 89, 90, 130, 134, 135, 137], "These": [0, 25, 40, 133, 134], "should": [0, 7, 8, 9, 11, 12, 13, 24, 25, 26, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 60, 61, 62, 65, 66, 80, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "share": [0, 7], "across": [0, 34, 35, 41, 43, 45, 46, 48, 49, 50, 54, 74, 75, 133, 134, 135], "all": [0, 2, 24, 47, 48, 50, 52, 65, 66, 67, 68, 69, 70, 71, 92, 93, 96, 99, 105, 106, 110, 134], "contribut": [0, 2, 106, 107], "portion": 0, "updat": [0, 2, 8, 9, 12, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 45, 60, 61, 62, 70, 71, 72, 73, 76, 77, 80, 132], "also": [0, 3, 7, 8, 26, 34, 35, 37, 38, 43, 45, 48, 49, 50, 67, 71, 73, 80, 134, 135], "appli": [0, 3, 7, 12, 13, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 48, 49, 50, 52, 60, 61, 62, 63, 64, 96, 103, 104, 132, 133, 134, 135, 137], "weight": [0, 12, 23, 25, 26, 27, 28, 30, 31, 32, 33, 37, 38, 48, 49, 50, 57, 58, 59, 130], "bias": [0, 37, 38, 48, 49, 50, 57, 58], "handl": [0, 11], "either": [0, 2, 8, 9, 25, 57, 62, 87, 133], "reduc": [0, 2, 25, 26, 34, 35, 43, 60, 61, 62, 80, 96, 97, 98, 99, 101, 103, 104, 108], "output": [0, 9, 13, 15, 17, 18, 25, 37, 38, 44, 47, 48, 49, 50, 53, 65, 66, 67, 68, 69, 71, 73, 76, 77, 91, 95, 99, 101, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 132, 135], "along": [0, 12, 38, 52, 60, 61, 62, 79, 92, 96, 110], "dimens": [0, 7, 8, 25, 26, 34, 35, 37, 38, 43, 44, 45, 48, 49, 50, 52, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 92, 96, 110], "former": [0, 47, 133], "effici": 0, "make": [0, 7], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 6, 130], "perform": [0, 2, 9, 12, 14, 18, 25, 36, 38, 52, 70, 71, 72, 73, 96, 97, 111], "But": 0, "might": 0, "necessari": 0, "hand": [0, 96], "detail": [0, 26, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 130], "inform": [0, 9, 51, 103, 104, 133], "process": [0, 24, 26, 44, 65, 66], "arxiv": [0, 133], "1909": 0, "02549": 0, "becaus": [0, 8], "unit": [0, 8, 93, 94, 95, 96, 100, 102, 106, 107, 137], "relev": 0, "match": [0, 2, 7, 48, 49, 50, 70, 71, 72, 73, 93, 95, 100, 106, 107], "theoret": 0, "continu": 0, "descript": [0, 130], "specifi": [0, 7, 8, 9, 15, 17, 24, 25, 27, 52, 55, 91, 92, 98, 101, 108, 109, 120, 121, 132], "length": [0, 2, 8, 10, 19, 20, 21, 22, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 83, 93, 94, 95, 96, 97, 100, 102, 106, 107, 132, 133, 134, 135, 137], "given": [0, 11, 14, 23, 24, 25, 26, 27, 53, 55, 68, 69, 76, 77, 96, 97, 99, 105, 130, 133, 134, 137], "millisecond": [0, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 82, 93, 96, 100, 106, 107], "On": 0, "step": [0, 3, 8, 18, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 93, 94, 95, 96, 97, 100, 102, 106, 107, 111, 132, 133, 134, 135, 137], "amount": [0, 10, 14, 25, 34, 35, 38, 43, 45, 60, 61, 132], "ha": [0, 6, 8, 11, 23, 24, 27, 28, 34, 37, 38, 43, 48, 49, 50, 80, 83, 85, 87, 89, 96, 108, 135, 137], "elaps": 0, "subtract": 0, "inclus": [0, 36], "bound": [0, 23, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 62, 87, 130], "zero": [0, 38, 48, 49, 50, 92, 93, 94, 96, 100, 102, 106, 107], "equal": [0, 2, 65, 66], "consid": [0, 2, 18, 70, 71, 72, 73, 93, 95, 96, 100, 106, 107, 111, 134], "out": [0, 38, 39, 40, 87, 132], "therefor": [0, 7, 8, 96], "evenli": 0, "divis": 0, "simualt": [0, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 54], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 8, 20, 34, 97], "integ": [0, 3, 7, 8], "phenomenon": 2, "rate": [2, 14, 25, 26, 28, 29, 43, 44, 53, 62, 65, 66, 68, 69, 132, 133, 134, 135], "quantiti": 2, "decreas": [2, 133], "proport": [2, 25, 132, 133, 134], "current": [2, 3, 7, 8, 18, 24, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 60, 63, 70, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 111, 130, 132, 134, 135], "valu": [2, 7, 8, 9, 11, 12, 16, 17, 18, 19, 25, 26, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 67, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 100, 102, 106, 107, 110, 111, 120, 133, 134, 135, 137], "It": [2, 8, 47, 135], "describ": [2, 130], "differenti": 2, "equat": 2, "tau": [2, 19, 26, 70, 71, 72, 73, 93, 94, 100, 106, 107], "frac": [2, 14, 19, 20, 25, 34, 35, 38, 41, 43, 45, 46, 54, 60, 61, 65, 66, 70, 71, 72, 73, 75, 94, 132, 133, 134, 135], "dn": 2, "dt": [2, 8, 26, 34, 35, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 93, 96, 100, 106, 107, 132, 133, 134, 135], "n": [2, 14, 44, 48, 49, 50, 63, 64, 65, 66], "solut": [2, 132, 133, 134], "t": [2, 18, 19, 20, 21, 22, 25, 26, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 83, 93, 94, 100, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 132, 133, 134, 135, 137], "n_0": [2, 8, 25, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96], "e": [2, 6, 11, 14, 16, 28, 29, 53, 67, 68, 69, 135], "0": [2, 8, 14, 19, 20, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 60, 61, 62, 78, 79, 83, 92, 93, 94, 95, 100, 102, 106, 107, 121, 132, 135, 137], "oft": 2, "neural": [2, 47], "network": [2, 47], "simul": [2, 3, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 60, 61, 62, 74, 75, 76, 77, 93, 96, 100, 106, 107, 133, 134, 135, 137], "involv": 2, "discret": [2, 8, 14, 93, 96, 100, 106, 107, 135, 137], "timestep": [2, 34], "those": [2, 6, 34, 37, 38, 48, 49, 50], "thei": [2, 6, 67], "often": [2, 132, 135], "appear": 2, "form": [2, 9, 11], "exp": [2, 19, 25, 26, 34, 35, 41, 43, 46, 61, 70, 71, 72, 73, 74, 93, 94, 100, 106, 107, 132, 133, 134, 135], "left": [2, 19, 25, 34, 35, 38, 41, 43, 45, 46, 50, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 94, 96, 132, 133, 134, 135], "right": [2, 19, 25, 34, 35, 38, 41, 43, 45, 46, 50, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 94, 96, 132, 133, 134, 135], "underli": [2, 8, 38, 94, 96, 98, 99, 101, 103, 104, 108, 134, 135], "wa": [2, 9, 10, 23, 24, 27, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62], "solv": 2, "analyt": 2, "approxim": [2, 35, 41, 45, 54, 60, 62, 67, 75, 133, 135], "via": [2, 6], "euler": [2, 35, 41, 45, 54, 60, 62, 75], "method": [2, 6, 8, 11, 24, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 60, 62, 65, 66, 67, 75, 85, 87, 89, 96, 97], "both": 2, "repres": [2, 6, 7, 37, 40, 51, 55, 79, 83, 135], "select": [2, 8, 21, 22, 55, 87, 96, 98, 101], "term": [2, 62, 132, 134], "long": [2, 132], "live": 2, "correspond": [2, 11, 27, 34, 35, 41, 42, 43, 45, 46, 47, 51, 54, 60, 61, 62, 76, 77, 83], "under": [2, 8, 132, 135], "relat": [2, 96, 130, 135], "ne": 2, "k": [2, 14, 25, 60, 61, 62, 63, 64, 71, 73, 106, 107, 113, 115, 117, 119], "That": [2, 132], "after": [2, 8, 9, 10, 12, 23, 24, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 101, 103, 104, 108, 110, 133, 134, 135], "repeat": 2, "applic": [2, 93, 94, 95, 100, 102, 106, 107], "1": [2, 8, 14, 18, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 62, 63, 64, 65, 66, 67, 83, 92, 94, 109, 111, 130, 132, 133, 135, 137], "start": [2, 135], "To": [2, 13, 15, 17, 44, 65, 66, 91, 109, 120, 121, 133, 134], "outsid": [2, 96], "notion": 2, "life": 2, "we": [2, 11], "ln": 2, "b": [2, 18, 25, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 108], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 14], "sometim": 2, "lambda": [2, 14, 25, 134], "context": [2, 133], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 8, 93, 94, 95, 96, 97, 100, 102, 106, 107], "activ": [2, 7], "formal": 2, "sum": [2, 25, 26, 34, 35, 43, 45, 80], "previou": [2, 8, 19, 20, 22, 25, 39, 40, 87, 97, 102], "occur": [2, 12, 13, 14, 25, 26, 36, 39, 40, 47, 52, 87, 133, 134, 135, 137], "howev": 2, "purpos": [2, 106, 107], "comparison": 2, "grow": 2, "complex": [2, 16, 17, 18, 52, 70, 71, 72, 73, 92, 93, 100, 106, 107, 111], "quadrat": [2, 45, 54, 75, 130], "respect": [2, 26, 38, 48, 49, 50, 57, 99], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 24, 25, 71, 73, 134], "than": [2, 12, 24, 25, 28, 65, 66, 67, 71, 73, 134, 135], "everi": [2, 7, 8, 44, 65, 66], "prior": [2, 8, 10, 12, 13, 19, 20, 21, 22, 34, 42, 43, 46, 51, 70, 71, 83, 87, 93, 94, 95, 96, 97, 100, 102, 106, 107], "leav": [2, 134], "sort": [2, 7], "simplest": 2, "dx": 2, "x": [2, 16, 23, 26, 30, 31, 45, 48, 49, 50, 70, 71, 72, 73, 93, 94, 100, 106, 107, 111, 137], "sum_f": 2, "f": [2, 26, 34, 38, 42, 43, 44, 46, 53, 65, 66, 67, 70, 71, 72, 73, 83, 93, 100, 106, 107], "amplitud": [2, 23, 27, 28, 29, 30, 31, 32, 33, 70, 71, 72, 73, 93, 100, 106, 107], "construct": [2, 9, 15, 17, 39, 40, 55, 56, 91, 98, 99, 101, 103, 104, 108, 109, 120, 121], "evalu": [2, 9, 12, 34, 35, 43, 45], "otherwis": [2, 11, 21, 34, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 53, 70, 71, 72, 73, 83, 93, 98, 100, 101, 106, 107], "interpret": 2, "follow": [2, 3, 8, 9, 53, 68, 69, 87, 94, 96, 132, 134], "whenev": 2, "add": [2, 11, 12, 24, 26, 70, 71, 73, 93, 106], "four": [2, 8, 9, 26], "variant": [2, 39, 40, 130], "discuss": 2, "below": [2, 133, 135], "featur": 2, "beyond": 2, "just": 2, "being": [2, 11, 25, 29, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 53, 54, 65, 66, 67, 68, 69, 79, 98, 99, 101, 103, 104, 108, 132], "previous": [2, 12, 13, 36, 52, 96], "come": 2, "fact": 2, "factor": [2, 18, 94, 111, 135], "x_": [2, 18, 26, 70, 71, 72, 73, 93, 94, 100, 106, 107, 111, 132], "begin": [2, 18, 21, 23, 26, 30, 31, 34, 35, 38, 39, 40, 42, 43, 45, 46, 70, 71, 72, 73, 83, 93, 94, 100, 106, 107, 111, 132, 133, 134, 135, 137], "x_t": [2, 70, 71, 72, 73, 93, 100, 106, 107], "lvert": [2, 70, 72, 93, 100], "f_": [2, 26, 34, 42, 43, 46, 70, 71, 72, 73, 83, 93, 100, 106, 107, 132], "rvert": [2, 70, 72, 93, 100], "leq": [2, 14, 70, 72, 93, 100], "epsilon": [2, 70, 72, 92, 93, 100], "text": [2, 14, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 93, 100, 106, 107, 132, 133, 134, 135, 137], "here": [2, 12, 13, 130], "target": [2, 8, 11, 70, 72, 93, 98, 99, 100, 101, 103, 104, 108], "permiss": 2, "error": [2, 11], "For": [2, 10, 12, 26, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64, 93, 94, 100, 106, 107, 108], "set": [2, 7, 8, 9, 15, 17, 34, 35, 38, 43, 44, 45, 48, 49, 53, 60, 61, 62, 65, 66, 70, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 106, 107, 109, 120, 121, 132, 134, 135], "unspecifi": [2, 7], "test": [2, 7, 71, 73, 93, 95, 100, 106, 107], "wherea": 2, "chang": [2, 6, 11, 26, 37, 38, 48, 49, 50, 78, 79, 94, 132, 133, 137], "addit": [2, 24, 38, 43, 44, 48, 49, 50, 65, 66, 71, 73, 77, 133, 134], "replac": [2, 39, 40, 47, 87], "modifi": [2, 7, 9, 15, 17, 23, 27, 28, 91, 98, 99, 101, 103, 104, 108, 109, 120, 121], "onli": [2, 6, 7, 9, 11, 12, 13, 36, 38, 39, 52, 96, 98], "most": [2, 8, 10, 19, 20, 21, 22, 26, 37, 38, 44, 48, 49, 50, 65, 66, 93, 94, 95, 96, 97, 100, 102, 106, 107, 132, 133], "recent": [2, 8, 10, 19, 20, 21, 22, 26, 37, 38, 48, 49, 50, 93, 94, 95, 96, 97, 100, 102, 106, 107, 132], "event": [2, 14, 95], "chosen": 2, "depend": [2, 9, 23, 26, 27, 30, 31, 32, 33, 34, 37, 38, 47, 48, 49, 50, 61, 62, 64, 78, 79, 101, 130, 134], "desir": [2, 52, 92], "properti": [2, 7, 8, 9, 12, 13, 14, 15, 17, 24, 25, 26, 27, 28, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 96, 99, 100, 106, 107, 109, 120, 121, 134], "formul": 2, "abov": [2, 35, 41, 133, 135], "ani": [2, 3, 6, 8, 9, 11, 12, 13, 37, 38, 40, 48, 49, 50, 57, 58, 96, 97, 99, 101, 103, 104, 134, 135, 137], "exactli": 2, "toler": [2, 8, 70, 71, 72, 73, 87, 93, 96, 100], "meet": [2, 8], "criterion": [2, 95, 106, 107], "compon": [2, 71, 73, 133, 134], "ad": [2, 7, 8, 24, 26, 38, 44, 57, 58, 59, 65, 66, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96], "sf": [2, 71, 73, 106, 107], "hold": 2, "align": [2, 18, 34, 35, 38, 43, 45, 94, 111, 132, 133, 134, 135], "neq": [2, 26, 137], "int_": 2, "infti": [2, 14, 34, 43, 64, 133, 134, 135], "theta": [2, 23, 30, 31, 34, 43, 76, 77, 132, 133, 134, 135], "neg": [2, 7], "argument": [2, 7, 8, 9, 10, 12, 13, 24, 25, 29, 37, 38, 47, 48, 49, 50, 96, 99, 103, 104], "posit": [2, 7, 8, 47], "geq": [2, 23, 30, 31, 76, 77], "deriv": [2, 85, 87, 89, 135], "d": [2, 8, 87, 96, 133, 134], "And": [2, 38, 132], "integr": [2, 34, 35, 41, 42, 43, 46, 51, 54, 55, 71, 73, 74, 75, 130, 137], "kind": 3, "absolut": [3, 34, 35, 41, 42, 43, 45, 46, 54, 60, 61, 62, 70, 72, 74, 75, 76, 77, 83, 93, 100], "arp": [3, 34, 42, 43, 46, 83], "rel": [3, 10, 19, 20, 21, 22, 93, 94, 95, 97, 100, 102, 106, 107], "rrp": 3, "cannot": [3, 7, 8, 11, 23, 27, 78, 79, 133], "presynapt": [3, 26, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 63, 74, 75, 76, 77, 132, 133, 134, 137], "doe": [3, 7, 14, 47, 85, 89, 137], "affect": [3, 71, 73, 130], "depolar": [3, 135], "repolar": 3, "hyperpolar": 3, "mean": [3, 26, 34, 35, 43, 80, 98, 99, 101, 103, 104, 108], "while": [3, 34, 35, 41, 42, 43, 45, 46, 54, 76, 77], "difficult": 3, "fire": [3, 34, 35, 41, 42, 43, 46, 54, 64, 130, 133], "imposs": 3, "time": [3, 8, 10, 14, 18, 19, 20, 21, 22, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 130, 133, 134, 135, 137], "voltag": [3, 34, 35, 41, 42, 43, 45, 46, 51, 54, 60, 61, 62, 64, 74, 75, 76, 77, 84, 130, 134, 135], "reset": [3, 8, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 62, 76, 77, 96, 133, 134, 135], "determin": [3, 15, 17, 38, 48, 49, 50, 68, 91, 93, 100, 109, 120, 121], "strongli": 3, "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "map": [6, 47, 96, 98, 101, 103, 104], "unpack": [6, 98], "function": [6, 8, 9, 10, 11, 12, 13, 14, 16, 26, 29, 34, 35, 39, 40, 43, 45, 55, 60, 61, 62, 71, 73, 76, 77, 80, 87, 91, 95, 96, 99, 103, 104, 106, 107, 120, 132, 137], "conjunct": 6, "attr": [6, 108], "librari": [6, 8], "wrap": 6, "_asadict_": 6, "dict": [6, 7, 9, 11, 12, 47, 99], "str": [6, 7, 8, 9, 11, 12, 24, 36, 47, 51, 52, 99, 108], "field": [6, 134, 135], "converet": 6, "dictionari": [6, 7, 11, 47], "flatten": 6, "nest": [6, 108], "object": [6, 9, 10, 11, 13, 14, 24, 47, 56, 59, 78, 80, 81, 82, 84, 86, 87, 90], "own": 6, "If": [6, 8, 9, 12, 24, 25, 27, 28, 34, 35, 37, 38, 41, 43, 44, 45, 46, 48, 49, 50, 54, 57, 60, 61, 62, 65, 66, 80, 98, 101], "conflict": [6, 47], "one": [6, 9, 26, 34, 35, 43, 45, 49, 50, 80, 98, 114, 115, 116, 117, 118, 119, 132, 133], "preserv": [6, 34, 35, 43, 45, 96], "overridden": [6, 24], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "packag": 6, "attribut": [6, 7, 8, 25, 36, 52, 79, 80, 83, 87, 108, 135], "were": [6, 24, 25, 26], "regist": [6, 7, 8, 9, 11, 12, 13, 24, 36, 37, 38, 48, 49, 52, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 98, 99, 101, 103, 104, 108], "constraint": [7, 8, 78, 79, 96], "tupl": [7, 15, 17, 18, 24, 25, 26, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 76, 77, 79, 80, 91, 92, 98, 103, 104, 109, 110, 120, 121], "int": [7, 8, 15, 16, 17, 18, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 91, 92, 93, 100, 106, 107, 109, 110, 111, 120, 121], "support": [7, 38, 39, 40, 48, 49, 50, 55, 56], "dimension": [7, 38], "constrain": [7, 8, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "buffer": [7, 8, 11, 78, 87], "dim": [7, 51, 52, 55, 56, 78, 79, 92, 110], "size": [7, 8, 15, 17, 25, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 78, 79, 87, 91, 109, 120, 121], "rais": [7, 8, 9, 11, 16, 23, 24, 27, 28, 37, 51, 55, 97, 133], "valueerror": [7, 8, 28], "must": [7, 8, 9, 11, 24, 27, 28, 37, 38, 40, 48, 49, 50, 51, 55, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 106, 107], "number": [7, 8, 14, 16, 25, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 79, 87, 91, 96, 112, 113, 114, 115, 116, 117, 120], "element": [7, 8, 25, 38, 48, 49, 50, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 92, 93, 95, 100, 106, 107], "runtimeerror": [7, 8, 9, 23, 27], "2": [7, 14, 38, 43, 130, 135], "first": [7, 39, 40, 63, 64, 65, 67, 68, 134], "second": [7, 134], "assign": [7, 11, 25, 26, 27, 28, 34, 43, 50, 80], "invalid": [7, 11], "reconstrain": 7, "bool": [7, 8, 9, 12, 13, 15, 17, 24, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 120, 121], "torch": [7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 120, 121], "classmethod": [7, 39, 40, 55], "compatible_": 7, "compatible_lik": 7, "like": [7, 11, 15, 17, 26, 34, 35, 37, 38, 43, 45, 48, 49, 50, 55, 80, 91, 109, 120, 121, 130], "none": [7, 8, 9, 12, 13, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 52, 53, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121], "option": [7, 8, 9, 12, 13, 14, 15, 17, 24, 25, 26, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 72, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 120, 121], "default": [7, 8, 9, 12, 13, 14, 15, 17, 24, 25, 26, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 120, 121], "insuffici": 7, "contain": [7, 18, 47, 76, 77], "nonposit": 7, "compatibl": 7, "compatible_like_": 7, "against": 7, "result": [7, 8, 14, 25, 37, 38, 93, 94, 95, 96, 100, 102, 103, 104, 106, 107], "low": 7, "high": 7, "increas": [7, 34, 35, 41, 43, 45, 54, 60, 61, 75, 133, 135], "order": [7, 52, 92, 96, 132], "constraints_repr": 7, "string": [7, 11, 36, 52], "represent": 7, "underscor": 7, "deregister_constrain": [7, 8], "deregist": [7, 9, 24], "fulli": [7, 11, 36, 52], "qualifi": [7, 11, 36, 52], "mindim": 7, "requir": [7, 10, 15, 17, 23, 24, 26, 27, 28, 38, 57, 58, 59, 71, 73, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 96, 109, 120, 121], "static": [7, 14], "mindims_": 7, "edit": 7, "exist": [7, 11, 24, 25, 34, 47, 96], "reshap": [7, 37, 38, 48, 49, 50], "accordingli": [7, 14], "remov": [7, 12], "new": [7, 8, 25, 26, 27, 28, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 93, 96, 100, 106, 107], "had": 7, "extern": [7, 137], "longer": 7, "incompat": [7, 8], "register_constrain": [7, 8], "attributeerror": [7, 8, 11], "step_tim": [8, 19, 20, 21, 22, 26, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107, 135], "float": [8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 92, 93, 94, 95, 96, 97, 100, 102, 106, 107, 110, 111], "history_len": [8, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107], "dimensionalmodul": [8, 51, 78, 79, 81, 82, 83, 84], "keep": [8, 26, 34, 35, 43, 45, 80], "track": 8, "store": [8, 11, 24, 25, 26, 50, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "nonneg": [8, 65, 66, 67, 68, 69], "unconstrain": 8, "impli": [8, 133], "freed": 8, "other": [8, 11, 12, 25, 36, 52, 98, 101, 103, 104, 108, 134], "self": [8, 96], "hlen": [8, 96], "offset": [8, 37, 38, 48, 49, 50], "latest_first": 8, "true": [8, 9, 12, 13, 24, 25, 34, 35, 36, 41, 42, 43, 44, 45, 46, 52, 53, 54, 65, 66, 98, 99, 101, 103, 104, 108], "retriev": [8, 24, 87, 96], "record": [8, 96, 98, 99, 101, 105, 108], "window": 8, "index": [8, 37, 38, 48, 49, 50, 96], "tick": 8, "back": [8, 134], "zeroth": 8, "fals": [8, 12, 13, 24, 25, 26, 36, 38, 39, 40, 44, 48, 49, 50, 52, 53, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 96, 98, 101, 103, 104, 108], "observ": [8, 10, 19, 20, 21, 22, 26, 39, 40, 70, 71, 72, 73, 87, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108], "hsize": 8, "slice": [8, 44, 53, 66, 69], "latest": [8, 18, 70, 71, 72, 73, 100, 107, 111], "By": [8, 12], "correct": 8, "configur": 8, "normal": [8, 12, 25, 36, 110, 137], "circumst": 8, "pushto": 8, "insert": 8, "befor": [8, 9, 11, 24, 36, 38, 50, 52, 87, 96, 97, 98, 99, 101, 103, 104, 108, 110, 133, 135], "been": [8, 96], "sinc": [8, 12, 44, 65, 66, 95], "last": [8, 34, 37, 38, 42, 43, 46, 48, 49, 50, 51, 60, 61, 62, 83, 95, 96, 137], "data": [8, 10, 15, 17, 19, 20, 21, 22, 24, 26, 37, 38, 48, 49, 50, 80, 81, 84, 91, 92, 93, 94, 95, 96, 97, 100, 102, 106, 107, 109, 110, 120, 121], "advanc": 8, "push": [8, 96, 105], "uniniti": [8, 15], "final": 8, "interpol": [8, 19, 20, 21, 22, 39, 40, 87, 93, 94, 95, 96, 97, 100, 102, 106, 107], "1e": [8, 92, 96], "07": [8, 96, 133], "maximum": [8, 25, 26, 27, 28, 38, 39, 40, 44, 48, 49, 50, 53, 55, 56, 67, 87, 96, 110], "onsid": 8, "7": [8, 96], "cdot": [8, 25, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96, 132], "ldot": [8, 25, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 96], "enforc": [8, 47, 96], "gather": [8, 25, 96], "take": [8, 12, 47, 67, 85, 89, 98, 101, 112, 113, 114, 115, 116, 117, 118, 119, 132], "nearest": [8, 21, 26, 39, 40, 100, 107], "produc": 8, "scalar": [8, 15, 17, 91, 109, 120, 121], "within": [8, 11], "without": [8, 24, 28, 29, 71, 73, 133, 134, 135], "ever": 8, "attempt": [8, 34, 43, 80], "regardless": [8, 13], "pass": [8, 9, 12, 13, 23, 24, 26, 27, 28, 34, 35, 37, 38, 43, 45, 47, 48, 49, 50, 80, 96, 98, 99, 103, 104, 137], "overwritten": 8, "exact": [8, 95], "manual": [8, 78, 79], "increment": 8, "specif": [8, 11, 135], "prehook": [9, 13, 98, 99, 104, 108], "callabl": [9, 10, 12, 13, 26, 29, 34, 35, 43, 45, 80, 96, 99, 101, 103, 104, 112, 113, 114, 115, 116, 117, 118, 119], "posthook": [9, 99, 101, 103, 108], "prehook_kwarg": [9, 99], "posthook_kwarg": [9, 99], "train_upd": [9, 13, 36, 52, 98, 99, 101, 103, 104, 108], "eval_upd": [9, 13, 36, 52, 98, 99, 101, 103, 104, 108], "forward": [9, 12, 13, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 96, 98, 99, 101, 103, 104, 105, 108], "itself": [9, 12, 13, 37, 38, 48, 49, 50], "nn": [9, 11, 12, 13, 36, 52], "register_forward_hook": [9, 99, 103], "manag": [9, 24, 76, 77, 78, 79, 87], "removablehandl": 9, "keyword": [9, 10, 12, 24, 29, 37, 38, 47, 48, 49, 50, 99, 103, 104], "register_forward_pre_hook": [9, 99, 104], "run": [9, 12, 13, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 54, 55], "train": [9, 12, 13, 24, 34, 35, 36, 43, 44, 45, 47, 52, 53, 65, 66, 67, 68, 69, 98, 99, 101, 103, 104, 108, 130], "mode": [9, 12, 13, 34, 35, 36, 39, 40, 43, 45, 51, 52, 98, 99, 101, 103, 104, 108], "eval": [9, 13, 24, 36, 52, 98, 99, 101, 103, 104, 108], "signatur": [9, 23, 27, 28, 39, 40, 55], "arg": [9, 10, 11, 12, 29, 55, 56, 99, 105, 112, 113, 114, 115, 116, 117, 118, 119], "Or": 9, "with_kwarg": [9, 103, 104], "kwarg": [9, 10, 11, 12, 24, 26, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 96, 99, 105, 112, 113, 114, 115, 116, 117, 118, 119], "see": [9, 91, 99, 103, 104, 120, 134, 135], "further": 9, "least": 9, "typeerror": [9, 11, 27], "instanc": [9, 11, 108], "alreadi": [9, 26], "on_ev": 9, "on_train": 9, "three": 9, "init": [9, 70, 71, 72, 73], "pytorch": [9, 11, 14, 26, 34, 35, 43, 45, 80], "warn": 9, "runtimewarn": 9, "ignor": [9, 13], "registr": [9, 24], "protocol": [10, 29, 56, 112, 113, 114, 115, 116, 117, 118, 119], "prev_data": [10, 19, 20, 21, 22, 93, 94, 95, 97, 100, 102, 106, 107], "next_data": [10, 19, 20, 21, 22, 93, 94, 95, 97, 100, 102, 106, 107], "subsequ": [10, 19, 20, 21, 22, 40, 93, 94, 95, 97, 100, 102, 106, 107], "sample_at": [10, 19, 20, 21, 22, 93, 94, 95, 97, 100, 102, 106, 107], "step_data": [10, 19, 20, 21, 22, 93, 94, 95, 97, 100, 102, 106, 107], "measur": [10, 96], "interp_previ": 10, "interp_nearest": [10, 96], "interp_linear": 10, "interp_exp_decai": 10, "partial": [10, 29, 38, 39, 40, 48, 49, 50, 55], "fill": [10, 17, 29, 91, 93, 94, 95, 97, 100, 102, 106, 107, 109, 120, 121], "extens": 11, "so": [11, 94, 137], "extra": [11, 51], "similar": [11, 26, 34, 35, 43, 45, 71, 73, 80], "regular": [11, 12], "g": [11, 28, 29], "enabl": 11, "simpl": [11, 63, 64, 111], "export": 11, "__init__": 11, "made": [11, 96], "parent": 11, "child": 11, "constructor": [11, 38, 39, 40, 48, 49, 50, 55, 56, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_extra": 11, "throw": 11, "similarli": 11, "get_submodul": 11, "look": 11, "referenc": 11, "refer": [11, 26, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 130, 132], "path": 11, "termin": 11, "resolv": 11, "someth": 11, "get_extra_st": 11, "state_dict": [11, 24], "set_extra_st": 11, "your": 11, "build": [11, 47], "note": [11, 134, 137], "picklabl": 11, "work": [11, 98, 101, 130], "serial": 11, "backward": 11, "guarante": [11, 47], "break": 11, "pickl": 11, "register_extra": 11, "manner": [11, 97], "register_buff": 11, "except": [11, 12, 13, 36, 52, 71, 73, 134], "limit": [11, 26, 34, 35, 39, 40, 43, 45, 80, 87], "access": 11, "load_state_dict": 11, "hook": [12, 13, 24, 36, 52, 99, 103, 104, 108], "inner_train_upd": 12, "inner_eval_upd": 12, "as_prehook": [12, 13, 36, 52, 108], "prepend": [12, 13, 26, 36, 52, 98, 101, 103, 104, 108], "always_cal": [12, 13, 36, 52], "statehook": [12, 36, 52], "act": [12, 13], "inner": [12, 38, 48, 49, 50], "associ": [12, 24, 26, 44, 53], "trigger": [12, 13, 133, 134, 135], "layer": [12, 24, 26], "__call__": [12, 13], "even": [12, 13, 36, 52, 108], "whether": 12, "alter": [12, 38, 48, 49, 96], "add_inn": 12, "innerhook": 12, "condition": 12, "on_eval_inn": 12, "on_train_inn": 12, "remove_inn": 12, "singl": [13, 47, 96, 98, 101], "distribut": [14, 44, 53, 65, 66, 67, 68, 69], "probabl": 14, "expect": [14, 38, 44, 47, 48, 49, 50, 53, 65, 66, 67, 68, 69, 98, 101], "mathbb": 14, "_0": 14, "count": [14, 70, 72, 79, 93, 100], "cdf": 14, "cumul": [14, 26, 93, 106], "p": [14, 52, 92], "sum_": 14, "j": 14, "lfloor": [14, 38], "rfloor": [14, 38], "logcdf": 14, "natur": [14, 35, 41, 45, 54, 75], "logarithm": 14, "log": 14, "gamma": 14, "logpmf": 14, "mass": 14, "point": [14, 44, 65, 66, 135], "pmf": 14, "random": [14, 38, 48, 49, 50, 91, 120], "variat": 14, "sim": 14, "pseudorandom": [14, 44, 53, 65, 66, 68, 69, 91, 120], "metal": 14, "shader": 14, "compens": [14, 44, 65, 66, 68, 69], "dtype": [15, 17, 91, 95, 106, 107, 109, 120, 121], "layout": [15, 17, 24, 26, 91, 109, 120, 121], "devic": [15, 17, 91, 109, 120, 121], "requires_grad": [15, 17, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 109, 120, 121], "overrid": [15, 17, 25, 91, 109, 120, 121], "gradient": [15, 17, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 109, 120, 121], "ndarrai": 16, "agnost": 16, "exponenti": [16, 18, 19, 26, 34, 35, 41, 43, 44, 45, 46, 54, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 93, 94, 100, 106, 107, 111, 130, 133], "y": [16, 48, 49, 50, 134], "numpi": 16, "ob": [18, 93, 94, 95, 97, 100, 102, 106, 107, 111], "level": [18, 111], "trend": 18, "alpha": [18, 94, 111], "beta": 18, "holt": 18, "linear": [18, 34, 48, 49, 50, 60, 61, 62, 63, 64, 74, 94, 130, 135], "smooth": [18, 94, 111], "s_0": [18, 94, 111], "x_0": [18, 94, 111], "b_0": 18, "x_1": 18, "s_": [18, 94, 111], "s_t": [18, 94, 111], "b_": 18, "b_t": 18, "revis": [18, 111], "time_const": [19, 41, 42, 46, 54, 60, 61, 74, 75, 93, 100, 106, 107], "decai": [19, 25, 26, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 70, 71, 72, 73, 74, 75, 93, 100, 106, 107, 133, 134], "d_": [19, 20, 21, 22, 132], "constant": [19, 26, 34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 74, 75, 93, 94, 100, 106, 107, 132, 133, 134, 135], "linearlli": 20, "wmin": [23, 27, 28], "wmax": [23, 27, 28], "weightdepend": [23, 27], "hard": [23, 26, 30, 31, 130], "lower": [23, 26, 27, 28, 30, 32, 36, 62, 132, 133], "w_": [23, 27, 38, 132], "min": [23, 27, 30, 32, 36, 110, 132], "upper": [23, 27, 28, 31, 33, 36, 132], "max": [23, 26, 27, 31, 33, 34, 35, 36, 43, 45, 62, 80, 110, 132, 133], "a_": [23, 26, 27, 30, 31, 32, 33, 132], "w": [23, 26, 27, 30, 31, 32, 33, 38, 48, 49, 50, 132], "eta_": [23, 26, 27, 30, 31, 32, 33, 132], "exclud": [23, 24, 25, 27, 30, 31, 32, 33, 37, 38, 48, 49, 50, 51, 55, 56, 79], "updatebound": [23, 26, 27, 28], "abc": [24, 28, 37, 51, 55, 97, 105], "interdepend": 24, "attach": 24, "detach": 24, "monitor": [24, 26, 98, 101, 103, 104, 108, 133], "_register_state_dict_hook": 24, "add_monitor": [24, 26], "trainabl": [24, 26], "identifi": 24, "successfulli": [24, 26], "abstract": [24, 28, 37, 51, 55, 97, 105], "notimplementederror": [24, 28, 37, 51, 55, 97], "add_train": 24, "clear": [24, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 96, 99, 105], "submodul": [24, 47], "delet": [24, 37, 38, 48, 49, 50], "well": [24, 27, 58, 130], "del_monitor": 24, "dentifi": 24, "del_train": 24, "get_monitor": 24, "yield": [24, 44, 53, 66, 69], "captur": 24, "num_class": 25, "classifi": 25, "per": [25, 38, 87], "intern": [25, 50, 79], "calcul": [25, 26, 97, 134], "learn": [25, 26, 28, 29, 34, 35, 37, 38, 43, 45, 48, 49, 50], "multipli": [25, 71, 73, 134], "them": [25, 83, 98, 99, 101, 103, 104, 108, 130], "b_k": [25, 35, 45, 60, 62, 133, 135], "group": [25, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 54, 55, 56, 60, 61, 62, 79], "total": [25, 133, 134, 135, 137], "possibl": [25, 96], "decay_r": 25, "scale": [25, 44, 52, 53, 68, 69, 71, 73, 92, 106, 107], "logit": 25, "label": 25, "infer": 25, "truth": 25, "predict": 25, "averag": [25, 60, 61, 62, 94], "nclass": 25, "ndim": 25, "l_1": 25, "raw": 25, "recalcul": 25, "lr_post": 26, "lr_pre": 26, "tc_post": 26, "tc_pre": 26, "delai": [26, 37, 38, 39, 40, 48, 49, 50, 55, 56, 57, 87, 130], "interp_toler": 26, "trace_mod": 26, "liter": [26, 39, 40], "wd_lower": 26, "wd_upper": 26, "batch_reduct": [26, 34, 35, 43, 45, 80], "layerwiseupdat": 26, "plastic": [26, 130], "delta": [26, 34, 35, 39, 40, 41, 43, 44, 45, 46, 53, 54, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 93, 94, 100, 106, 107, 130, 132, 133, 134, 135], "bigl": 26, "post": [26, 37, 38, 48, 49, 50, 132], "bigr": 26, "trace": [26, 70, 71, 72, 73, 93, 100, 106, 107, 130], "vari": 26, "qquad": 26, "m": [26, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76, 77, 82, 83, 87, 133, 134, 135, 137], "postsynapt": [26, 34, 37, 42, 43, 46, 51, 60, 61, 62, 83, 132, 133], "ltp": [26, 28, 132], "ltd": [26, 28, 132], "tau_": [26, 132], "assum": [26, 34, 37, 38, 43, 48, 49, 50, 80, 96], "co": [26, 39, 40, 87], "origin": [26, 34, 35, 43, 45, 80, 96], "visit": [26, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64], "soft": [26, 27, 32, 33, 130], "zoo": [26, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 54, 60, 61, 62, 63, 64], "spike_post": 26, "spike_pr": 26, "trace_post": 26, "trace_pr": 26, "fail": [26, 96], "lrpost": 26, "lrpre": 26, "depress": [26, 30, 32, 132, 133], "minpow": 27, "maxpow": 27, "expon": [27, 32, 33], "mu_": [27, 32, 33, 132], "power": [27, 32, 33, 132], "effect": [27, 28, 38, 48, 49, 133, 135], "magnitud": [28, 132, 133], "hasmax": 28, "hasmin": 28, "power_upper_bound": 29, "power_lower_bound": 29, "hard_upper_bound": 29, "hard_lower_bound": 29, "v_": [30, 31, 32, 33, 34, 35, 41, 43, 45, 46, 54, 60, 62, 74, 75, 76, 77, 133, 134, 135], "v": [30, 31, 32, 33], "rest_v": [34, 35, 41, 42, 43, 45, 46, 54, 60, 62, 74, 75, 77], "reset_v": [34, 35, 41, 42, 45, 46, 54, 76], "thresh_eq_v": [34, 43, 135], "refrac_t": [34, 35, 41, 42, 43, 45, 46, 54, 76, 77, 83], "tc_membran": [34, 35, 43, 45], "tc_adapt": [34, 35, 45], "spike_incr": [34, 35, 43, 45, 60, 61], "resist": [34, 35, 41, 42, 43, 45, 46, 54, 74, 75, 134], "batch_siz": [34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 56, 78, 79], "adaptationmixin": [34, 35, 43, 45], "voltagemixin": [34, 35, 41, 42, 43, 45, 46, 54], "spikerefractorymixin": [34, 35, 41, 42, 43, 45, 46, 54], "leaki": [34, 42, 43, 46, 130], "dynam": [34, 35, 39, 40, 41, 42, 43, 45, 46, 51, 54, 55, 74, 75, 76, 77, 133, 134, 135], "v_m": [34, 35, 41, 43, 45, 46, 54, 60, 62, 74, 75, 76, 77, 133, 134, 135], "rest": [34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 51, 54, 55, 60, 62, 74, 75, 77, 133, 134, 135], "r_mi": [34, 35, 41, 43, 45, 46, 54, 74, 75, 134, 135], "tau_m": [34, 35, 41, 43, 45, 46, 54, 74, 75, 134, 135], "theta_": [34, 43, 62, 64, 133, 134, 135], "sum_k": [34, 35, 43, 45, 133, 134, 135], "theta_k": [34, 43, 61, 62, 64, 133, 134], "tau_k": [34, 35, 45, 60, 61, 70, 71, 72, 73, 133, 134, 135], "leftarrow": [34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 76, 77, 133, 134, 135], "d_k": [34, 43, 45, 133, 134, 135], "equilibrium": [34, 35, 41, 43, 45, 46, 54, 60, 62, 64, 74, 75, 77, 133, 134, 135], "mv": [34, 35, 41, 43, 45, 46, 54, 60, 61, 62, 64, 74, 75, 76, 77, 84, 133, 134, 135], "refractori": [34, 35, 41, 42, 43, 44, 45, 46, 51, 54, 60, 61, 62, 65, 66, 68, 69, 74, 75, 76, 77, 82, 83], "period": [34, 35, 41, 42, 43, 44, 45, 46, 51, 54, 60, 61, 62, 65, 66, 68, 69, 74, 75, 76, 77, 82, 83], "r_m": [34, 35, 41, 43, 45, 46, 54, 74, 75, 134], "omega": [34, 35, 41, 43, 45, 46, 54, 74, 75, 134], "keep_adapt": [34, 35, 43, 45], "refrac_lock": [34, 35, 41, 42, 43, 45, 46, 54], "na": [34, 35, 41, 42, 43, 45, 46, 54, 60, 63, 74, 75, 76, 77, 81, 85, 86, 88, 133, 134, 135, 137], "setter": [34, 43, 50, 80, 85, 89], "additon": [34, 43, 80], "lead": [34, 43, 80], "unreduc": [34, 43, 80], "bsize": [34, 37, 38, 42, 43, 46, 48, 49, 50, 51, 78, 79], "refrac": [34, 42, 43, 44, 46, 51, 60, 61, 62, 65, 66, 76, 77, 82, 83], "t_": [34, 42, 43, 46, 83, 132], "millivolt": [34, 42, 43, 46, 51, 84], "rheobase_v": [35, 41], "sharp": [35, 41, 135], "thresh_v": [35, 41, 42, 45, 46, 54, 76, 77, 135], "voltage_coupl": [35, 45, 60], "delta_t": [35, 41, 135], "v_t": [35, 41, 135], "i_x": [35, 40, 45, 133, 135, 137], "w_k": [35, 45, 60, 63, 133, 135], "a_k": [35, 60, 61, 62, 133, 135], "approach": [35, 41, 135], "rapidli": [35, 41], "steep": [35, 41, 135], "rheobas": [35, 41, 135], "strength": [35, 45, 54, 60, 75], "coupl": [35, 45, 60, 133, 135], "mu": [35, 45, 60, 133, 134, 135], "rang": [36, 96], "synaps": [37, 38, 39, 40, 47, 48, 49, 50, 56, 85, 86, 87, 88, 89, 90], "bia": [37, 38, 48, 49, 50, 57, 58], "learnabl": [37, 38, 48, 49, 50, 57, 58, 59], "binshap": [37, 38, 48, 49, 50], "boutshap": [37, 38, 48, 49, 50], "clearabl": [37, 38, 48, 49, 50], "delayedbi": [37, 38, 48, 49, 50], "maxmimum": [37, 38, 48, 49, 50], "valid": [37, 38, 48, 49, 50], "compos": [37, 47], "py": [37, 38, 48, 49, 50], "meth": [37, 38, 48, 49, 50], "inshap": [37, 38, 48, 49, 50], "insiz": [37, 38, 48, 49, 50], "cach": [37, 38, 48, 49, 50], "refresh": [37, 38, 48, 49, 50], "like_input": [37, 38, 48, 49, 50], "syncurr": [37, 38, 48, 49, 50], "synspik": [37, 38, 48, 49, 50], "like_synapt": [37, 38, 48, 49, 50], "outshap": [37, 38, 48, 49, 50], "outsiz": [37, 38, 48, 49, 50], "postsyn_recept": [37, 38, 48, 49, 50], "l": 37, "presyn_recept": [37, 38, 48, 49, 50], "selector": [37, 38, 39, 40, 48, 49, 50, 55, 87], "synapt": [37, 38, 39, 40, 48, 49, 50, 55, 85, 86, 87, 88, 89], "height": 38, "width": 38, "channel": 38, "filter": [38, 47], "kernel": 38, "stride": 38, "pad": 38, "dilat": 38, "synapseconstructor": [38, 39, 40, 48, 49, 50, 55], "weight_init": [38, 48, 49, 50], "onetoon": [38, 48, 49, 50, 71, 73, 76, 77, 95, 96, 106, 107], "bias_init": [38, 48, 49, 50], "delay_init": [38, 48, 49, 50], "weightbiasdelaymixin": [38, 48, 49, 50], "connect": [38, 47, 48, 49, 50, 55, 56, 57, 58, 59, 132], "convolut": 38, "spatial": 38, "plane": 38, "c": 38, "h": 38, "kh": 38, "kw": 38, "delay_": [38, 48, 49, 57], "creat": [38, 48, 49, 57, 58, 59, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "unless": [38, 48, 49], "later": [38, 48, 49], "uniform": [38, 48, 49, 50], "interv": [38, 44, 48, 49, 50, 53, 65, 66, 68, 69], "rand": [38, 48, 49, 50, 120], "still": [38, 44, 65, 66, 70, 72, 93, 100], "anoth": [38, 87], "h_": 38, "formula": 38, "document": 38, "p_h": 38, "d_h": 38, "k_h": 38, "s_h": 38, "p_w": 38, "d_w": 38, "k_w": 38, "s_w": 38, "ph": 38, "pw": 38, "side": [38, 134], "dh": 38, "dw": [38, 132], "sh": 38, "sw": 38, "oper": [38, 97], "reli": 38, "upon": [38, 135], "expand": 38, "consequenti": 38, "memori": [38, 44, 53], "spike_q": [39, 40], "interp_mod": [39, 40], "interp_tol": [39, 40], "current_overbound": [39, 40], "spike_overbound": [39, 40], "delayedspikecurrentaccessormixin": [39, 40], "spikederivedcurrentmixin": 39, "memoryless": [39, 40], "respond": [39, 40, 133], "instantan": [39, 40], "q": [39, 40, 137], "charg": [39, 40, 137], "carri": [39, 40, 137], "pc": [39, 40, 137], "cuba": [39, 40, 130], "partialconstructor": [39, 40, 55], "spikecurrentmixin": 40, "passthrough": [40, 102], "inject": 40, "glif": [42, 43, 130, 133, 134], "alia": 42, "lif": [42, 130], "reset_v_add": 43, "reset_v_mul": 43, "rc_adapt": 43, "lambda_k": [43, 134], "m_v": [43, 77, 134], "b_v": [43, 77, 134], "unitless": [43, 45, 54, 70, 71, 72, 73, 75, 77, 135], "frequenc": [44, 53, 65, 66, 67, 68, 69, 133], "generatormixin": [44, 53], "refractorystepmixin": 44, "encod": [44, 53], "poisson": [44, 53, 65, 66, 67, 68, 69], "randomli": [44, 65, 66], "hz": [44, 53, 65, 66, 67, 68, 69], "inter": [44, 65, 66, 87], "distanc": [44, 65, 66], "th": [44, 60, 61, 62, 65, 66], "onlin": [44, 53], "iter": [44, 53, 66, 69], "intens": [44, 53], "hertz": [44, 53], "pin": 44, "crit_v": [45, 54, 75], "affin": [45, 54, 75], "crit": [45, 54, 75, 135], "drift": [45, 54, 75], "toward": [45, 54, 75, 134, 135], "awai": [45, 54, 75, 135], "connection_kwarg": 47, "neuron_kwarg": 47, "sequenti": 47, "block": 47, "kei": 47, "written": 47, "avoid": 47, "alwai": [47, 87], "uniqu": 47, "architectur": 47, "explicitli": 47, "go": 47, "unexpect": 47, "in_shap": 48, "out_shap": 48, "interc": [48, 50], "prod": [48, 49, 50], "m_0": 48, "unbatch": [48, 49, 50], "transform": [48, 49, 50], "odot": [49, 50], "inputoutput": [49, 50], "i_n": 50, "lineardens": 50, "creation": 50, "mask": [50, 71, 73, 74, 75], "shapemixin": [51, 55], "extra_repr": 51, "norm": [52, 92], "stepmixin": 53, "replic": [53, 68, 69, 79], "bindsnet": [53, 68, 69], "parameter": [53, 68, 69, 132], "invers": [53, 68, 69, 134, 137], "historymodul": [55, 85, 86, 87, 88, 89, 90, 105], "nanoamper": [55, 81, 86, 87, 89], "current_at": [55, 87], "spike_at": [55, 87], "boolean": 55, "newli": 56, "weightbiasmixin": 57, "mixin": [57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "inherit": [57, 58, 59, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "weight_": [57, 58, 59], "bias_": [57, 58], "weightmixin": 58, "maintain": [60, 61, 62, 76, 77], "doesn": [60, 61, 62], "adapt_r": 62, "rebound_r": 62, "adapt_reset_min": 62, "permit": [62, 71, 73], "adap": [63, 64], "i_": 63, "optioon": [65, 66], "nonsens": [65, 66], "1000": [65, 66], "inhomogen": 67, "_description_": 67, "clamp": 67, "exce": 67, "never": [68, 69], "condit": [70, 71, 72, 73, 135], "incorpor": [70, 71, 72, 73, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107, 134, 135], "matchfn": [71, 73], "trace_cumul": 71, "predic": [71, 73], "datatyp": [71, 73, 95, 106, 107], "trace_nearest": 73, "masked_input": [74, 75], "held": [76, 77], "v_slope": 77, "v_intercept": 77, "batchmixin": 79, "concept": 79, "_shape": 79, "bshape": 79, "adaptation_": 80, "adapt_batchreduc": 80, "current_": [81, 85, 86, 87, 88], "refrac_": [82, 83], "refractorymixin": 83, "driven": 84, "voltage_": 84, "currentmixin": [85, 88], "therefrom": [85, 89], "_to_spik": [85, 87], "noth": [85, 89], "primit": [86, 88, 90], "primitive_curr": 87, "primitive_spik": 87, "current_interp": 87, "spike_interp": 87, "current_overv": 87, "spike_overv": 87, "_to_curr": [87, 89], "spike_": [87, 88, 89, 90], "_current_interp": 87, "_spike_interp": 87, "_current_ob_v": 87, "_spike_ob_v": 87, "_primitive_curr": 87, "_primitive_spik": 87, "_interp_tol": 87, "spikemixin": [88, 89], "randn": 91, "12": [92, 133], "demonin": 92, "foldingreduc": [93, 94, 95, 100, 102, 106, 107], "fold": [93, 94, 95, 97, 100, 102, 106, 107], "entir": [93, 94, 95, 100, 102, 106, 107], "empti": [93, 94, 95, 97, 100, 102, 106, 107], "move": 94, "decoupl": 94, "infin": 95, "fold_fn": 96, "math": 96, "map_fn": 96, "keepshap": 96, "reiniti": [96, 99, 105], "storag": 96, "equival": [96, 134], "histor": 96, "dump": [96, 99, 105], "tempor": 96, "oldest": 96, "peek": [96, 99, 105], "view": [96, 99, 105], "fall": 96, "foldreduc": 97, "manytoon": 98, "receiv": 98, "sent": 98, "directli": 102, "content": [103, 104], "multiplicit": [106, 107], "dot": 108, "notat": 108, "turn": 108, "ti": 108, "resmin": 110, "resmax": 110, "srcmin": 110, "srcmax": 110, "unchang": 110, "amin": 110, "amax": 110, "arbitrari": [112, 113, 114, 115, 116, 117], "uniformli": 120, "depth": 130, "academ": 130, "plan": 130, "futur": 130, "alif": 130, "3": [130, 135], "4": [130, 133, 135], "5": [130, 135], "nonlinear": 130, "qif": 130, "izhikevich": 130, "eif": 130, "adex": 130, "conduct": [130, 134], "coba": 130, "stdp": 130, "anti": 130, "hebbian": 130, "astdp": 130, "mstdp": 130, "elig": 130, "mstdpet": 130, "resum": 130, "tbd": 131, "categori": 132, "With": [132, 133, 134, 135], "w_t": 132, "dirac": [132, 137], "pp": 132, "adjust": 132, "neighbor": 132, "flip": 132, "sign": 132, "postsynpat": 132, "place": 132, "penal": 132, "penalti": 132, "law": 132, "heavisid": 132, "impos": 133, "regard": 133, "steadi": 133, "give": 133, "degre": 133, "freedom": 133, "modif": 133, "dampen": 133, "amplifi": 133, "addition": 133, "said": 133, "goe": 133, "dw_k": [133, 135], "approx": [133, 135], "subthreshold": [133, 135], "doi": [133, 134, 135], "10": [133, 134, 135], "1017": [133, 134, 135], "cbo9781107447615": [133, 134, 135], "6": [133, 135], "1152": 133, "jn": 133, "00686": 133, "2005": 133, "Be": [133, 134], "1038": [133, 134], "s41467": [133, 134], "017": [133, 134], "02717": [133, 134], "allen": [133, 134], "institut": [133, 134], "whitepap": [133, 134], "rebound": 133, "1162": 133, "neco": 133, "2008": 133, "680": 133, "neco_a_00196": 133, "1803": 133, "09574": 133, "021": 133, "24427": 133, "8": [133, 135], "00234": 133, "2019": 133, "dv_m": [134, 135], "basic": 134, "rule": 134, "slope": [134, 135], "show": [134, 135], "v_r": [134, 135], "60": [134, 135], "plot": [134, 135], "c_m": 134, "g_l": 134, "capacit": 134, "nf": 134, "phrase": 134, "leak": 134, "expos": 134, "isbn": [134, 135, 137], "9780262548083": [134, 135, 137], "020": 134, "17236": 134, "fraction": 134, "intercept": 134, "r": 134, "convent": 134, "conting": 134, "reach": 134, "critic": 135, "tendenc": 135, "stabl": 135, "unstabl": 135, "attract": 135, "repel": 135, "v_c": 135, "50": 135, "depeend": 135, "3390": 135, "brainsci12070863": 135, "7551": 135, "mitpress": 135, "2526": 135, "001": 135, "0001": 135, "close": 135, "rapid": 135, "upsw": 135, "rightarrow": 135, "easi": 135, "confus": 135, "unrel": 135, "although": 135, "occasion": 135, "denot": 135, "vartheta_": 135, "rh": 135, "thresh": 135, "usual": 135, "simuat": 135, "illustr": 135, "4249": 135, "scholarpedia": 135, "8427": 135, "1523": 135, "jneurosci": 135, "23": 135, "37": 135, "11628": 135, "2003": 135, "t_f": 137, "veri": 137, "role": 137, "deliv": 137, "dramat": 137}, "objects": {"inferno": [[6, 0, 1, "", "Configuration"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "HistoryModule"], [9, 0, 1, "", "Hook"], [10, 0, 1, "", "Interpolation"], [11, 0, 1, "", "Module"], [12, 0, 1, "", "RemoteHook"], [13, 0, 1, "", "StateHook"], [5, 3, 0, "-", "dists"], [15, 4, 1, "", "empty"], [16, 4, 1, "", "exp"], [17, 4, 1, "", "full"], [18, 4, 1, "", "holt_linear_smoothing"], [19, 4, 1, "", "interp_exp_decay"], [20, 4, 1, "", "interp_linear"], [21, 4, 1, "", "interp_nearest"], [22, 4, 1, "", "interp_previous"], [124, 3, 0, "-", "learn"], [126, 3, 0, "-", "neural"], [91, 4, 1, "", "normal"], [92, 4, 1, "", "normalize"], [109, 4, 1, "", "ones"], [110, 4, 1, "", "rescale"], [111, 4, 1, "", "simple_exponential_smoothing"], [120, 4, 1, "", "uniform"], [121, 4, 1, "", "zeros"]], "inferno.Configuration": [[6, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 2, 1, "", "constraints_repr"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "mindims"], [7, 1, 1, "", "mindims_"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[8, 1, 1, "", "deregister_constrained"], [8, 2, 1, "", "dt"], [8, 1, 1, "", "history"], [8, 2, 1, "", "hlen"], [8, 2, 1, "", "hsize"], [8, 1, 1, "", "latest"], [8, 1, 1, "", "pushto"], [8, 1, 1, "", "register_constrained"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "select"], [8, 1, 1, "", "tick"], [8, 1, 1, "", "update"]], "inferno.Hook": [[9, 1, 1, "", "deregister"], [9, 2, 1, "", "on_eval"], [9, 2, 1, "", "on_train"], [9, 1, 1, "", "posthook"], [9, 1, 1, "", "prehook"], [9, 1, 1, "", "register"], [9, 2, 1, "", "registered"]], "inferno.Module": [[11, 1, 1, "", "get_extra"], [11, 1, 1, "", "get_extra_state"], [11, 1, 1, "", "register_extra"], [11, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[12, 1, 1, "", "add_inner"], [12, 1, 1, "", "innerhook"], [12, 2, 1, "", "on_eval_inner"], [12, 2, 1, "", "on_train_inner"], [12, 1, 1, "", "remove_inner"]], "inferno.StateHook": [[13, 2, 1, "", "module"], [13, 1, 1, "", "register"]], "inferno.dists": [[14, 0, 1, "", "Poisson"]], "inferno.dists.Poisson": [[14, 1, 1, "", "cdf"], [14, 1, 1, "", "logcdf"], [14, 1, 1, "", "logpmf"], [14, 1, 1, "", "pmf"], [14, 1, 1, "", "sample"]], "inferno.learn": [[23, 0, 1, "", "HardWeightDependence"], [24, 0, 1, "", "LayerwiseUpdater"], [25, 0, 1, "", "MaxRateClassifier"], [26, 0, 1, "", "STDP"], [27, 0, 1, "", "SoftWeightDependence"], [28, 0, 1, "", "WeightDependence"], [125, 3, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[23, 1, 1, "", "lower"], [23, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[24, 1, 1, "", "add_monitor"], [24, 1, 1, "", "add_monitors"], [24, 1, 1, "", "add_trainable"], [24, 1, 1, "", "attach"], [24, 1, 1, "", "clear"], [24, 1, 1, "", "del_monitor"], [24, 1, 1, "", "del_monitors"], [24, 1, 1, "", "del_trainable"], [24, 1, 1, "", "detach"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "get_monitor"], [24, 1, 1, "", "get_monitors"], [24, 2, 1, "", "monitors"], [24, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[25, 2, 1, "", "assignments"], [25, 1, 1, "", "forward"], [25, 1, 1, "", "infer"], [25, 1, 1, "", "learn"], [25, 2, 1, "", "nclass"], [25, 2, 1, "", "ndim"], [25, 2, 1, "", "occurances"], [25, 2, 1, "", "proportional"], [25, 2, 1, "", "proportions"], [25, 2, 1, "", "rates"], [25, 2, 1, "", "shape"]], "inferno.learn.STDP": [[26, 1, 1, "", "add_monitors"], [26, 2, 1, "", "dt"], [26, 1, 1, "", "forward"], [26, 2, 1, "", "lrpost"], [26, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[27, 1, 1, "", "lower"], [27, 2, 1, "", "maxpow"], [27, 2, 1, "", "minpow"], [27, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[28, 2, 1, "", "hasmax"], [28, 2, 1, "", "hasmin"], [28, 1, 1, "", "lower"], [28, 1, 1, "", "upper"], [28, 2, 1, "", "wmax"], [28, 2, 1, "", "wmin"]], "inferno.learn.functional": [[29, 0, 1, "", "UpdateBounding"], [30, 4, 1, "", "hard_lower_bounding"], [31, 4, 1, "", "hard_upper_bounding"], [32, 4, 1, "", "power_lower_bounding"], [33, 4, 1, "", "power_upper_bounding"]], "inferno.neural": [[34, 0, 1, "", "ALIF"], [35, 0, 1, "", "AdEx"], [36, 0, 1, "", "Clamping"], [37, 0, 1, "", "Connection"], [38, 0, 1, "", "Conv2D"], [39, 0, 1, "", "DeltaCurrent"], [40, 0, 1, "", "DeltaPlusCurrent"], [41, 0, 1, "", "EIF"], [42, 0, 1, "", "GLIF1"], [43, 0, 1, "", "GLIF2"], [44, 0, 1, "", "HomogeneousPoissonEncoder"], [45, 0, 1, "", "Izhikevich"], [46, 0, 1, "", "LIF"], [47, 0, 1, "", "Layer"], [48, 0, 1, "", "LinearDense"], [49, 0, 1, "", "LinearDirect"], [50, 0, 1, "", "LinearLateral"], [51, 0, 1, "", "Neuron"], [52, 0, 1, "", "Normalization"], [53, 0, 1, "", "PoissonIntervalEncoder"], [54, 0, 1, "", "QIF"], [55, 0, 1, "", "Synapse"], [56, 0, 1, "", "SynapseConstructor"], [127, 3, 0, "-", "functional"]], "inferno.neural.ALIF": [[34, 2, 1, "", "adaptation"], [34, 2, 1, "", "bsize"], [34, 1, 1, "", "clear"], [34, 2, 1, "", "dt"], [34, 1, 1, "", "forward"], [34, 2, 1, "", "refrac"], [34, 2, 1, "", "spike"], [34, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[35, 1, 1, "", "clear"], [35, 2, 1, "", "dt"], [35, 1, 1, "", "forward"]], "inferno.neural.Connection": [[37, 2, 1, "", "bias"], [37, 2, 1, "", "biased"], [37, 2, 1, "", "binshape"], [37, 2, 1, "", "boutshape"], [37, 2, 1, "", "bsize"], [37, 1, 1, "", "clear"], [37, 2, 1, "", "delay"], [37, 2, 1, "", "delayedby"], [37, 2, 1, "", "dt"], [37, 1, 1, "", "forward"], [37, 2, 1, "", "inshape"], [37, 2, 1, "", "insize"], [37, 1, 1, "", "like_input"], [37, 1, 1, "", "like_synaptic"], [37, 2, 1, "", "outshape"], [37, 2, 1, "", "outsize"], [37, 1, 1, "", "postsyn_receptive"], [37, 1, 1, "", "presyn_receptive"], [37, 2, 1, "", "selector"], [37, 2, 1, "", "synapse"], [37, 2, 1, "", "syncurrent"], [37, 2, 1, "", "synspike"], [37, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[38, 2, 1, "", "bias"], [38, 2, 1, "", "biased"], [38, 2, 1, "", "binshape"], [38, 2, 1, "", "boutshape"], [38, 2, 1, "", "bsize"], [38, 1, 1, "", "clear"], [38, 2, 1, "", "delay"], [38, 2, 1, "", "delayedby"], [38, 2, 1, "", "dt"], [38, 1, 1, "", "forward"], [38, 2, 1, "", "inshape"], [38, 2, 1, "", "insize"], [38, 1, 1, "", "like_input"], [38, 1, 1, "", "like_synaptic"], [38, 2, 1, "", "outshape"], [38, 2, 1, "", "outsize"], [38, 1, 1, "", "postsyn_receptive"], [38, 1, 1, "", "presyn_receptive"], [38, 2, 1, "", "selector"], [38, 2, 1, "", "syncurrent"], [38, 2, 1, "", "synspike"], [38, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[39, 1, 1, "", "clear"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[40, 1, 1, "", "clear"], [40, 1, 1, "", "forward"], [40, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[41, 1, 1, "", "clear"], [41, 2, 1, "", "dt"], [41, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[42, 2, 1, "", "bsize"], [42, 1, 1, "", "clear"], [42, 2, 1, "", "dt"], [42, 1, 1, "", "forward"], [42, 2, 1, "", "refrac"], [42, 2, 1, "", "spike"], [42, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[43, 2, 1, "", "adaptation"], [43, 2, 1, "", "bsize"], [43, 1, 1, "", "clear"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"], [43, 2, 1, "", "refrac"], [43, 2, 1, "", "spike"], [43, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[44, 2, 1, "", "compensated"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "frequency"], [44, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[45, 1, 1, "", "clear"], [45, 2, 1, "", "dt"], [45, 1, 1, "", "forward"]], "inferno.neural.LIF": [[46, 2, 1, "", "bsize"], [46, 1, 1, "", "clear"], [46, 2, 1, "", "dt"], [46, 1, 1, "", "forward"], [46, 2, 1, "", "refrac"], [46, 2, 1, "", "spike"], [46, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[47, 1, 1, "", "clear"], [47, 2, 1, "", "connection"], [47, 1, 1, "", "forward"], [47, 2, 1, "", "neuron"], [47, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[48, 2, 1, "", "bias"], [48, 2, 1, "", "biased"], [48, 2, 1, "", "binshape"], [48, 2, 1, "", "boutshape"], [48, 2, 1, "", "bsize"], [48, 1, 1, "", "clear"], [48, 2, 1, "", "delay"], [48, 2, 1, "", "delayedby"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"], [48, 2, 1, "", "inshape"], [48, 2, 1, "", "insize"], [48, 1, 1, "", "like_input"], [48, 1, 1, "", "like_synaptic"], [48, 2, 1, "", "outshape"], [48, 2, 1, "", "outsize"], [48, 1, 1, "", "postsyn_receptive"], [48, 1, 1, "", "presyn_receptive"], [48, 2, 1, "", "selector"], [48, 2, 1, "", "syncurrent"], [48, 2, 1, "", "synspike"], [48, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[49, 2, 1, "", "bias"], [49, 2, 1, "", "biased"], [49, 2, 1, "", "binshape"], [49, 2, 1, "", "boutshape"], [49, 2, 1, "", "bsize"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "delay"], [49, 2, 1, "", "delayedby"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "inshape"], [49, 2, 1, "", "insize"], [49, 1, 1, "", "like_input"], [49, 1, 1, "", "like_synaptic"], [49, 2, 1, "", "outshape"], [49, 2, 1, "", "outsize"], [49, 1, 1, "", "postsyn_receptive"], [49, 1, 1, "", "presyn_receptive"], [49, 2, 1, "", "selector"], [49, 2, 1, "", "syncurrent"], [49, 2, 1, "", "synspike"], [49, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[50, 2, 1, "", "bias"], [50, 2, 1, "", "biased"], [50, 2, 1, "", "binshape"], [50, 2, 1, "", "boutshape"], [50, 2, 1, "", "bsize"], [50, 1, 1, "", "clear"], [50, 2, 1, "", "delay"], [50, 2, 1, "", "delayedby"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "inshape"], [50, 2, 1, "", "insize"], [50, 1, 1, "", "like_input"], [50, 1, 1, "", "like_synaptic"], [50, 2, 1, "", "outshape"], [50, 2, 1, "", "outsize"], [50, 1, 1, "", "postsyn_receptive"], [50, 1, 1, "", "presyn_receptive"], [50, 2, 1, "", "selector"], [50, 2, 1, "", "syncurrent"], [50, 2, 1, "", "synspike"], [50, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[51, 2, 1, "", "bsize"], [51, 1, 1, "", "clear"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "refrac"], [51, 2, 1, "", "spike"], [51, 2, 1, "", "voltage"]], "inferno.neural.PoissonIntervalEncoder": [[53, 1, 1, "", "forward"], [53, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[54, 1, 1, "", "clear"], [54, 2, 1, "", "dt"], [54, 1, 1, "", "forward"]], "inferno.neural.Synapse": [[55, 1, 1, "", "clear"], [55, 2, 1, "", "current"], [55, 1, 1, "", "current_at"], [55, 2, 1, "", "delay"], [55, 2, 1, "", "dt"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "partialconstructor"], [55, 2, 1, "", "spike"], [55, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[57, 0, 1, "", "WeightBiasDelayMixin"], [58, 0, 1, "", "WeightBiasMixin"], [59, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[57, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[58, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[59, 2, 1, "", "weight"]], "inferno.neural.functional": [[60, 4, 1, "", "adaptive_currents_linear"], [61, 4, 1, "", "adaptive_thresholds_linear_spike"], [62, 4, 1, "", "adaptive_thresholds_linear_voltage"], [63, 4, 1, "", "apply_adaptive_currents"], [64, 4, 1, "", "apply_adaptive_thresholds"], [65, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [66, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [67, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [68, 4, 1, "", "enc_poisson_interval"], [69, 4, 1, "", "enc_poisson_interval_online"], [70, 4, 1, "", "trace_cumulative"], [71, 4, 1, "", "trace_cumulative_scaled"], [72, 4, 1, "", "trace_nearest"], [73, 4, 1, "", "trace_nearest_scaled"], [74, 4, 1, "", "voltage_integration_linear"], [75, 4, 1, "", "voltage_integration_quadratic"], [76, 4, 1, "", "voltage_thresholding"], [77, 4, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[78, 0, 1, "", "BatchMixin"], [79, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[78, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[79, 2, 1, "", "bshape"], [79, 2, 1, "", "bsize"], [79, 2, 1, "", "count"], [79, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[80, 0, 1, "", "AdaptationMixin"], [81, 0, 1, "", "CurrentMixin"], [82, 0, 1, "", "RefractoryMixin"], [83, 0, 1, "", "SpikeRefractoryMixin"], [84, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[80, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[81, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[82, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[83, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[84, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[85, 0, 1, "", "CurrentDerivedSpikeMixin"], [86, 0, 1, "", "CurrentMixin"], [87, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [88, 0, 1, "", "SpikeCurrentMixin"], [89, 0, 1, "", "SpikeDerivedCurrentMixin"], [90, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[85, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[86, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[87, 1, 1, "", "current_at"], [87, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[89, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[90, 2, 1, "", "spike"]], "inferno.observe": [[93, 0, 1, "", "CumulativeTraceReducer"], [94, 0, 1, "", "EMAReducer"], [95, 0, 1, "", "EventReducer"], [96, 0, 1, "", "FoldReducer"], [97, 0, 1, "", "FoldingReducer"], [98, 0, 1, "", "InputMonitor"], [99, 0, 1, "", "Monitor"], [100, 0, 1, "", "NearestTraceReducer"], [101, 0, 1, "", "OutputMonitor"], [102, 0, 1, "", "PassthroughReducer"], [103, 0, 1, "", "PostMonitor"], [104, 0, 1, "", "PreMonitor"], [105, 0, 1, "", "Reducer"], [106, 0, 1, "", "ScaledCumulativeTraceReducer"], [107, 0, 1, "", "ScaledNearestTraceReducer"], [108, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[93, 2, 1, "", "dt"], [93, 1, 1, "", "fold"], [93, 1, 1, "", "initialize"], [93, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[94, 1, 1, "", "fold"], [94, 1, 1, "", "initialize"], [94, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[95, 1, 1, "", "fold"], [95, 1, 1, "", "initialize"], [95, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[96, 1, 1, "", "clear"], [96, 2, 1, "", "data"], [96, 2, 1, "", "dt"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "forward"], [96, 2, 1, "", "hlen"], [96, 1, 1, "", "peek"], [96, 1, 1, "", "push"], [96, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[97, 1, 1, "", "fold"], [97, 1, 1, "", "initialize"], [97, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[99, 1, 1, "", "clear"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "peek"], [99, 2, 1, "", "reducer"], [99, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[100, 2, 1, "", "dt"], [100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[102, 1, 1, "", "fold"], [102, 1, 1, "", "initialize"], [102, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[105, 1, 1, "", "clear"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "forward"], [105, 1, 1, "", "peek"], [105, 1, 1, "", "push"], [105, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[106, 2, 1, "", "dt"], [106, 1, 1, "", "fold"], [106, 1, 1, "", "initialize"], [106, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[107, 2, 1, "", "dt"], [107, 1, 1, "", "fold"], [107, 1, 1, "", "initialize"], [107, 1, 1, "", "interpolate"]], "inferno.typing": [[112, 0, 1, "", "ManyToMany"], [113, 0, 1, "", "ManyToManyMethod"], [114, 0, 1, "", "ManyToOne"], [115, 0, 1, "", "ManyToOneMethod"], [116, 0, 1, "", "OneToMany"], [117, 0, 1, "", "OneToManyMethod"], [118, 0, 1, "", "OneToOne"], [119, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 125, 127], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 124, 132], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 135], "decai": 2, "constant": 2, "trace": [2, 127, 132], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 136, 137], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 51, 126, 127, 130, 133, 134, 135], "system": 3, "dynam": [3, 127], "welcom": 4, "inferno": [4, 5, 123, 124, 125, 126, 127, 128, 129], "": 4, "document": 4, "dist": 5, "distribut": 5, "configur": 6, "dimensionalmodul": 7, "historymodul": 8, "shape": [8, 25, 37, 38, 44, 48, 49, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 87, 96], "hook": [9, 126], "interpol": [10, 123], "modul": [11, 132], "remotehook": 12, "statehook": 13, "poisson": 14, "paramet": [14, 124, 125], "support": 14, "empti": 15, "exp": 16, "full": 17, "holt_linear_smooth": 18, "interp_exp_decai": 19, "interp_linear": 20, "interp_nearest": 21, "interp_previ": 22, "hardweightdepend": 23, "layerwiseupdat": 24, "maxrateclassifi": 25, "stdp": [26, 132], "softweightdepend": 27, "weightdepend": 28, "updatebound": 29, "hard_lower_bound": 30, "hard_upper_bound": 31, "power_lower_bound": 32, "power_upper_bound": 33, "alif": [34, 134], "adex": [35, 135], "clamp": 36, "connect": [37, 126], "conv2d": 38, "deltacurr": 39, "deltapluscurr": 40, "eif": [41, 135], "glif1": [42, 134], "glif2": [43, 134], "homogeneouspoissonencod": 44, "izhikevich": [45, 135], "lif": [46, 134], "layer": 47, "lineardens": 48, "lineardirect": 49, "linearlater": 50, "normal": [52, 91, 92], "poissonintervalencod": 53, "qif": [54, 135], "synaps": [55, 126, 130, 136, 137], "synapseconstructor": 56, "weightbiasdelaymixin": 57, "weightbiasmixin": 58, "weightmixin": 59, "adaptive_currents_linear": 60, "adaptive_thresholds_linear_spik": 61, "adaptive_thresholds_linear_voltag": 62, "apply_adaptive_curr": 63, "apply_adaptive_threshold": 64, "enc_homogeneous_poisson_exp_interv": 65, "enc_homogeneous_poisson_exp_interval_onlin": 66, "enc_inhomogenous_poisson_bernoulli_approx": 67, "enc_poisson_interv": 68, "enc_poisson_interval_onlin": 69, "trace_cumul": 70, "trace_cumulative_sc": 71, "trace_nearest": 72, "trace_nearest_sc": 73, "voltage_integration_linear": 74, "voltage_integration_quadrat": 75, "voltage_threshold": 76, "voltage_thresholding_slope_intercept": 77, "batchmixin": 78, "shapemixin": 79, "adaptationmixin": 80, "currentmixin": [81, 86], "refractorymixin": 82, "spikerefractorymixin": 83, "voltagemixin": 84, "currentderivedspikemixin": 85, "delayedspikecurrentaccessormixin": 87, "spikecurrentmixin": 88, "spikederivedcurrentmixin": 89, "spikemixin": 90, "cumulativetracereduc": 93, "emareduc": 94, "eventreduc": 95, "foldreduc": 96, "foldingreduc": 97, "inputmonitor": 98, "monitor": [99, 128], "nearesttracereduc": 100, "outputmonitor": 101, "passthroughreduc": 102, "postmonitor": 103, "premonitor": 104, "reduc": [105, 128], "scaledcumulativetracereduc": 106, "scalednearesttracereduc": 107, "statemonitor": 108, "ones": 109, "rescal": 110, "simple_exponential_smooth": 111, "manytomani": 112, "manytomanymethod": 113, "manytoon": 114, "manytoonemethod": 115, "onetomani": 116, "onetomanymethod": 117, "onetoon": 118, "onetoonemethod": 119, "uniform": 120, "zero": 121, "api": 122, "refer": [122, 133, 134, 135, 137], "infrastructur": 123, "gener": [123, 134], "math": 123, "tensor": 123, "learn": [124, 125, 130, 131, 132], "compon": [124, 126, 128], "updat": 124, "spike": [124, 127, 132, 133], "depend": [124, 125, 132, 133], "plastic": [124, 132], "bound": [124, 132], "classifi": 124, "neural": [126, 127], "encod": [126, 127], "type": [126, 129], "mixin": 126, "observ": 128, "callabl": 129, "model": [130, 134, 135, 136, 137], "method": [130, 131, 132], "zoo": 130, "overview": [130, 131, 132, 133], "resum": 131, "like": [131, 132], "formul": [132, 133, 134, 135, 136, 137], "delai": 132, "anti": 132, "hebbian": 132, "astdp": 132, "descript": [132, 134, 135, 137], "mstdp": 132, "elig": 132, "mstdpet": 132, "weight": 132, "soft": 132, "hard": 132, "adapt": [133, 134, 135], "current": [133, 137], "linear": [133, 134], "threshold": 133, "voltag": 133, "leaki": 134, "integr": [134, 135], "fire": [134, 135], "altern": 134, "1": 134, "2": 134, "3": 134, "glif3": 134, "4": 134, "glif4": 134, "5": 134, "glif5": 134, "nonlinear": 135, "quadrat": 135, "conduct": 136, "base": [136, 137], "coba": 136, "variant": [136, 137], "cuba": 137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.dists": [[5, "module-inferno.dists"]], "Distributions": [[5, "distributions"]], "Configuration": [[6, "configuration"]], "DimensionalModule": [[7, "dimensionalmodule"]], "HistoryModule": [[8, "historymodule"]], "Shape": [[8, null], [25, null], [25, null], [25, null], [25, null], [25, null], [25, null], [25, null], [37, null], [37, null], [37, null], [37, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [44, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [53, null], [60, null], [61, null], [62, null], [65, null], [66, null], [67, null], [68, null], [69, null], [87, null], [87, null], [96, null]], "Hook": [[9, "hook"]], "Interpolation": [[10, "interpolation"], [123, "interpolation"]], "Module": [[11, "module"]], "RemoteHook": [[12, "remotehook"]], "StateHook": [[13, "statehook"]], "Poisson": [[14, "poisson"]], "Parameters": [[14, null]], "Support": [[14, null]], "empty": [[15, "empty"]], "exp": [[16, "exp"]], "full": [[17, "full"]], "holt_linear_smoothing": [[18, "holt-linear-smoothing"]], "interp_exp_decay": [[19, "interp-exp-decay"]], "interp_linear": [[20, "interp-linear"]], "interp_nearest": [[21, "interp-nearest"]], "interp_previous": [[22, "interp-previous"]], "HardWeightDependence": [[23, "hardweightdependence"]], "LayerwiseUpdater": [[24, "layerwiseupdater"]], "MaxRateClassifier": [[25, "maxrateclassifier"]], "STDP": [[26, "stdp"]], "SoftWeightDependence": [[27, "softweightdependence"]], "WeightDependence": [[28, "weightdependence"]], "UpdateBounding": [[29, "updatebounding"]], "hard_lower_bounding": [[30, "hard-lower-bounding"]], "hard_upper_bounding": [[31, "hard-upper-bounding"]], "power_lower_bounding": [[32, "power-lower-bounding"]], "power_upper_bounding": [[33, "power-upper-bounding"]], "ALIF": [[34, "alif"]], "AdEx": [[35, "adex"]], "Clamping": [[36, "clamping"]], "Connection": [[37, "connection"]], "Conv2D": [[38, "conv2d"]], "DeltaCurrent": [[39, "deltacurrent"]], "DeltaPlusCurrent": [[40, "deltapluscurrent"]], "EIF": [[41, "eif"]], "GLIF1": [[42, "glif1"]], "GLIF2": [[43, "glif2"]], "HomogeneousPoissonEncoder": [[44, "homogeneouspoissonencoder"]], "Izhikevich": [[45, "izhikevich"]], "LIF": [[46, "lif"]], "Layer": [[47, "layer"]], "LinearDense": [[48, "lineardense"]], "LinearDirect": [[49, "lineardirect"]], "LinearLateral": [[50, "linearlateral"]], "Neuron": [[51, "neuron"]], "Normalization": [[52, "normalization"]], "PoissonIntervalEncoder": [[53, "poissonintervalencoder"]], "QIF": [[54, "qif"]], "Synapse": [[55, "synapse"]], "SynapseConstructor": [[56, "synapseconstructor"]], "WeightBiasDelayMixin": [[57, "weightbiasdelaymixin"]], "WeightBiasMixin": [[58, "weightbiasmixin"]], "WeightMixin": [[59, "weightmixin"]], "adaptive_currents_linear": [[60, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[61, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[62, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[63, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[64, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[65, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[66, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[67, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[68, "enc-poisson-interval"]], "enc_poisson_interval_online": [[69, "enc-poisson-interval-online"]], "trace_cumulative": [[70, "trace-cumulative"]], "trace_cumulative_scaled": [[71, "trace-cumulative-scaled"]], "trace_nearest": [[72, "trace-nearest"]], "trace_nearest_scaled": [[73, "trace-nearest-scaled"]], "voltage_integration_linear": [[74, "voltage-integration-linear"]], "voltage_integration_quadratic": [[75, "voltage-integration-quadratic"]], "voltage_thresholding": [[76, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[77, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[78, "batchmixin"]], "ShapeMixin": [[79, "shapemixin"]], "AdaptationMixin": [[80, "adaptationmixin"]], "CurrentMixin": [[81, "currentmixin"], [86, "currentmixin"]], "RefractoryMixin": [[82, "refractorymixin"]], "SpikeRefractoryMixin": [[83, "spikerefractorymixin"]], "VoltageMixin": [[84, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[85, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[87, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[88, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[89, "spikederivedcurrentmixin"]], "SpikeMixin": [[90, "spikemixin"]], "normal": [[91, "normal"]], "normalize": [[92, "normalize"]], "CumulativeTraceReducer": [[93, "cumulativetracereducer"]], "EMAReducer": [[94, "emareducer"]], "EventReducer": [[95, "eventreducer"]], "FoldReducer": [[96, "foldreducer"]], "FoldingReducer": [[97, "foldingreducer"]], "InputMonitor": [[98, "inputmonitor"]], "Monitor": [[99, "monitor"]], "NearestTraceReducer": [[100, "nearesttracereducer"]], "OutputMonitor": [[101, "outputmonitor"]], "PassthroughReducer": [[102, "passthroughreducer"]], "PostMonitor": [[103, "postmonitor"]], "PreMonitor": [[104, "premonitor"]], "Reducer": [[105, "reducer"]], "ScaledCumulativeTraceReducer": [[106, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[107, "scalednearesttracereducer"]], "StateMonitor": [[108, "statemonitor"]], "ones": [[109, "ones"]], "rescale": [[110, "rescale"]], "simple_exponential_smoothing": [[111, "simple-exponential-smoothing"]], "ManyToMany": [[112, "manytomany"]], "ManyToManyMethod": [[113, "manytomanymethod"]], "ManyToOne": [[114, "manytoone"]], "ManyToOneMethod": [[115, "manytoonemethod"]], "OneToMany": [[116, "onetomany"]], "OneToManyMethod": [[117, "onetomanymethod"]], "OneToOne": [[118, "onetoone"]], "OneToOneMethod": [[119, "onetoonemethod"]], "uniform": [[120, "uniform"]], "zeros": [[121, "zeros"]], "API Reference": [[122, "api-reference"]], "inferno": [[123, "inferno"]], "Infrastructure": [[123, "infrastructure"]], "General Math": [[123, "general-math"]], "Tensors": [[123, "tensors"]], "inferno.learn": [[124, "module-inferno.learn"]], "Components": [[124, "components"], [126, "components"], [128, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[124, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[124, "parameter-update-bounding"]], "Classifiers": [[124, "classifiers"]], "inferno.learn.functional": [[125, "module-inferno.learn.functional"]], "Parameter Dependence": [[125, "parameter-dependence"]], "inferno.neural": [[126, "module-inferno.neural"]], "Neurons": [[126, "neurons"], [130, "neurons"]], "Synapses": [[126, "synapses"], [130, "synapses"]], "Connections": [[126, "connections"]], "Encoders": [[126, "encoders"]], "Hooks": [[126, "hooks"]], "Types": [[126, "types"]], "Mixins": [[126, "mixins"]], "inferno.neural.functional": [[127, "module-inferno.neural.functional"]], "Encodings": [[127, "encodings"]], "Neuronal Dynamics": [[127, "neuronal-dynamics"]], "Spike Trace": [[127, "spike-trace"]], "inferno.observe": [[128, "inferno-observe"]], "Monitors": [[128, "monitors"]], "Reducers": [[128, "reducers"]], "inferno.typing": [[129, "inferno-typing"]], "Callable Types": [[129, "callable-types"]], "Model and Method Zoo": [[130, "model-and-method-zoo"]], "Overview": [[130, "overview"], [131, "overview"], [132, "overview"], [133, "overview"]], "Learning Methods": [[130, "learning-methods"]], "ReSuMe-Like Learning Methods": [[131, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[132, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[132, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[132, "formulation"], [132, "id1"], [132, "id2"], [132, "id3"], [132, "id5"], [133, "formulation"], [133, "id1"], [133, "id3"], [133, "id5"], [134, "formulation"], [134, "id1"], [134, "id4"], [135, "formulation"], [135, "id1"], [135, "id4"], [135, "id7"], [136, "formulation"], [137, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[132, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[132, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[132, "description"], [132, "id4"], [134, "description"], [134, "id2"], [134, "id5"], [135, "description"], [135, "id2"], [135, "id5"], [135, "id8"], [137, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[132, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[132, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[132, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[132, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[133, "neuronal-adaptation"]], "Adaptive Current, Linear": [[133, "adaptive-current-linear"]], "References": [[133, "references"], [133, "id2"], [133, "id4"], [133, "id6"], [134, "references"], [134, "id3"], [134, "id6"], [135, "references"], [135, "id3"], [135, "id6"], [135, "id9"], [137, "references"]], "Adaptive Current, Linear Spike-Dependent": [[133, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[133, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[133, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[134, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[134, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[134, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[134, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[134, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[134, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[134, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[134, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[134, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[135, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[135, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[135, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[135, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[135, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[136, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[136, "delta-coba-variant"]], "Synapse Models, Current-Based": [[137, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[137, "delta-cuba-variant"]]}, "indexentries": {"inferno.dists": [[5, "module-inferno.dists"]], "module": [[5, "module-inferno.dists"], [124, "module-inferno.learn"], [125, "module-inferno.learn.functional"], [126, "module-inferno.neural"], [127, "module-inferno.neural.functional"]], "configuration (class in inferno)": [[6, "inferno.Configuration"]], "_asadict_() (configuration method)": [[6, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[7, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[8, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[8, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[8, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[8, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[8, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[8, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[8, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[8, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[8, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[8, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[8, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[8, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[8, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[9, "inferno.Hook"]], "deregister() (hook method)": [[9, "inferno.Hook.deregister"]], "on_eval (hook property)": [[9, "inferno.Hook.on_eval"]], "on_train (hook property)": [[9, "inferno.Hook.on_train"]], "posthook() (hook method)": [[9, "inferno.Hook.posthook"]], "prehook() (hook method)": [[9, "inferno.Hook.prehook"]], "register() (hook method)": [[9, "inferno.Hook.register"]], "registered (hook property)": [[9, "inferno.Hook.registered"]], "interpolation (class in inferno)": [[10, "inferno.Interpolation"]], "module (class in inferno)": [[11, "inferno.Module"]], "get_extra() (module method)": [[11, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[11, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[11, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[11, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[12, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[12, "inferno.RemoteHook.add_inner"]], "innerhook() (remotehook method)": [[12, "inferno.RemoteHook.innerhook"]], "on_eval_inner (remotehook property)": [[12, "inferno.RemoteHook.on_eval_inner"]], "on_train_inner (remotehook property)": [[12, "inferno.RemoteHook.on_train_inner"]], "remove_inner() (remotehook method)": [[12, "inferno.RemoteHook.remove_inner"]], "statehook (class in inferno)": [[13, "inferno.StateHook"]], "module (statehook property)": [[13, "inferno.StateHook.module"]], "register() (statehook method)": [[13, "inferno.StateHook.register"]], "poisson (class in inferno.dists)": [[14, "inferno.dists.Poisson"]], "cdf() (poisson static method)": [[14, "inferno.dists.Poisson.cdf"]], "logcdf() (poisson static method)": [[14, "inferno.dists.Poisson.logcdf"]], "logpmf() (poisson static method)": [[14, "inferno.dists.Poisson.logpmf"]], "pmf() (poisson static method)": [[14, "inferno.dists.Poisson.pmf"]], "sample() (poisson static method)": [[14, "inferno.dists.Poisson.sample"]], "empty() (in module inferno)": [[15, "inferno.empty"]], "exp() (in module inferno)": [[16, "inferno.exp"]], "full() (in module inferno)": [[17, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[18, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[19, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[20, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[21, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[22, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[23, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[23, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[23, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[24, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[24, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[24, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[24, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[25, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[25, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[25, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[25, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[25, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[26, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[26, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[26, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[26, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[26, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[26, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[27, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[27, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[27, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[27, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[27, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[28, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[28, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[28, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[28, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[28, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[28, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[28, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[29, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[30, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[31, "inferno.learn.functional.hard_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[32, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[33, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[34, "inferno.neural.ALIF"]], "adaptation (alif property)": [[34, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[34, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[34, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[34, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[34, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[34, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[34, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[34, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[35, "inferno.neural.AdEx"]], "clear() (adex method)": [[35, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[35, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[35, "inferno.neural.AdEx.forward"]], "clamping (class in inferno.neural)": [[36, "inferno.neural.Clamping"]], "connection (class in inferno.neural)": [[37, "inferno.neural.Connection"]], "bias (connection property)": [[37, "inferno.neural.Connection.bias"]], "biased (connection property)": [[37, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[37, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[37, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[37, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[37, "inferno.neural.Connection.clear"]], "delay (connection property)": [[37, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[37, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[37, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[37, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[37, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[37, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[37, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[37, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[37, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[37, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[37, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[37, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[37, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[37, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[37, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[37, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[37, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[38, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[38, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[38, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[38, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[38, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[38, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[38, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[38, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[38, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[38, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[38, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[38, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[38, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[38, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[38, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[38, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[38, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[38, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[38, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[38, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[38, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[38, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[38, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[39, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[39, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[39, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[39, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[40, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[40, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[40, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[40, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[41, "inferno.neural.EIF"]], "clear() (eif method)": [[41, "inferno.neural.EIF.clear"]], "dt (eif property)": [[41, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[41, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[42, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[42, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[42, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[42, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[42, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[42, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[42, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[42, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[43, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[43, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[43, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[43, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[43, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[43, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[43, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[43, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[43, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[44, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[44, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[44, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[45, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[45, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[45, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[45, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[46, "inferno.neural.LIF"]], "bsize (lif property)": [[46, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[46, "inferno.neural.LIF.clear"]], "dt (lif property)": [[46, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[46, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[46, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[46, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[46, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[47, "inferno.neural.Layer"]], "clear() (layer method)": [[47, "inferno.neural.Layer.clear"]], "connection (layer property)": [[47, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[47, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[47, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[47, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[48, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[48, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[48, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[48, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[48, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[48, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[48, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[48, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[48, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[48, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[48, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[48, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[48, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[48, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[48, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[48, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[48, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[48, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[48, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[48, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[48, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[48, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[48, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[49, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[49, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[49, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[49, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[49, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[49, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[49, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[49, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[49, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[49, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[49, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[49, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[49, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[49, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[49, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[49, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[49, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[49, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[49, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[49, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[50, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[50, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[50, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[50, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[50, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[50, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[50, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[50, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[50, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[50, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[50, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[50, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[50, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[50, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[50, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[50, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[50, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[50, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[50, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[50, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[51, "inferno.neural.Neuron"]], "bsize (neuron property)": [[51, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[51, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[51, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[51, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[51, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[51, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[51, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[51, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[52, "inferno.neural.Normalization"]], "poissonintervalencoder (class in inferno.neural)": [[53, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[53, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[53, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[54, "inferno.neural.QIF"]], "clear() (qif method)": [[54, "inferno.neural.QIF.clear"]], "dt (qif property)": [[54, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[54, "inferno.neural.QIF.forward"]], "synapse (class in inferno.neural)": [[55, "inferno.neural.Synapse"]], "clear() (synapse method)": [[55, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[55, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[55, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[55, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[55, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[55, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[55, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[55, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[55, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[56, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[57, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[57, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[58, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[58, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[59, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[59, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[60, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[61, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[62, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[78, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[78, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[79, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[79, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[80, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[80, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[81, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[81, "inferno.neural.neurons.mixins.CurrentMixin.current"], [86, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[82, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[82, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[83, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[83, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[84, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[84, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[85, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[85, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[86, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[87, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[88, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[89, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[89, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[90, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[90, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[91, "inferno.normal"]], "normalize() (in module inferno)": [[92, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[93, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[93, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[93, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[94, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[94, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[94, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[94, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[95, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[95, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[95, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[95, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[96, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[96, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[96, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[96, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[96, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[96, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[96, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[96, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[96, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[96, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[97, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[97, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[98, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[99, "inferno.observe.Monitor"]], "clear() (monitor method)": [[99, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[99, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[99, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[99, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[99, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[100, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[100, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[100, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[101, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[102, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[102, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[103, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[104, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[105, "inferno.observe.Reducer"]], "clear() (reducer method)": [[105, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[105, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[105, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[105, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[105, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[105, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[106, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[106, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[107, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[107, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[107, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[108, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[109, "inferno.ones"]], "rescale() (in module inferno)": [[110, "inferno.rescale"]], "simple_exponential_smoothing() (in module inferno)": [[111, "inferno.simple_exponential_smoothing"]], "manytomany (class in inferno.typing)": [[112, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[113, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[114, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[115, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[116, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[117, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[118, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[119, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[120, "inferno.uniform"]], "zeros() (in module inferno)": [[121, "inferno.zeros"]], "inferno.learn": [[124, "module-inferno.learn"]], "inferno.learn.functional": [[125, "module-inferno.learn.functional"]], "inferno.neural": [[126, "module-inferno.neural"]], "inferno.neural.functional": [[127, "module-inferno.neural.functional"]]}})