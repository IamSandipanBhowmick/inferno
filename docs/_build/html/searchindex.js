Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "simple_exponential_smoothing", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 42, 91, 125, 129, 130], "provid": [0, 5, 8, 9, 10, 27, 105], "two": [0, 3, 6, 7, 8, 9, 34, 35, 128, 130], "main": 0, "wai": [0, 2, 10], "interact": [0, 12], "through": [0, 3, 34, 35, 43, 44, 45, 73, 74, 132], "its": [0, 2, 5, 6, 7, 10, 11, 22, 34, 40, 60, 61, 130, 132], "interfac": 0, "The": [0, 2, 3, 6, 7, 11, 12, 22, 23, 35, 37, 42, 48, 58, 59, 60, 61, 63, 64, 66, 68, 80, 84, 90, 91, 93, 96, 101, 102, 103, 127, 128, 130], "latter": [0, 42, 128, 130], "can": [0, 2, 3, 5, 6, 8, 10, 11, 21, 24, 25, 26, 32, 39, 75, 93, 94, 96, 98, 99, 103, 129, 130], "distinguish": 0, "have": [0, 3, 7, 22, 25, 26, 35, 42, 43, 44, 66, 68, 90, 91, 101, 102], "modul": [0, 6, 7, 8, 11, 12, 22, 23, 33, 34, 40, 42, 46, 47, 48, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96, 98, 99, 103, 108, 110, 112, 114, 125], "name": [0, 5, 6, 7, 10, 22, 24, 33, 42, 47, 78, 80, 82, 84], "which": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 32, 33, 34, 36, 37, 39, 40, 41, 42, 47, 48, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 105, 115, 127, 128, 129, 130, 132], "end": [0, 2, 16, 19, 21, 24, 28, 29, 32, 35, 36, 37, 38, 39, 41, 65, 66, 67, 68, 78, 88, 89, 95, 101, 102, 106, 127, 128, 129, 132], "In": [0, 2, 7, 40, 48, 91, 129, 132], "gener": [0, 2, 3, 6, 11, 22, 32, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 55, 56, 57, 60, 61, 62, 63, 64, 71, 72, 78, 86, 115, 125, 128, 130], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 78, 82, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 127, 128, 129, 130, 132], "great": 0, "get": [0, 22, 40, 60, 61], "off": [0, 78], "ground": [0, 23], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 10], "tensor": [0, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 115, 116], "shape": [0, 6, 13, 15, 32, 36, 37, 38, 39, 41, 46, 49, 50, 51, 74, 75, 86, 104, 115, 116], "compat": [0, 6, 10], "automat": [0, 10, 23, 55, 56, 57], "reduct": 0, "batch": [0, 23, 24, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 73, 74, 75, 82, 91], "axi": 0, "done": [0, 55, 56, 57], "you": [0, 10], "meanwhil": [0, 3], "more": [0, 3, 24, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 48, 49, 55, 56, 57, 98, 99, 125, 128], "control": [0, 5, 11, 39, 49, 70, 72, 127, 130], "over": [0, 2, 7, 23, 24, 32, 35, 39, 43, 44, 45, 75, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 127, 128, 129, 130, 132], "flow": 0, "logic": [0, 7, 66, 68, 71, 72, 91], "allow": [0, 40, 60, 61, 65, 67, 88, 91, 95, 128], "greater": [0, 26, 62], "custom": [0, 24, 32, 39, 75], "base": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 125], "class": [0, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114], "extend": [0, 10, 86, 115], "implement": [0, 2, 7, 10, 22, 26, 32, 34, 46, 50, 55, 57, 70, 71, 72, 91, 92, 125, 127, 128, 129], "subclass": [0, 5, 8, 11, 22, 26, 34, 35, 43, 44, 45, 46, 50, 92], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 27, 32, 34, 35, 36, 37, 42, 43, 44, 45, 51, 55, 57, 60, 66, 68, 69, 70, 82, 91, 94, 129, 130], "from": [0, 2, 6, 7, 8, 10, 11, 13, 15, 17, 22, 23, 24, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 60, 61, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 101, 102, 104, 115, 116, 130, 132], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 5, 6, 7, 8, 10, 11, 21, 22, 24, 25, 26, 32, 34, 35, 39, 40, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 93, 94, 96, 98, 99, 103, 115, 127, 128, 129, 130, 132], "certain": 0, "case": [0, 2, 11, 19, 21, 24, 28, 29, 32, 36, 37, 38, 39, 41, 65, 66, 67, 68, 78, 87, 88, 95, 101, 102, 127, 132], "mai": [0, 2, 6, 9, 10, 24, 35, 42], "faster": [0, 40, 48], "less": [0, 26, 60, 61], "type": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "check": [0, 6, 66, 68], "need": [0, 10, 40, 42, 60, 61], "paramet": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 115, 116, 127, 128, 130], "remain": [0, 32, 38, 39, 41, 46, 55, 56, 57, 71, 72, 77, 78, 89, 128], "same": [0, 2, 5, 7, 10, 11, 32, 35, 39, 42, 75, 88, 89, 90, 91, 95, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114], "multipl": [0, 2, 3, 35, 39, 42, 56, 72, 91, 127], "call": [0, 7, 8, 10, 11, 12, 22, 33, 34, 35, 43, 44, 45, 47, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 93, 94, 96, 98, 99, 103, 129, 130], "pre": [0, 24, 34, 35, 43, 44, 45, 127], "comput": [0, 2, 6, 23, 34, 35, 40, 43, 44, 45, 48, 105], "initi": [0, 22, 35, 43, 44, 45, 46, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 95, 97, 100, 101, 102], "unlik": [0, 11, 12], "artifici": 0, "neuron": [0, 23, 32, 34, 38, 39, 41, 42, 49, 55, 56, 57, 69, 70, 71, 72, 75, 76, 77, 78, 79, 127, 132], "typic": [0, 10, 56, 128, 130], "found": [0, 10], "ann": 0, "snn": 0, "ar": [0, 2, 5, 6, 7, 22, 23, 24, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 71, 72, 78, 80, 82, 84, 91, 92, 93, 105, 125, 127, 128, 129, 130], "fundament": 0, "state": [0, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 65, 66, 67, 68, 71, 72, 88, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 103, 106], "biolog": [0, 2, 3, 129], "electr": [0, 128, 129, 130, 132], "potenti": [0, 2, 3, 24, 29, 31, 32, 38, 39, 41, 46, 49, 55, 56, 57, 69, 70, 71, 72, 78, 127, 128, 129, 130, 132], "differ": [0, 7, 23, 24, 32, 36, 37, 39, 41, 49, 55, 57, 65, 67, 69, 70, 72, 82, 88, 91, 95, 128, 129, 130], "between": [0, 7, 9, 17, 18, 19, 20, 34, 36, 37, 40, 42, 48, 60, 61, 62, 63, 64, 88, 89, 90, 91, 92, 95, 97, 101, 102, 127, 130], "interior": 0, "exterior": 0, "cell": [0, 32, 39, 41, 49, 69, 70, 128, 129, 130], "drive": 0, "forc": 0, "behind": [0, 2], "action": [0, 2, 3, 32, 38, 39, 41, 46, 49, 55, 56, 57, 71, 72, 78, 128, 129, 130, 132], "simplifi": [0, 132], "model": [0, 2, 3, 21, 25, 26, 28, 29, 30, 31, 42, 128], "when": [0, 2, 5, 7, 8, 10, 11, 12, 23, 24, 32, 33, 34, 35, 39, 42, 43, 44, 45, 47, 55, 56, 57, 71, 72, 75, 82, 88, 91, 93, 94, 95, 96, 98, 99, 103, 127, 128, 129], "": [0, 2, 6, 8, 10, 11, 12, 16, 17, 18, 19, 20, 22, 40, 48, 49, 55, 57, 60, 61, 62, 63, 64, 66, 68, 70, 89, 91, 94, 100, 101, 102, 103, 106, 128, 129], "import": [0, 2, 10], "treat": [0, 2, 24, 36, 37, 82], "variabl": [0, 2, 10], "separ": [0, 35, 40, 48], "each": [0, 2, 6, 7, 8, 23, 36, 37, 40, 48, 91, 128, 129, 130, 132], "sampl": [0, 7, 9, 17, 18, 19, 20, 23, 40, 48, 60, 61, 63, 64, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 115], "present": [0, 6, 7, 23, 24, 25, 26, 32, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 91, 128], "dure": [0, 3, 32, 38, 39, 41, 46, 78], "fix": [0, 3, 32, 38, 39, 41, 49, 130], "hyperparamet": [0, 2, 125], "do": [0, 73, 74], "duplic": 0, "instead": [0, 2, 129], "broadcast": [0, 34, 37, 55, 56, 57, 58, 59], "some": [0, 2, 7, 9, 42, 66, 68, 89], "includ": [0, 7, 9, 10, 24, 27, 32, 34, 35, 39, 42, 43, 44, 45, 48, 63, 64, 74, 75, 91, 98, 99, 125], "adapt": [0, 3, 32, 39, 55, 56, 57, 58, 59, 65, 66, 67, 68, 75, 125], "behavior": [0, 5, 23, 24, 32, 39, 40, 42, 60, 61, 75, 125, 128, 129], "input": [0, 2, 6, 8, 13, 14, 15, 22, 23, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 55, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127, 128, 129, 130, 132], "A": [0, 2, 11, 24, 32, 39, 75], "common": [0, 2, 36, 37, 46, 50, 51], "exampl": [0, 11, 58, 59, 130], "an": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 32, 33, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 72, 74, 75, 78, 82, 88, 90, 92, 95, 103, 107, 108, 109, 110, 111, 112, 128, 129, 130, 132], "threshold": [0, 32, 39, 56, 57, 59, 71, 72, 125, 129, 130], "where": [0, 2, 6, 7, 11, 21, 23, 24, 25, 26, 29, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 78, 82, 89, 91, 127, 128, 129, 130, 132], "defin": [0, 2, 5, 25, 26, 129], "minimum": [0, 6, 25, 26, 40, 60, 61, 105], "membran": [0, 3, 32, 38, 39, 41, 46, 49, 55, 56, 57, 69, 70, 71, 72, 75, 76, 79, 128, 129, 130], "spike": [0, 2, 23, 24, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 59, 60, 61, 62, 63, 64, 71, 72, 78, 80, 82, 83, 84, 85, 125, 129, 130, 132], "These": [0, 23, 37, 128, 129], "should": [0, 6, 7, 8, 10, 11, 12, 22, 23, 24, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 55, 56, 57, 60, 61, 75, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "share": [0, 6], "across": [0, 32, 39, 41, 43, 44, 45, 49, 69, 70, 128, 129, 130], "all": [0, 2, 22, 42, 43, 45, 47, 60, 61, 62, 63, 64, 65, 66, 87, 88, 91, 94, 100, 101, 105, 129], "contribut": [0, 2, 101, 102], "portion": 0, "updat": [0, 2, 7, 8, 11, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 55, 56, 57, 65, 66, 67, 68, 71, 72, 75, 127], "also": [0, 3, 6, 7, 24, 32, 34, 35, 39, 43, 44, 45, 62, 66, 68, 75, 129, 130], "appli": [0, 3, 6, 11, 12, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 44, 45, 47, 55, 56, 57, 58, 59, 91, 98, 99, 127, 128, 129, 130, 132], "weight": [0, 11, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 43, 44, 45, 52, 53, 54, 125], "bias": [0, 34, 35, 43, 44, 45, 52, 53], "handl": [0, 10], "either": [0, 2, 7, 8, 23, 52, 57, 82, 128], "reduc": [0, 2, 23, 24, 32, 39, 55, 56, 57, 75, 91, 92, 93, 94, 96, 98, 99, 103], "output": [0, 8, 12, 13, 15, 16, 23, 34, 35, 40, 42, 43, 44, 45, 48, 60, 61, 62, 63, 64, 66, 68, 71, 72, 86, 90, 94, 96, 98, 99, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127], "along": [0, 11, 35, 47, 55, 56, 57, 74, 87, 91, 105], "dimens": [0, 6, 7, 23, 24, 32, 34, 35, 39, 40, 43, 44, 45, 47, 48, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 87, 91, 105], "former": [0, 42, 128], "effici": 0, "make": [0, 6], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 5, 125], "perform": [0, 2, 8, 11, 16, 23, 33, 35, 47, 65, 66, 67, 68, 91, 92, 106], "But": 0, "might": 0, "necessari": 0, "hand": [0, 91], "detail": [0, 24, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 49, 55, 56, 57, 125], "inform": [0, 8, 46, 98, 99, 128], "process": [0, 22, 24, 40, 60, 61], "arxiv": [0, 128], "1909": 0, "02549": 0, "becaus": [0, 7], "unit": [0, 7, 56, 88, 89, 90, 91, 95, 97, 101, 102, 132], "relev": 0, "match": [0, 2, 6, 43, 44, 45, 65, 66, 67, 68, 88, 90, 95, 101, 102], "theoret": 0, "continu": 0, "descript": [0, 125], "specifi": [0, 6, 7, 8, 13, 15, 22, 23, 25, 47, 50, 86, 87, 93, 96, 103, 104, 115, 116, 127], "length": [0, 2, 7, 9, 17, 18, 19, 20, 24, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 69, 70, 71, 72, 78, 88, 89, 90, 91, 92, 95, 97, 101, 102, 127, 128, 129, 130, 132], "given": [0, 10, 21, 22, 23, 24, 25, 48, 50, 63, 64, 71, 72, 91, 92, 94, 100, 125, 128, 129, 132], "millisecond": [0, 24, 32, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 77, 88, 91, 95, 101, 102], "On": 0, "step": [0, 3, 7, 16, 23, 24, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 88, 89, 90, 91, 92, 95, 97, 101, 102, 106, 127, 128, 129, 130, 132], "amount": [0, 9, 23, 32, 35, 39, 55, 56, 127], "ha": [0, 5, 7, 10, 21, 22, 25, 26, 32, 34, 35, 39, 43, 44, 45, 75, 78, 80, 82, 84, 91, 103, 130, 132], "elaps": 0, "subtract": 0, "inclus": [0, 33], "bound": [0, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 57, 82, 125], "zero": [0, 35, 43, 44, 45, 87, 88, 89, 91, 95, 97, 101, 102], "equal": [0, 2, 60, 61], "consid": [0, 2, 16, 65, 66, 67, 68, 88, 90, 91, 95, 101, 102, 106, 129], "out": [0, 35, 36, 37, 82, 127], "therefor": [0, 6, 7, 91], "evenli": 0, "divis": 0, "simualt": [0, 32, 35, 36, 37, 39, 41, 43, 44, 45, 49], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 7, 18, 32, 92], "integ": [0, 3, 6, 7], "phenomenon": 2, "rate": [2, 23, 24, 26, 27, 40, 48, 57, 60, 61, 63, 64, 127, 128, 129, 130], "quantiti": 2, "decreas": [2, 128], "proport": [2, 23, 127, 128, 129], "current": [2, 3, 6, 7, 16, 22, 24, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 49, 50, 55, 58, 65, 66, 67, 68, 69, 70, 71, 72, 76, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 106, 125, 127, 129, 130], "valu": [2, 6, 7, 8, 10, 11, 14, 15, 16, 17, 23, 24, 25, 26, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 62, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 95, 97, 101, 102, 105, 106, 115, 128, 129, 130, 132], "It": [2, 7, 42, 130], "describ": [2, 125], "differenti": 2, "equat": 2, "tau": [2, 17, 24, 65, 66, 67, 68, 88, 89, 95, 101, 102], "frac": [2, 17, 18, 23, 32, 35, 39, 41, 49, 55, 60, 61, 65, 66, 67, 68, 70, 89, 127, 128, 129, 130], "dn": 2, "dt": [2, 7, 24, 32, 34, 35, 38, 39, 41, 43, 44, 45, 46, 49, 50, 88, 91, 95, 101, 102, 127, 128, 129, 130], "n": [2, 40, 43, 44, 45, 58, 59, 60, 61], "solut": [2, 127, 128, 129], "t": [2, 16, 17, 18, 19, 20, 23, 24, 32, 36, 37, 38, 39, 40, 41, 48, 49, 55, 56, 57, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 78, 88, 89, 95, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 127, 128, 129, 130, 132], "n_0": [2, 7, 23, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 82, 91], "e": [2, 5, 10, 14, 26, 27, 48, 62, 63, 64, 130], "0": [2, 7, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 55, 56, 57, 73, 74, 78, 87, 88, 89, 90, 95, 97, 101, 102, 116, 127, 130, 132], "oft": 2, "neural": [2, 42], "network": [2, 42], "simul": [2, 3, 23, 24, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 55, 56, 57, 69, 70, 71, 72, 88, 91, 95, 101, 102, 128, 129, 130, 132], "involv": 2, "discret": [2, 7, 88, 91, 95, 101, 102, 130, 132], "timestep": [2, 32], "those": [2, 5, 32, 34, 35, 43, 44, 45], "thei": [2, 5, 62], "often": [2, 127, 130], "appear": 2, "form": [2, 8, 10], "exp": [2, 17, 23, 24, 32, 39, 41, 56, 65, 66, 67, 68, 69, 88, 89, 95, 101, 102, 127, 128, 129, 130], "left": [2, 17, 23, 32, 35, 39, 41, 45, 49, 55, 57, 65, 66, 67, 68, 69, 70, 72, 89, 91, 127, 128, 129, 130], "right": [2, 17, 23, 32, 35, 39, 41, 45, 49, 55, 57, 65, 66, 67, 68, 69, 70, 72, 89, 91, 127, 128, 129, 130], "underli": [2, 7, 35, 89, 91, 93, 94, 96, 98, 99, 103, 129, 130], "wa": [2, 8, 9, 21, 22, 25, 32, 39, 41, 49, 55, 56, 57], "solv": 2, "analyt": 2, "approxim": [2, 55, 57, 62, 70, 128, 130], "via": [2, 5], "euler": [2, 55, 57, 70], "method": [2, 5, 7, 10, 22, 24, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 55, 57, 60, 61, 62, 70, 80, 82, 84, 91, 92], "both": 2, "repres": [2, 5, 6, 34, 37, 46, 50, 74, 78, 130], "select": [2, 7, 19, 20, 50, 82, 91, 93, 96], "term": [2, 57, 127, 129], "long": [2, 127], "live": 2, "correspond": [2, 10, 25, 32, 38, 39, 41, 42, 46, 49, 55, 56, 57, 71, 72, 78], "under": [2, 7, 127, 130], "relat": [2, 91, 125, 130], "ne": 2, "k": [2, 23, 55, 56, 57, 58, 59, 66, 68, 101, 102, 108, 110, 112, 114], "That": [2, 127], "after": [2, 7, 8, 9, 11, 21, 22, 25, 28, 29, 30, 31, 32, 35, 36, 37, 39, 41, 43, 44, 45, 49, 50, 52, 53, 54, 55, 56, 57, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96, 98, 99, 103, 105, 128, 129, 130], "repeat": 2, "applic": [2, 88, 89, 90, 95, 97, 101, 102], "1": [2, 7, 16, 21, 23, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 57, 58, 59, 60, 61, 62, 78, 87, 89, 104, 106, 125, 127, 128, 130, 132], "start": [2, 130], "To": [2, 12, 13, 15, 40, 60, 61, 86, 104, 115, 116, 128, 129, 130], "outsid": [2, 91], "notion": 2, "life": 2, "we": [2, 10], "ln": 2, "b": [2, 16, 23, 34, 35, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 82, 103], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 56], "sometim": 2, "lambda": [2, 23], "context": [2, 128], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 7, 88, 89, 90, 91, 92, 95, 97, 101, 102], "activ": [2, 6], "formal": 2, "sum": [2, 23, 24, 32, 39, 75], "previou": [2, 7, 17, 18, 20, 23, 36, 37, 82, 92, 97], "occur": [2, 11, 12, 23, 24, 33, 36, 37, 42, 47, 82, 128, 129, 130, 132], "howev": 2, "purpos": [2, 101, 102], "comparison": 2, "grow": 2, "complex": [2, 14, 15, 16, 47, 65, 66, 67, 68, 87, 88, 95, 101, 102, 106], "quadrat": [2, 49, 70, 125], "respect": [2, 24, 35, 43, 44, 45, 52, 94], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 22, 23, 66, 68, 129], "than": [2, 11, 22, 23, 26, 60, 61, 62, 66, 68, 129, 130], "everi": [2, 6, 7, 40, 60, 61], "prior": [2, 7, 9, 11, 12, 17, 18, 19, 20, 32, 38, 39, 41, 46, 65, 66, 78, 82, 88, 89, 90, 91, 92, 95, 97, 101, 102], "leav": [2, 129], "sort": [2, 6], "simplest": 2, "dx": 2, "x": [2, 14, 21, 24, 28, 29, 43, 44, 45, 65, 66, 67, 68, 88, 89, 95, 101, 102, 106, 132], "sum_f": 2, "f": [2, 24, 32, 35, 38, 39, 40, 41, 48, 60, 61, 62, 65, 66, 67, 68, 78, 88, 95, 101, 102], "amplitud": [2, 21, 25, 26, 27, 28, 29, 30, 31, 65, 66, 67, 68, 88, 95, 101, 102], "construct": [2, 8, 13, 15, 36, 37, 50, 51, 86, 93, 94, 96, 98, 99, 103, 104, 115, 116], "evalu": [2, 8, 11, 32, 39], "otherwis": [2, 10, 19, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 65, 66, 67, 68, 78, 88, 93, 95, 96, 101, 102], "interpret": 2, "follow": [2, 3, 7, 8, 48, 63, 64, 82, 89, 91, 127, 129], "whenev": 2, "add": [2, 10, 11, 22, 24, 65, 66, 68, 88, 101], "four": [2, 7, 8, 24], "variant": [2, 36, 37, 125], "discuss": 2, "below": [2, 128, 130], "featur": 2, "beyond": 2, "just": 2, "being": [2, 10, 23, 27, 32, 35, 36, 37, 39, 40, 41, 48, 49, 60, 61, 62, 63, 64, 74, 93, 94, 96, 98, 99, 103, 127], "previous": [2, 11, 12, 33, 47, 91], "come": 2, "fact": 2, "factor": [2, 16, 89, 106, 130], "x_": [2, 16, 24, 65, 66, 67, 68, 88, 89, 95, 101, 102, 106, 127], "begin": [2, 16, 19, 21, 24, 28, 29, 32, 35, 36, 37, 38, 39, 41, 65, 66, 67, 68, 78, 88, 89, 95, 101, 102, 106, 127, 128, 129, 132], "x_t": [2, 65, 66, 67, 68, 88, 95, 101, 102], "lvert": [2, 65, 67, 88, 95], "f_": [2, 24, 32, 38, 39, 41, 65, 66, 67, 68, 78, 88, 95, 101, 102, 127], "rvert": [2, 65, 67, 88, 95], "leq": [2, 65, 67, 88, 95], "epsilon": [2, 65, 67, 87, 88, 95], "text": [2, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 88, 95, 101, 102, 127, 128, 129, 130, 132], "here": [2, 11, 12, 125], "target": [2, 7, 10, 65, 67, 88, 93, 94, 95, 96, 98, 99, 103], "permiss": 2, "error": [2, 10], "For": [2, 9, 11, 24, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 49, 55, 56, 57, 58, 59, 88, 89, 95, 101, 102, 103], "set": [2, 6, 7, 8, 13, 15, 32, 35, 39, 40, 43, 44, 48, 55, 56, 57, 60, 61, 65, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 97, 101, 102, 104, 115, 116, 127, 129, 130], "unspecifi": [2, 6], "test": [2, 6, 66, 68, 88, 90, 95, 101, 102], "wherea": 2, "chang": [2, 5, 10, 24, 34, 35, 43, 44, 45, 73, 74, 89, 127, 128, 132], "addit": [2, 22, 35, 39, 40, 43, 44, 45, 60, 61, 66, 68, 72, 128, 129], "replac": [2, 36, 37, 42, 82], "modifi": [2, 6, 8, 13, 15, 21, 25, 26, 86, 93, 94, 96, 98, 99, 103, 104, 115, 116], "onli": [2, 5, 6, 8, 10, 11, 12, 33, 35, 36, 47, 91, 93], "most": [2, 7, 9, 17, 18, 19, 20, 24, 34, 35, 40, 43, 44, 45, 60, 61, 88, 89, 90, 91, 92, 95, 97, 101, 102, 127, 128], "recent": [2, 7, 9, 17, 18, 19, 20, 24, 34, 35, 43, 44, 45, 88, 89, 90, 91, 92, 95, 97, 101, 102, 127], "event": [2, 90], "chosen": 2, "depend": [2, 8, 21, 24, 25, 28, 29, 30, 31, 32, 34, 35, 42, 43, 44, 45, 56, 57, 59, 73, 74, 96, 125, 129], "desir": [2, 47, 87], "properti": [2, 6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 26, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 91, 94, 95, 101, 102, 104, 115, 116, 129], "formul": 2, "abov": [2, 128, 130], "ani": [2, 3, 5, 7, 8, 10, 11, 12, 34, 35, 37, 43, 44, 45, 52, 53, 91, 92, 94, 96, 98, 99, 129, 130, 132], "exactli": 2, "toler": [2, 7, 65, 66, 67, 68, 82, 88, 91, 95], "meet": [2, 7], "criterion": [2, 90, 101, 102], "compon": [2, 66, 68, 128, 129], "ad": [2, 6, 7, 22, 24, 35, 40, 52, 53, 54, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91], "sf": [2, 66, 68, 101, 102], "hold": 2, "align": [2, 16, 32, 35, 39, 89, 106, 127, 128, 129], "neq": [2, 24, 132], "int_": 2, "infti": [2, 32, 39, 59, 128, 129, 130], "theta": [2, 21, 28, 29, 32, 39, 71, 72, 127, 128, 129, 130], "neg": [2, 6], "argument": [2, 6, 7, 8, 9, 11, 12, 22, 23, 27, 34, 35, 42, 43, 44, 45, 91, 94, 98, 99], "posit": [2, 6, 7, 42], "geq": [2, 21, 28, 29, 71, 72], "deriv": [2, 80, 82, 84, 130], "d": [2, 7, 82, 91, 128, 129], "And": [2, 35, 127], "integr": [2, 32, 38, 39, 41, 46, 49, 50, 66, 68, 69, 70, 125, 132], "kind": 3, "absolut": [3, 32, 38, 39, 41, 49, 55, 56, 57, 65, 67, 69, 70, 71, 72, 78, 88, 95], "arp": [3, 32, 38, 39, 41, 78], "rel": [3, 9, 17, 18, 19, 20, 88, 89, 90, 92, 95, 97, 101, 102], "rrp": 3, "cannot": [3, 6, 7, 10, 21, 25, 73, 74, 128], "presynapt": [3, 24, 32, 36, 37, 38, 39, 41, 49, 58, 69, 70, 71, 72, 127, 128, 129, 132], "doe": [3, 6, 42, 80, 84, 132], "affect": [3, 66, 68, 125], "depolar": 3, "repolar": 3, "hyperpolar": 3, "mean": [3, 24, 32, 39, 75, 93, 94, 96, 98, 99, 103], "while": [3, 32, 38, 39, 41, 49, 71, 72], "difficult": 3, "fire": [3, 32, 38, 39, 41, 49, 59, 125, 128], "imposs": 3, "time": [3, 7, 9, 16, 17, 18, 19, 20, 23, 24, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 125, 128, 129, 130, 132], "voltag": [3, 32, 38, 39, 41, 46, 49, 55, 56, 57, 59, 69, 70, 71, 72, 79, 125, 129, 130], "reset": [3, 7, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 57, 71, 72, 91, 128, 129, 130], "determin": [3, 13, 15, 35, 43, 44, 45, 63, 86, 88, 95, 104, 115, 116], "strongli": 3, "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "map": [5, 42, 91, 93, 96, 98, 99], "unpack": [5, 93], "function": [5, 7, 8, 9, 10, 11, 12, 14, 24, 27, 32, 36, 37, 39, 50, 55, 56, 57, 66, 68, 71, 72, 75, 82, 86, 90, 91, 94, 98, 99, 101, 102, 115, 127, 132], "conjunct": 5, "attr": [5, 103], "librari": [5, 7], "wrap": 5, "_asadict_": 5, "dict": [5, 6, 8, 10, 11, 42, 94], "str": [5, 6, 7, 8, 10, 11, 22, 33, 42, 46, 47, 94, 103], "field": [5, 129, 130], "converet": 5, "dictionari": [5, 6, 10, 42], "flatten": 5, "nest": [5, 103], "object": [5, 8, 9, 10, 12, 22, 42, 51, 54, 73, 75, 76, 77, 79, 81, 82, 85], "own": 5, "If": [5, 7, 8, 11, 22, 23, 25, 26, 32, 34, 35, 39, 40, 41, 43, 44, 45, 49, 52, 55, 56, 57, 60, 61, 75, 93, 96], "conflict": [5, 42], "one": [5, 8, 24, 32, 39, 44, 45, 75, 93, 109, 110, 111, 112, 113, 114, 127, 128], "preserv": [5, 32, 39, 91], "overridden": [5, 22], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "packag": 5, "attribut": [5, 6, 7, 23, 33, 47, 74, 75, 78, 82, 103, 130], "were": [5, 22, 23, 24], "regist": [5, 6, 7, 8, 10, 11, 12, 22, 33, 34, 35, 43, 44, 47, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 93, 94, 96, 98, 99, 103], "constraint": [6, 7, 73, 74, 91], "tupl": [6, 13, 15, 16, 22, 23, 24, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 71, 72, 74, 75, 86, 87, 93, 98, 99, 104, 105, 115, 116], "int": [6, 7, 13, 14, 15, 16, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 61, 63, 64, 65, 66, 67, 68, 73, 74, 75, 86, 87, 88, 95, 101, 102, 104, 105, 106, 115, 116], "support": [6, 35, 36, 37, 43, 44, 45, 50, 51], "dimension": [6, 35], "constrain": [6, 7, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "buffer": [6, 7, 10, 73, 82], "dim": [6, 46, 47, 50, 51, 73, 74, 87, 105], "size": [6, 7, 13, 15, 23, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 73, 74, 82, 86, 104, 115, 116], "rais": [6, 7, 8, 10, 14, 21, 22, 25, 26, 34, 46, 50, 92, 128], "valueerror": [6, 7, 26], "must": [6, 7, 8, 10, 22, 25, 26, 34, 35, 37, 43, 44, 45, 46, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 96, 101, 102], "number": [6, 7, 14, 23, 34, 35, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 74, 82, 86, 91, 107, 108, 109, 110, 111, 112, 115], "element": [6, 7, 23, 35, 43, 44, 45, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 87, 88, 90, 95, 101, 102], "runtimeerror": [6, 7, 8, 21, 25], "2": [6, 35, 39, 125, 130], "first": [6, 36, 37, 58, 59, 60, 62, 63, 129], "second": [6, 129], "assign": [6, 10, 23, 24, 25, 26, 32, 39, 45, 75], "invalid": [6, 10], "reconstrain": 6, "bool": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 52, 53, 54, 60, 61, 65, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 115, 116], "torch": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 115, 116], "classmethod": [6, 36, 37, 50], "compatible_": 6, "compatible_lik": 6, "like": [6, 10, 13, 15, 24, 32, 34, 35, 39, 43, 44, 45, 50, 56, 75, 86, 104, 115, 116, 125], "none": [6, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 47, 48, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116], "option": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 67, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 115, 116], "default": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 115, 116], "insuffici": 6, "contain": [6, 16, 42, 71, 72], "nonposit": 6, "compatibl": 6, "compatible_like_": 6, "against": 6, "result": [6, 7, 23, 34, 35, 88, 89, 90, 91, 95, 97, 98, 99, 101, 102], "low": 6, "high": 6, "increas": [6, 32, 39, 49, 55, 56, 70, 128, 130], "order": [6, 47, 87, 91, 127], "constraints_repr": 6, "string": [6, 10, 33, 47], "represent": 6, "underscor": 6, "deregister_constrain": [6, 7], "deregist": [6, 8, 22], "fulli": [6, 10, 33, 47], "qualifi": [6, 10, 33, 47], "mindim": 6, "requir": [6, 9, 13, 15, 21, 22, 24, 25, 26, 35, 52, 53, 54, 66, 68, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 104, 115, 116], "static": 6, "mindims_": 6, "edit": 6, "exist": [6, 10, 22, 23, 32, 42, 91], "reshap": [6, 34, 35, 43, 44, 45], "accordingli": 6, "remov": [6, 11], "new": [6, 7, 23, 24, 25, 26, 32, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 88, 91, 95, 101, 102], "had": 6, "extern": [6, 132], "longer": 6, "incompat": [6, 7], "register_constrain": [6, 7], "attributeerror": [6, 7, 10], "step_tim": [7, 17, 18, 19, 20, 24, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 69, 70, 71, 72, 88, 89, 90, 91, 92, 95, 97, 100, 101, 102, 130], "float": [7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 87, 88, 89, 90, 91, 92, 95, 97, 101, 102, 105, 106], "history_len": [7, 88, 89, 90, 91, 92, 95, 97, 100, 101, 102], "dimensionalmodul": [7, 46, 73, 74, 76, 77, 78, 79], "keep": [7, 24, 32, 39, 75], "track": 7, "store": [7, 10, 22, 23, 24, 45, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "nonneg": [7, 60, 61, 62, 63, 64], "unconstrain": 7, "impli": [7, 128], "freed": 7, "other": [7, 10, 11, 23, 33, 47, 93, 96, 98, 99, 103, 129], "self": [7, 91], "hlen": [7, 91], "offset": [7, 34, 35, 43, 44, 45], "latest_first": 7, "true": [7, 8, 11, 12, 22, 23, 32, 33, 38, 39, 40, 41, 47, 48, 49, 60, 61, 93, 94, 96, 98, 99, 103], "retriev": [7, 22, 82, 91], "record": [7, 91, 93, 94, 96, 100, 103], "window": 7, "index": [7, 34, 35, 43, 44, 45, 91], "tick": 7, "back": [7, 129], "zeroth": 7, "fals": [7, 11, 12, 22, 23, 24, 33, 35, 36, 37, 40, 43, 44, 45, 47, 48, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 91, 93, 96, 98, 99, 103], "observ": [7, 9, 17, 18, 19, 20, 24, 36, 37, 65, 66, 67, 68, 82, 88, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 103], "hsize": 7, "slice": [7, 40, 48, 61, 64], "latest": [7, 16, 65, 66, 67, 68, 95, 102, 106], "By": [7, 11], "correct": 7, "configur": 7, "normal": [7, 11, 23, 33, 105, 132], "circumst": 7, "pushto": 7, "insert": 7, "befor": [7, 8, 10, 22, 33, 35, 45, 47, 82, 91, 92, 93, 94, 96, 98, 99, 103, 105, 128, 130], "been": [7, 91], "sinc": [7, 11, 40, 60, 61, 90], "last": [7, 32, 34, 35, 38, 39, 41, 43, 44, 45, 46, 55, 56, 57, 78, 90, 91, 132], "data": [7, 9, 13, 15, 17, 18, 19, 20, 22, 24, 34, 35, 43, 44, 45, 75, 76, 79, 86, 87, 88, 89, 90, 91, 92, 95, 97, 101, 102, 104, 105, 115, 116], "advanc": 7, "push": [7, 91, 100], "uniniti": [7, 13], "final": 7, "interpol": [7, 17, 18, 19, 20, 36, 37, 82, 88, 89, 90, 91, 92, 95, 97, 101, 102], "1e": [7, 87, 91], "07": [7, 91, 128], "maximum": [7, 23, 24, 25, 26, 35, 36, 37, 40, 43, 44, 45, 48, 50, 51, 62, 82, 91, 105], "onsid": 7, "7": [7, 91], "cdot": [7, 23, 35, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 82, 91, 127], "ldot": [7, 23, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 91], "enforc": [7, 42, 91], "gather": [7, 23, 91], "take": [7, 11, 42, 62, 80, 84, 93, 96, 107, 108, 109, 110, 111, 112, 113, 114, 127], "nearest": [7, 19, 24, 36, 37, 95, 102], "produc": 7, "scalar": [7, 13, 15, 86, 104, 115, 116], "within": [7, 10], "without": [7, 22, 26, 27, 66, 68, 128, 129, 130], "ever": 7, "attempt": [7, 32, 39, 75], "regardless": [7, 12], "pass": [7, 8, 11, 12, 21, 22, 24, 25, 26, 32, 34, 35, 39, 42, 43, 44, 45, 75, 91, 93, 94, 98, 99, 132], "overwritten": 7, "exact": [7, 90], "manual": [7, 73, 74], "increment": 7, "specif": [7, 10, 130], "prehook": [8, 12, 93, 94, 99, 103], "callabl": [8, 9, 11, 12, 24, 27, 32, 39, 75, 91, 94, 96, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114], "posthook": [8, 94, 96, 98, 103], "prehook_kwarg": [8, 94], "posthook_kwarg": [8, 94], "train_upd": [8, 12, 33, 47, 93, 94, 96, 98, 99, 103], "eval_upd": [8, 12, 33, 47, 93, 94, 96, 98, 99, 103], "forward": [8, 11, 12, 22, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 91, 93, 94, 96, 98, 99, 100, 103], "itself": [8, 11, 12, 34, 35, 43, 44, 45], "nn": [8, 10, 11, 12, 33, 47], "register_forward_hook": [8, 94, 98], "manag": [8, 22, 71, 72, 73, 74, 82], "removablehandl": 8, "keyword": [8, 9, 11, 22, 27, 34, 35, 42, 43, 44, 45, 94, 98, 99], "register_forward_pre_hook": [8, 94, 99], "run": [8, 11, 12, 32, 33, 34, 36, 37, 38, 39, 41, 42, 46, 47, 49, 50], "train": [8, 11, 12, 22, 32, 33, 39, 40, 42, 47, 48, 60, 61, 62, 63, 64, 93, 94, 96, 98, 99, 103, 125], "mode": [8, 11, 12, 32, 33, 36, 37, 39, 46, 47, 93, 94, 96, 98, 99, 103], "eval": [8, 12, 22, 33, 47, 93, 94, 96, 98, 99, 103], "signatur": [8, 21, 25, 26, 36, 37, 50], "arg": [8, 9, 10, 11, 27, 50, 51, 94, 100, 107, 108, 109, 110, 111, 112, 113, 114], "Or": 8, "with_kwarg": [8, 98, 99], "kwarg": [8, 9, 10, 11, 22, 24, 27, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 91, 94, 100, 107, 108, 109, 110, 111, 112, 113, 114], "see": [8, 86, 94, 98, 99, 115, 129], "further": 8, "least": 8, "typeerror": [8, 10, 25], "instanc": [8, 10, 103], "alreadi": [8, 24], "on_ev": 8, "on_train": 8, "three": 8, "init": [8, 65, 66, 67, 68], "pytorch": [8, 10, 24, 32, 39, 75], "warn": 8, "runtimewarn": 8, "ignor": [8, 12], "registr": [8, 22], "protocol": [9, 27, 51, 107, 108, 109, 110, 111, 112, 113, 114], "prev_data": [9, 17, 18, 19, 20, 88, 89, 90, 92, 95, 97, 101, 102], "next_data": [9, 17, 18, 19, 20, 88, 89, 90, 92, 95, 97, 101, 102], "subsequ": [9, 17, 18, 19, 20, 37, 88, 89, 90, 92, 95, 97, 101, 102], "sample_at": [9, 17, 18, 19, 20, 88, 89, 90, 92, 95, 97, 101, 102], "step_data": [9, 17, 18, 19, 20, 88, 89, 90, 92, 95, 97, 101, 102], "measur": [9, 91], "interp_previ": 9, "interp_nearest": [9, 91], "interp_linear": 9, "interp_exp_decai": 9, "partial": [9, 27, 35, 36, 37, 43, 44, 45, 50], "fill": [9, 15, 27, 86, 88, 89, 90, 92, 95, 97, 101, 102, 104, 115, 116], "extens": 10, "so": [10, 89, 132], "extra": [10, 46], "similar": [10, 24, 32, 39, 66, 68, 75], "regular": [10, 11], "g": [10, 26, 27], "enabl": 10, "simpl": [10, 58, 59, 106], "export": 10, "__init__": 10, "made": [10, 91], "parent": 10, "child": 10, "constructor": [10, 35, 36, 37, 43, 44, 45, 50, 51, 52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "get_extra": 10, "throw": 10, "similarli": 10, "get_submodul": 10, "look": 10, "referenc": 10, "refer": [10, 24, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 49, 55, 56, 57, 125, 127], "path": 10, "termin": 10, "resolv": 10, "someth": 10, "get_extra_st": 10, "state_dict": [10, 22], "set_extra_st": 10, "your": 10, "build": [10, 42], "note": [10, 132], "picklabl": 10, "work": [10, 93, 96, 125], "serial": 10, "backward": 10, "guarante": [10, 42], "break": 10, "pickl": 10, "register_extra": 10, "manner": [10, 92], "register_buff": 10, "except": [10, 11, 12, 33, 47, 66, 68, 129], "limit": [10, 24, 32, 36, 37, 39, 75, 82], "access": 10, "load_state_dict": 10, "hook": [11, 12, 22, 33, 47, 94, 98, 99, 103], "inner_train_upd": 11, "inner_eval_upd": 11, "as_prehook": [11, 12, 33, 47, 103], "prepend": [11, 12, 24, 33, 47, 93, 96, 98, 99, 103], "always_cal": [11, 12, 33, 47], "statehook": [11, 33, 47], "act": [11, 12], "inner": [11, 35, 43, 44, 45], "associ": [11, 22, 24, 40, 48], "trigger": [11, 12, 128, 129], "layer": [11, 22, 24], "__call__": [11, 12], "even": [11, 12, 33, 47, 103], "whether": 11, "alter": [11, 35, 43, 44, 91], "add_inn": 11, "innerhook": 11, "condition": 11, "on_eval_inn": 11, "on_train_inn": 11, "remove_inn": 11, "singl": [12, 42, 91, 93, 96], "dtype": [13, 15, 86, 90, 101, 102, 104, 115, 116], "layout": [13, 15, 22, 24, 86, 104, 115, 116], "devic": [13, 15, 86, 104, 115, 116], "requires_grad": [13, 15, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 104, 115, 116], "overrid": [13, 15, 23, 86, 104, 115, 116], "gradient": [13, 15, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 104, 115, 116], "ndarrai": 14, "agnost": 14, "exponenti": [14, 16, 17, 24, 32, 39, 40, 41, 49, 55, 56, 57, 60, 61, 65, 66, 67, 68, 69, 70, 88, 89, 95, 101, 102, 106, 125, 128], "y": [14, 43, 44, 45, 129], "numpi": 14, "ob": [16, 88, 89, 90, 92, 95, 97, 101, 102, 106], "level": [16, 106], "trend": 16, "alpha": [16, 89, 106], "beta": 16, "holt": 16, "linear": [16, 32, 43, 44, 45, 55, 56, 57, 58, 59, 69, 89, 125, 130], "smooth": [16, 89, 106], "s_0": [16, 89, 106], "x_0": [16, 89, 106], "b_0": 16, "x_1": 16, "s_": [16, 89, 106], "s_t": [16, 89, 106], "b_": 16, "b_t": 16, "revis": [16, 106], "time_const": [17, 38, 41, 49, 55, 56, 69, 70, 88, 95, 101, 102], "decai": [17, 23, 24, 32, 39, 41, 49, 55, 56, 57, 65, 66, 67, 68, 69, 70, 88, 95, 101, 102, 128, 129], "d_": [17, 18, 19, 20, 127], "constant": [17, 24, 32, 39, 41, 49, 55, 56, 57, 69, 70, 88, 89, 95, 101, 102, 127, 128, 129, 130], "linearlli": 18, "wmin": [21, 25, 26], "wmax": [21, 25, 26], "weightdepend": [21, 25], "hard": [21, 24, 28, 29, 125], "lower": [21, 24, 25, 26, 28, 30, 33, 57, 127, 128], "w_": [21, 25, 35, 127], "min": [21, 25, 28, 30, 33, 105, 127], "upper": [21, 25, 26, 29, 31, 33, 127], "max": [21, 24, 25, 29, 31, 32, 33, 39, 57, 75, 105, 127, 128], "a_": [21, 24, 25, 28, 29, 30, 31, 127], "w": [21, 24, 25, 28, 29, 30, 31, 35, 43, 44, 45, 127], "eta_": [21, 24, 25, 28, 29, 30, 31, 127], "exclud": [21, 22, 23, 25, 28, 29, 30, 31, 34, 35, 43, 44, 45, 46, 50, 51, 74], "updatebound": [21, 24, 25, 26], "abc": [22, 26, 34, 46, 50, 92, 100], "interdepend": 22, "attach": 22, "detach": 22, "monitor": [22, 24, 93, 96, 98, 99, 103, 128], "_register_state_dict_hook": 22, "add_monitor": [22, 24], "trainabl": [22, 24], "identifi": 22, "successfulli": [22, 24], "abstract": [22, 26, 34, 46, 50, 92, 100], "notimplementederror": [22, 26, 34, 46, 50, 92], "add_train": 22, "clear": [22, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 91, 94, 100], "submodul": [22, 42], "delet": [22, 34, 35, 43, 44, 45], "well": [22, 25, 53, 125], "del_monitor": 22, "dentifi": 22, "del_train": 22, "get_monitor": 22, "yield": [22, 40, 48, 61, 64], "captur": 22, "num_class": 23, "classifi": 23, "per": [23, 35, 82], "intern": [23, 45, 74], "calcul": [23, 24, 92, 129], "learn": [23, 24, 26, 27, 32, 34, 35, 39, 43, 44, 45], "multipli": [23, 66, 68, 129], "them": [23, 78, 93, 94, 96, 98, 99, 103, 125], "b_k": [23, 55, 57, 128], "group": [23, 32, 34, 36, 37, 38, 39, 41, 42, 46, 49, 50, 51, 55, 56, 57, 74], "total": [23, 128, 129, 130, 132], "possibl": [23, 91], "decay_r": 23, "scale": [23, 40, 47, 48, 63, 64, 66, 68, 87, 101, 102], "logit": 23, "label": 23, "infer": 23, "truth": 23, "predict": 23, "averag": [23, 55, 56, 57, 89], "nclass": 23, "ndim": 23, "l_1": 23, "raw": 23, "recalcul": 23, "lr_post": 24, "lr_pre": 24, "tc_post": 24, "tc_pre": 24, "delai": [24, 34, 35, 36, 37, 43, 44, 45, 50, 51, 52, 82, 125], "interp_toler": 24, "trace_mod": 24, "liter": [24, 36, 37], "cumul": [24, 88, 101], "wd_lower": 24, "wd_upper": 24, "batch_reduct": [24, 32, 39, 75], "layerwiseupdat": 24, "plastic": [24, 125], "delta": [24, 32, 36, 37, 39, 40, 41, 48, 49, 55, 56, 57, 60, 61, 62, 65, 66, 67, 68, 69, 70, 88, 89, 95, 101, 102, 125, 127, 128, 129, 130], "bigl": 24, "post": [24, 34, 35, 43, 44, 45, 127], "bigr": 24, "trace": [24, 65, 66, 67, 68, 88, 95, 101, 102, 125], "vari": 24, "qquad": 24, "m": [24, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 64, 69, 70, 71, 72, 77, 78, 82, 128, 129, 130, 132], "postsynapt": [24, 32, 34, 38, 39, 41, 46, 55, 56, 57, 78, 127, 128], "ltp": [24, 26, 127], "ltd": [24, 26, 127], "tau_": [24, 127], "assum": [24, 32, 34, 35, 39, 43, 44, 45, 75, 91], "co": [24, 36, 37, 82], "origin": [24, 32, 39, 75, 91], "visit": [24, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 49, 55, 56, 57, 58, 59], "soft": [24, 25, 30, 31, 125], "zoo": [24, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 49, 55, 56, 57, 58, 59], "spike_post": 24, "spike_pr": 24, "trace_post": 24, "trace_pr": 24, "fail": [24, 91], "lrpost": 24, "lrpre": 24, "depress": [24, 28, 30, 127, 128], "minpow": 25, "maxpow": 25, "expon": [25, 30, 31], "mu_": [25, 30, 31, 127], "power": [25, 30, 31, 127], "effect": [25, 26, 35, 43, 44, 128, 130], "magnitud": [26, 127, 128], "hasmax": 26, "hasmin": 26, "power_upper_bound": 27, "power_lower_bound": 27, "hard_upper_bound": 27, "hard_lower_bound": 27, "v_": [28, 29, 30, 31, 32, 39, 41, 49, 55, 57, 69, 70, 71, 72, 128, 129, 130], "v": [28, 29, 30, 31], "rest_v": [32, 38, 39, 41, 49, 55, 57, 69, 70, 72], "reset_v": [32, 38, 41, 49, 71], "thresh_eq_v": [32, 39], "refrac_t": [32, 38, 39, 41, 49, 71, 72, 78], "tc_membran": [32, 39], "tc_adapt": [32, 39], "spike_adapt_incr": [32, 39], "resist": [32, 38, 39, 41, 49, 69, 70, 129], "batch_siz": [32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 49, 50, 51, 73, 74], "adaptationmixin": [32, 39], "voltagemixin": [32, 38, 39, 41, 49], "spikerefractorymixin": [32, 38, 39, 41, 49], "leaki": [32, 38, 39, 41, 125], "dynam": [32, 36, 37, 38, 39, 41, 46, 49, 50, 69, 70, 71, 72, 128, 129, 130], "v_m": [32, 39, 41, 49, 55, 57, 69, 70, 71, 72, 128, 129, 130], "rest": [32, 36, 37, 38, 39, 41, 42, 46, 49, 50, 55, 57, 69, 70, 72, 128, 129, 130], "r_mi": [32, 39, 41, 49, 69, 70, 129, 130], "tau_m": [32, 39, 41, 49, 69, 70, 129, 130], "theta_": [32, 39, 57, 59, 128, 129, 130], "sum_k": [32, 39, 128, 129], "theta_k": [32, 39, 56, 57, 59, 128, 129], "tau_k": [32, 39, 55, 56, 65, 66, 67, 68, 128, 129], "leftarrow": [32, 39, 41, 49, 55, 56, 57, 71, 72, 128, 129, 130], "a_k": [32, 39, 55, 56, 57, 128, 129], "equilibrium": [32, 39, 41, 49, 55, 57, 59, 69, 70, 72, 128, 129, 130], "mv": [32, 39, 41, 49, 55, 56, 57, 59, 69, 70, 71, 72, 79, 128, 129, 130], "refractori": [32, 38, 39, 40, 41, 46, 49, 55, 56, 57, 60, 61, 63, 64, 69, 70, 71, 72, 77, 78], "period": [32, 38, 39, 40, 41, 46, 49, 55, 56, 57, 60, 61, 63, 64, 69, 70, 71, 72, 77, 78], "r_m": [32, 39, 41, 49, 69, 70, 129], "omega": [32, 39, 41, 49, 69, 70, 129], "keep_adapt": [32, 39], "refrac_lock": [32, 38, 39, 41, 49], "na": [32, 38, 39, 41, 49, 55, 58, 69, 70, 71, 72, 76, 80, 81, 83, 128, 129, 130, 132], "setter": [32, 39, 45, 75, 80, 84], "additon": [32, 39, 75], "lead": [32, 39, 75], "unreduc": [32, 39, 75], "bsize": [32, 34, 35, 38, 39, 41, 43, 44, 45, 46, 73, 74], "refrac": [32, 38, 39, 40, 41, 46, 55, 56, 57, 60, 61, 71, 72, 77, 78], "t_": [32, 38, 39, 41, 78, 127], "millivolt": [32, 38, 39, 41, 46, 79], "rang": [33, 91], "synaps": [34, 35, 36, 37, 42, 43, 44, 45, 51, 80, 81, 82, 83, 84, 85], "bia": [34, 35, 43, 44, 45, 52, 53], "learnabl": [34, 35, 43, 44, 45, 52, 53, 54], "binshap": [34, 35, 43, 44, 45], "boutshap": [34, 35, 43, 44, 45], "clearabl": [34, 35, 43, 44, 45], "delayedbi": [34, 35, 43, 44, 45], "maxmimum": [34, 35, 43, 44, 45], "valid": [34, 35, 43, 44, 45], "compos": [34, 42], "py": [34, 35, 43, 44, 45], "meth": [34, 35, 43, 44, 45], "inshap": [34, 35, 43, 44, 45], "insiz": [34, 35, 43, 44, 45], "cach": [34, 35, 43, 44, 45], "refresh": [34, 35, 43, 44, 45], "like_input": [34, 35, 43, 44, 45], "syncurr": [34, 35, 43, 44, 45], "synspik": [34, 35, 43, 44, 45], "like_synapt": [34, 35, 43, 44, 45], "outshap": [34, 35, 43, 44, 45], "outsiz": [34, 35, 43, 44, 45], "postsyn_recept": [34, 35, 43, 44, 45], "l": 34, "presyn_recept": [34, 35, 43, 44, 45], "selector": [34, 35, 36, 37, 43, 44, 45, 50, 82], "synapt": [34, 35, 36, 37, 43, 44, 45, 50, 80, 81, 82, 83, 84], "height": 35, "width": 35, "channel": 35, "filter": [35, 42], "kernel": 35, "stride": 35, "pad": 35, "dilat": 35, "synapseconstructor": [35, 36, 37, 43, 44, 45, 50], "weight_init": [35, 43, 44, 45], "onetoon": [35, 43, 44, 45, 66, 68, 71, 72, 90, 91, 101, 102], "bias_init": [35, 43, 44, 45], "delay_init": [35, 43, 44, 45], "weightbiasdelaymixin": [35, 43, 44, 45], "connect": [35, 42, 43, 44, 45, 50, 51, 52, 53, 54, 127], "convolut": 35, "spatial": 35, "plane": 35, "expect": [35, 40, 42, 43, 44, 45, 48, 60, 61, 62, 63, 64, 93, 96], "c": 35, "h": 35, "kh": 35, "kw": 35, "delay_": [35, 43, 44, 52], "creat": [35, 43, 44, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85], "unless": [35, 43, 44], "later": [35, 43, 44], "uniform": [35, 43, 44, 45], "random": [35, 43, 44, 45, 86, 115], "interv": [35, 40, 43, 44, 45, 48, 60, 61, 63, 64], "rand": [35, 43, 44, 45, 115], "still": [35, 40, 60, 61, 65, 67, 88, 95], "anoth": [35, 82], "h_": 35, "formula": 35, "document": 35, "lfloor": 35, "p_h": 35, "d_h": 35, "k_h": 35, "s_h": 35, "rfloor": 35, "p_w": 35, "d_w": 35, "k_w": 35, "s_w": 35, "ph": 35, "pw": 35, "side": [35, 129], "dh": 35, "dw": [35, 127], "sh": 35, "sw": 35, "oper": [35, 92], "reli": 35, "upon": [35, 130], "expand": 35, "consequenti": 35, "memori": [35, 40, 48], "spike_q": [36, 37], "interp_mod": [36, 37], "interp_tol": [36, 37], "current_overbound": [36, 37], "spike_overbound": [36, 37], "delayedspikecurrentaccessormixin": [36, 37], "spikederivedcurrentmixin": 36, "memoryless": [36, 37], "respond": [36, 37, 128], "instantan": [36, 37], "q": [36, 37, 132], "charg": [36, 37, 132], "carri": [36, 37, 132], "pc": [36, 37, 132], "cuba": [36, 37, 125], "partialconstructor": [36, 37, 50], "spikecurrentmixin": 37, "passthrough": [37, 97], "i_x": [37, 132], "inject": 37, "thresh_v": [38, 41, 49, 71, 72, 130], "glif": [38, 39, 125, 128, 129], "alia": 38, "lif": [38, 125], "reset_v_add": 39, "reset_v_mul": 39, "m_v": [39, 72, 129], "b_v": [39, 72, 129], "unitless": [39, 49, 65, 66, 67, 68, 70, 72, 130], "frequenc": [40, 48, 60, 61, 62, 63, 64, 128], "compens": [40, 60, 61, 63, 64], "generatormixin": [40, 48], "refractorystepmixin": 40, "encod": [40, 48], "poisson": [40, 48, 60, 61, 62, 63, 64], "distribut": [40, 48, 60, 61, 62, 63, 64], "randomli": [40, 60, 61], "point": [40, 60, 61, 130], "hz": [40, 48, 60, 61, 62, 63, 64], "inter": [40, 60, 61, 82], "pseudorandom": [40, 48, 60, 61, 63, 64, 86, 115], "distanc": [40, 60, 61], "th": [40, 55, 56, 57, 60, 61], "onlin": [40, 48], "iter": [40, 48, 61, 64], "intens": [40, 48], "hertz": [40, 48], "pin": 40, "connection_kwarg": 42, "neuron_kwarg": 42, "sequenti": 42, "block": 42, "kei": 42, "written": 42, "avoid": 42, "alwai": [42, 82], "uniqu": 42, "architectur": 42, "explicitli": 42, "go": [42, 130], "unexpect": 42, "in_shap": 43, "out_shap": 43, "interc": [43, 45], "prod": [43, 44, 45], "m_0": 43, "unbatch": [43, 44, 45], "transform": [43, 44, 45], "odot": [44, 45], "inputoutput": [44, 45], "i_n": 45, "lineardens": 45, "creation": 45, "mask": [45, 66, 68, 69, 70], "shapemixin": [46, 50], "extra_repr": 46, "p": [47, 87], "norm": [47, 87], "stepmixin": 48, "replic": [48, 63, 64, 74], "bindsnet": [48, 63, 64], "parameter": [48, 63, 64, 127], "invers": [48, 63, 64, 129, 132], "crit_v": [49, 70], "attract": [49, 70, 130], "crit": [49, 70, 130], "natur": [49, 70], "strength": [49, 55, 70], "drift": [49, 70], "toward": [49, 70, 129, 130], "awai": [49, 70, 130], "historymodul": [50, 80, 81, 82, 83, 84, 85, 100], "nanoamper": [50, 76, 81, 82, 84], "current_at": [50, 82], "spike_at": [50, 82], "boolean": 50, "newli": 51, "weightbiasmixin": 52, "mixin": [52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "inherit": [52, 53, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "weight_": [52, 53, 54], "bias_": [52, 53], "weightmixin": 53, "voltage_coupl": 55, "spike_incr": [55, 56], "w_k": [55, 58, 128], "coupl": [55, 128], "mu": [55, 128, 129], "maintain": [55, 56, 57, 71, 72], "doesn": [55, 56, 57], "alpha_k": 56, "adapt_r": 57, "rebound_r": 57, "adapt_reset_lb": 57, "permit": [57, 66, 68], "adap": [58, 59], "i_": [58, 128], "optioon": [60, 61], "nonsens": [60, 61], "1000": [60, 61], "inhomogen": 62, "_description_": 62, "clamp": 62, "exce": 62, "never": [63, 64], "condit": [65, 66, 67, 68, 130], "count": [65, 67, 74, 88, 95], "incorpor": [65, 66, 67, 68, 88, 89, 90, 91, 92, 95, 97, 100, 101, 102, 129, 130], "matchfn": [66, 68], "trace_cumul": 66, "predic": [66, 68], "datatyp": [66, 68, 90, 101, 102], "trace_nearest": 68, "masked_input": [69, 70], "held": [71, 72], "v_slope": 72, "v_intercept": 72, "batchmixin": 74, "concept": 74, "_shape": 74, "bshape": 74, "adaptation_": 75, "adapt_batchreduc": 75, "current_": [76, 80, 81, 82, 83], "refrac_": [77, 78], "refractorymixin": 78, "driven": 79, "voltage_": 79, "currentmixin": [80, 83], "therefrom": [80, 84], "_to_spik": [80, 82], "noth": [80, 84], "primit": [81, 83, 85], "primitive_curr": 82, "primitive_spik": 82, "current_interp": 82, "spike_interp": 82, "current_overv": 82, "spike_overv": 82, "_to_curr": [82, 84], "spike_": [82, 83, 84, 85], "_current_interp": 82, "_spike_interp": 82, "_current_ob_v": 82, "_spike_ob_v": 82, "_primitive_curr": 82, "_primitive_spik": 82, "_interp_tol": 82, "spikemixin": [83, 84], "randn": 86, "12": [87, 128], "demonin": 87, "foldingreduc": [88, 89, 90, 95, 97, 101, 102], "fold": [88, 89, 90, 92, 95, 97, 101, 102], "entir": [88, 89, 90, 95, 97, 101, 102], "empti": [88, 89, 90, 92, 95, 97, 101, 102], "move": 89, "decoupl": 89, "infin": 90, "fold_fn": 91, "math": 91, "map_fn": 91, "keepshap": 91, "reiniti": [91, 94, 100], "storag": 91, "equival": [91, 129], "histor": 91, "dump": [91, 94, 100], "tempor": 91, "oldest": 91, "peek": [91, 94, 100], "view": [91, 94, 100], "fall": 91, "foldreduc": 92, "manytoon": 93, "receiv": 93, "sent": 93, "directli": 97, "content": [98, 99], "multiplicit": [101, 102], "dot": 103, "notat": 103, "turn": 103, "ti": 103, "resmin": 105, "resmax": 105, "srcmin": 105, "srcmax": 105, "unchang": 105, "amin": 105, "amax": 105, "arbitrari": [107, 108, 109, 110, 111, 112], "uniformli": 115, "depth": 125, "academ": 125, "plan": 125, "futur": 125, "alif": 125, "3": [125, 130, 132], "4": [125, 128], "5": [125, 130], "nonlinear": 125, "qif": 125, "izhikevich": 125, "eif": 125, "adex": 125, "conduct": [125, 129], "coba": 125, "stdp": 125, "anti": 125, "hebbian": 125, "astdp": 125, "mstdp": 125, "elig": 125, "mstdpet": 125, "resum": 125, "tbd": 126, "categori": 127, "With": [127, 128, 129, 130], "w_t": 127, "dirac": [127, 132], "pp": 127, "adjust": 127, "neighbor": 127, "flip": 127, "sign": 127, "postsynpat": 127, "place": 127, "penal": 127, "penalti": 127, "law": 127, "heavisid": 127, "impos": 128, "regard": 128, "steadi": 128, "give": 128, "degre": 128, "freedom": 128, "modif": 128, "dampen": 128, "amplifi": 128, "addition": 128, "said": 128, "goe": 128, "dw_k": 128, "approx": [128, 130], "subthreshold": 128, "doi": [128, 129, 130], "10": [128, 129, 130], "1017": [128, 129, 130], "cbo9781107447615": [128, 129, 130], "chapter": [128, 129, 130], "6": [128, 130], "1152": 128, "jn": 128, "00686": 128, "2005": 128, "Be": [128, 129, 130], "1038": [128, 129], "s41467": [128, 129], "017": [128, 129], "02717": [128, 129], "allen": [128, 129], "institut": [128, 129], "whitepap": [128, 129], "rebound": 128, "1162": 128, "neco": 128, "2008": 128, "680": 128, "neco_a_00196": 128, "1803": 128, "09574": 128, "021": 128, "24427": 128, "8": 128, "00234": 128, "2019": 128, "dv_m": [129, 130], "basic": 129, "rule": 129, "slope": [129, 130], "show": [129, 130], "v_r": [129, 130], "60": [129, 130], "plot": [129, 130], "c_m": 129, "g_l": 129, "capacit": 129, "nf": 129, "phrase": 129, "leak": 129, "expos": 129, "isbn": [129, 130, 132], "9780262548083": [129, 130, 132], "020": 129, "17236": 129, "fraction": 129, "intercept": 129, "r": 129, "convent": 129, "conting": 129, "reach": 129, "critic": 130, "tendenc": 130, "stabl": 130, "unstabl": 130, "repel": 130, "v_c": 130, "50": 130, "complet": 130, "delta_t": 130, "v_t": 130, "rapid": 130, "upsw": 130, "rightarrow": 130, "approach": 130, "sharp": 130, "easi": 130, "confus": 130, "unrel": 130, "denot": 130, "thresh": 130, "usual": 130, "simuat": 130, "illustr": 130, "section": [130, 132], "depeend": 130, "4249": 130, "scholarpedia": 130, "8427": 130, "1523": 130, "jneurosci": 130, "23": 130, "37": 130, "11628": 130, "2003": 130, "t_f": 132, "veri": 132, "role": 132, "deliv": 132, "dramat": 132}, "objects": {"inferno": [[5, 0, 1, "", "Configuration"], [6, 0, 1, "", "DimensionalModule"], [7, 0, 1, "", "HistoryModule"], [8, 0, 1, "", "Hook"], [9, 0, 1, "", "Interpolation"], [10, 0, 1, "", "Module"], [11, 0, 1, "", "RemoteHook"], [12, 0, 1, "", "StateHook"], [13, 3, 1, "", "empty"], [14, 3, 1, "", "exp"], [15, 3, 1, "", "full"], [16, 3, 1, "", "holt_linear_smoothing"], [17, 3, 1, "", "interp_exp_decay"], [18, 3, 1, "", "interp_linear"], [19, 3, 1, "", "interp_nearest"], [20, 3, 1, "", "interp_previous"], [119, 4, 0, "-", "learn"], [121, 4, 0, "-", "neural"], [86, 3, 1, "", "normal"], [87, 3, 1, "", "normalize"], [104, 3, 1, "", "ones"], [105, 3, 1, "", "rescale"], [106, 3, 1, "", "simple_exponential_smoothing"], [115, 3, 1, "", "uniform"], [116, 3, 1, "", "zeros"]], "inferno.Configuration": [[5, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[6, 1, 1, "", "compatible"], [6, 1, 1, "", "compatible_"], [6, 1, 1, "", "compatible_like"], [6, 1, 1, "", "compatible_like_"], [6, 2, 1, "", "constraints"], [6, 2, 1, "", "constraints_repr"], [6, 1, 1, "", "deregister_constrained"], [6, 2, 1, "", "mindims"], [6, 1, 1, "", "mindims_"], [6, 1, 1, "", "reconstrain"], [6, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "dt"], [7, 1, 1, "", "history"], [7, 2, 1, "", "hlen"], [7, 2, 1, "", "hsize"], [7, 1, 1, "", "latest"], [7, 1, 1, "", "pushto"], [7, 1, 1, "", "register_constrained"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "select"], [7, 1, 1, "", "tick"], [7, 1, 1, "", "update"]], "inferno.Hook": [[8, 1, 1, "", "deregister"], [8, 2, 1, "", "on_eval"], [8, 2, 1, "", "on_train"], [8, 1, 1, "", "posthook"], [8, 1, 1, "", "prehook"], [8, 1, 1, "", "register"], [8, 2, 1, "", "registered"]], "inferno.Module": [[10, 1, 1, "", "get_extra"], [10, 1, 1, "", "get_extra_state"], [10, 1, 1, "", "register_extra"], [10, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[11, 1, 1, "", "add_inner"], [11, 1, 1, "", "innerhook"], [11, 2, 1, "", "on_eval_inner"], [11, 2, 1, "", "on_train_inner"], [11, 1, 1, "", "remove_inner"]], "inferno.StateHook": [[12, 2, 1, "", "module"], [12, 1, 1, "", "register"]], "inferno.learn": [[21, 0, 1, "", "HardWeightDependence"], [22, 0, 1, "", "LayerwiseUpdater"], [23, 0, 1, "", "MaxRateClassifier"], [24, 0, 1, "", "STDP"], [25, 0, 1, "", "SoftWeightDependence"], [26, 0, 1, "", "WeightDependence"], [120, 4, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[21, 1, 1, "", "lower"], [21, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[22, 1, 1, "", "add_monitor"], [22, 1, 1, "", "add_monitors"], [22, 1, 1, "", "add_trainable"], [22, 1, 1, "", "attach"], [22, 1, 1, "", "clear"], [22, 1, 1, "", "del_monitor"], [22, 1, 1, "", "del_monitors"], [22, 1, 1, "", "del_trainable"], [22, 1, 1, "", "detach"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_monitor"], [22, 1, 1, "", "get_monitors"], [22, 2, 1, "", "monitors"], [22, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[23, 2, 1, "", "assignments"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "infer"], [23, 1, 1, "", "learn"], [23, 2, 1, "", "nclass"], [23, 2, 1, "", "ndim"], [23, 2, 1, "", "occurances"], [23, 2, 1, "", "proportional"], [23, 2, 1, "", "proportions"], [23, 2, 1, "", "rates"], [23, 2, 1, "", "shape"]], "inferno.learn.STDP": [[24, 1, 1, "", "add_monitors"], [24, 2, 1, "", "dt"], [24, 1, 1, "", "forward"], [24, 2, 1, "", "lrpost"], [24, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[25, 1, 1, "", "lower"], [25, 2, 1, "", "maxpow"], [25, 2, 1, "", "minpow"], [25, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[26, 2, 1, "", "hasmax"], [26, 2, 1, "", "hasmin"], [26, 1, 1, "", "lower"], [26, 1, 1, "", "upper"], [26, 2, 1, "", "wmax"], [26, 2, 1, "", "wmin"]], "inferno.learn.functional": [[27, 0, 1, "", "UpdateBounding"], [28, 3, 1, "", "hard_lower_bounding"], [29, 3, 1, "", "hard_upper_bounding"], [30, 3, 1, "", "power_lower_bounding"], [31, 3, 1, "", "power_upper_bounding"]], "inferno.neural": [[32, 0, 1, "", "ALIF"], [33, 0, 1, "", "Clamping"], [34, 0, 1, "", "Connection"], [35, 0, 1, "", "Conv2D"], [36, 0, 1, "", "DeltaCurrent"], [37, 0, 1, "", "DeltaPlusCurrent"], [38, 0, 1, "", "GLIF1"], [39, 0, 1, "", "GLIF2"], [40, 0, 1, "", "HomogeneousPoissonEncoder"], [41, 0, 1, "", "LIF"], [42, 0, 1, "", "Layer"], [43, 0, 1, "", "LinearDense"], [44, 0, 1, "", "LinearDirect"], [45, 0, 1, "", "LinearLateral"], [46, 0, 1, "", "Neuron"], [47, 0, 1, "", "Normalization"], [48, 0, 1, "", "PoissonIntervalEncoder"], [49, 0, 1, "", "QIF"], [50, 0, 1, "", "Synapse"], [51, 0, 1, "", "SynapseConstructor"], [122, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[32, 2, 1, "", "adaptation"], [32, 2, 1, "", "bsize"], [32, 1, 1, "", "clear"], [32, 2, 1, "", "dt"], [32, 1, 1, "", "forward"], [32, 2, 1, "", "refrac"], [32, 2, 1, "", "spike"], [32, 2, 1, "", "voltage"]], "inferno.neural.Connection": [[34, 2, 1, "", "bias"], [34, 2, 1, "", "biased"], [34, 2, 1, "", "binshape"], [34, 2, 1, "", "boutshape"], [34, 2, 1, "", "bsize"], [34, 1, 1, "", "clear"], [34, 2, 1, "", "delay"], [34, 2, 1, "", "delayedby"], [34, 2, 1, "", "dt"], [34, 1, 1, "", "forward"], [34, 2, 1, "", "inshape"], [34, 2, 1, "", "insize"], [34, 1, 1, "", "like_input"], [34, 1, 1, "", "like_synaptic"], [34, 2, 1, "", "outshape"], [34, 2, 1, "", "outsize"], [34, 1, 1, "", "postsyn_receptive"], [34, 1, 1, "", "presyn_receptive"], [34, 2, 1, "", "selector"], [34, 2, 1, "", "synapse"], [34, 2, 1, "", "syncurrent"], [34, 2, 1, "", "synspike"], [34, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[35, 2, 1, "", "bias"], [35, 2, 1, "", "biased"], [35, 2, 1, "", "binshape"], [35, 2, 1, "", "boutshape"], [35, 2, 1, "", "bsize"], [35, 1, 1, "", "clear"], [35, 2, 1, "", "delay"], [35, 2, 1, "", "delayedby"], [35, 2, 1, "", "dt"], [35, 1, 1, "", "forward"], [35, 2, 1, "", "inshape"], [35, 2, 1, "", "insize"], [35, 1, 1, "", "like_input"], [35, 1, 1, "", "like_synaptic"], [35, 2, 1, "", "outshape"], [35, 2, 1, "", "outsize"], [35, 1, 1, "", "postsyn_receptive"], [35, 1, 1, "", "presyn_receptive"], [35, 2, 1, "", "selector"], [35, 2, 1, "", "syncurrent"], [35, 2, 1, "", "synspike"], [35, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[36, 1, 1, "", "clear"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[37, 1, 1, "", "clear"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "partialconstructor"]], "inferno.neural.GLIF1": [[38, 2, 1, "", "bsize"], [38, 1, 1, "", "clear"], [38, 2, 1, "", "dt"], [38, 1, 1, "", "forward"], [38, 2, 1, "", "refrac"], [38, 2, 1, "", "spike"], [38, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[39, 2, 1, "", "adaptation"], [39, 2, 1, "", "bsize"], [39, 1, 1, "", "clear"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"], [39, 2, 1, "", "refrac"], [39, 2, 1, "", "spike"], [39, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[40, 2, 1, "", "compensated"], [40, 1, 1, "", "forward"], [40, 2, 1, "", "frequency"], [40, 2, 1, "", "refrac"]], "inferno.neural.LIF": [[41, 2, 1, "", "bsize"], [41, 1, 1, "", "clear"], [41, 2, 1, "", "dt"], [41, 1, 1, "", "forward"], [41, 2, 1, "", "refrac"], [41, 2, 1, "", "spike"], [41, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[42, 1, 1, "", "clear"], [42, 2, 1, "", "connection"], [42, 1, 1, "", "forward"], [42, 2, 1, "", "neuron"], [42, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[43, 2, 1, "", "bias"], [43, 2, 1, "", "biased"], [43, 2, 1, "", "binshape"], [43, 2, 1, "", "boutshape"], [43, 2, 1, "", "bsize"], [43, 1, 1, "", "clear"], [43, 2, 1, "", "delay"], [43, 2, 1, "", "delayedby"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"], [43, 2, 1, "", "inshape"], [43, 2, 1, "", "insize"], [43, 1, 1, "", "like_input"], [43, 1, 1, "", "like_synaptic"], [43, 2, 1, "", "outshape"], [43, 2, 1, "", "outsize"], [43, 1, 1, "", "postsyn_receptive"], [43, 1, 1, "", "presyn_receptive"], [43, 2, 1, "", "selector"], [43, 2, 1, "", "syncurrent"], [43, 2, 1, "", "synspike"], [43, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[44, 2, 1, "", "bias"], [44, 2, 1, "", "biased"], [44, 2, 1, "", "binshape"], [44, 2, 1, "", "boutshape"], [44, 2, 1, "", "bsize"], [44, 1, 1, "", "clear"], [44, 2, 1, "", "delay"], [44, 2, 1, "", "delayedby"], [44, 2, 1, "", "dt"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "inshape"], [44, 2, 1, "", "insize"], [44, 1, 1, "", "like_input"], [44, 1, 1, "", "like_synaptic"], [44, 2, 1, "", "outshape"], [44, 2, 1, "", "outsize"], [44, 1, 1, "", "postsyn_receptive"], [44, 1, 1, "", "presyn_receptive"], [44, 2, 1, "", "selector"], [44, 2, 1, "", "syncurrent"], [44, 2, 1, "", "synspike"], [44, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[45, 2, 1, "", "bias"], [45, 2, 1, "", "biased"], [45, 2, 1, "", "binshape"], [45, 2, 1, "", "boutshape"], [45, 2, 1, "", "bsize"], [45, 1, 1, "", "clear"], [45, 2, 1, "", "delay"], [45, 2, 1, "", "delayedby"], [45, 2, 1, "", "dt"], [45, 1, 1, "", "forward"], [45, 2, 1, "", "inshape"], [45, 2, 1, "", "insize"], [45, 1, 1, "", "like_input"], [45, 1, 1, "", "like_synaptic"], [45, 2, 1, "", "outshape"], [45, 2, 1, "", "outsize"], [45, 1, 1, "", "postsyn_receptive"], [45, 1, 1, "", "presyn_receptive"], [45, 2, 1, "", "selector"], [45, 2, 1, "", "syncurrent"], [45, 2, 1, "", "synspike"], [45, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[46, 2, 1, "", "bsize"], [46, 1, 1, "", "clear"], [46, 2, 1, "", "dt"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "forward"], [46, 2, 1, "", "refrac"], [46, 2, 1, "", "spike"], [46, 2, 1, "", "voltage"]], "inferno.neural.PoissonIntervalEncoder": [[48, 1, 1, "", "forward"], [48, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[49, 1, 1, "", "clear"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"]], "inferno.neural.Synapse": [[50, 1, 1, "", "clear"], [50, 2, 1, "", "current"], [50, 1, 1, "", "current_at"], [50, 2, 1, "", "delay"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "partialconstructor"], [50, 2, 1, "", "spike"], [50, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[52, 0, 1, "", "WeightBiasDelayMixin"], [53, 0, 1, "", "WeightBiasMixin"], [54, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[52, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[53, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[54, 2, 1, "", "weight"]], "inferno.neural.functional": [[55, 3, 1, "", "adaptive_currents_linear"], [56, 3, 1, "", "adaptive_thresholds_linear_spike"], [57, 3, 1, "", "adaptive_thresholds_linear_voltage"], [58, 3, 1, "", "apply_adaptive_currents"], [59, 3, 1, "", "apply_adaptive_thresholds"], [60, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [61, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [62, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [63, 3, 1, "", "enc_poisson_interval"], [64, 3, 1, "", "enc_poisson_interval_online"], [65, 3, 1, "", "trace_cumulative"], [66, 3, 1, "", "trace_cumulative_scaled"], [67, 3, 1, "", "trace_nearest"], [68, 3, 1, "", "trace_nearest_scaled"], [69, 3, 1, "", "voltage_integration_linear"], [70, 3, 1, "", "voltage_integration_quadratic"], [71, 3, 1, "", "voltage_thresholding"], [72, 3, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[73, 0, 1, "", "BatchMixin"], [74, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[73, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[74, 2, 1, "", "bshape"], [74, 2, 1, "", "bsize"], [74, 2, 1, "", "count"], [74, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[75, 0, 1, "", "AdaptationMixin"], [76, 0, 1, "", "CurrentMixin"], [77, 0, 1, "", "RefractoryMixin"], [78, 0, 1, "", "SpikeRefractoryMixin"], [79, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[75, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[76, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[77, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[78, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[79, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[80, 0, 1, "", "CurrentDerivedSpikeMixin"], [81, 0, 1, "", "CurrentMixin"], [82, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [83, 0, 1, "", "SpikeCurrentMixin"], [84, 0, 1, "", "SpikeDerivedCurrentMixin"], [85, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[80, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[81, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[82, 1, 1, "", "current_at"], [82, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[84, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[85, 2, 1, "", "spike"]], "inferno.observe": [[88, 0, 1, "", "CumulativeTraceReducer"], [89, 0, 1, "", "EMAReducer"], [90, 0, 1, "", "EventReducer"], [91, 0, 1, "", "FoldReducer"], [92, 0, 1, "", "FoldingReducer"], [93, 0, 1, "", "InputMonitor"], [94, 0, 1, "", "Monitor"], [95, 0, 1, "", "NearestTraceReducer"], [96, 0, 1, "", "OutputMonitor"], [97, 0, 1, "", "PassthroughReducer"], [98, 0, 1, "", "PostMonitor"], [99, 0, 1, "", "PreMonitor"], [100, 0, 1, "", "Reducer"], [101, 0, 1, "", "ScaledCumulativeTraceReducer"], [102, 0, 1, "", "ScaledNearestTraceReducer"], [103, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[88, 2, 1, "", "dt"], [88, 1, 1, "", "fold"], [88, 1, 1, "", "initialize"], [88, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[89, 1, 1, "", "fold"], [89, 1, 1, "", "initialize"], [89, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[90, 1, 1, "", "fold"], [90, 1, 1, "", "initialize"], [90, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[91, 1, 1, "", "clear"], [91, 2, 1, "", "data"], [91, 2, 1, "", "dt"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "forward"], [91, 2, 1, "", "hlen"], [91, 1, 1, "", "peek"], [91, 1, 1, "", "push"], [91, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[92, 1, 1, "", "fold"], [92, 1, 1, "", "initialize"], [92, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[94, 1, 1, "", "clear"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "peek"], [94, 2, 1, "", "reducer"], [94, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[95, 2, 1, "", "dt"], [95, 1, 1, "", "fold"], [95, 1, 1, "", "initialize"], [95, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[97, 1, 1, "", "fold"], [97, 1, 1, "", "initialize"], [97, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[100, 1, 1, "", "clear"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "forward"], [100, 1, 1, "", "peek"], [100, 1, 1, "", "push"], [100, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[101, 2, 1, "", "dt"], [101, 1, 1, "", "fold"], [101, 1, 1, "", "initialize"], [101, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[102, 2, 1, "", "dt"], [102, 1, 1, "", "fold"], [102, 1, 1, "", "initialize"], [102, 1, 1, "", "interpolate"]], "inferno.typing": [[107, 0, 1, "", "ManyToMany"], [108, 0, 1, "", "ManyToManyMethod"], [109, 0, 1, "", "ManyToOne"], [110, 0, 1, "", "ManyToOneMethod"], [111, 0, 1, "", "OneToMany"], [112, 0, 1, "", "OneToManyMethod"], [113, 0, 1, "", "OneToOne"], [114, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 120, 122], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 119, 127], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 130], "decai": 2, "constant": 2, "trace": [2, 122, 127], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 131, 132], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 46, 121, 122, 125, 128, 129, 130], "system": 3, "dynam": [3, 122], "welcom": 4, "inferno": [4, 118, 119, 120, 121, 122, 123, 124], "": 4, "document": 4, "configur": 5, "dimensionalmodul": 6, "historymodul": 7, "shape": [7, 23, 34, 35, 40, 43, 44, 45, 48, 55, 56, 57, 60, 61, 62, 63, 64, 82, 91], "hook": [8, 121], "interpol": [9, 118], "modul": [10, 127], "remotehook": 11, "statehook": 12, "empti": 13, "exp": 14, "full": 15, "holt_linear_smooth": 16, "interp_exp_decai": 17, "interp_linear": 18, "interp_nearest": 19, "interp_previ": 20, "hardweightdepend": 21, "layerwiseupdat": 22, "maxrateclassifi": 23, "stdp": [24, 127], "softweightdepend": 25, "weightdepend": 26, "updatebound": 27, "hard_lower_bound": 28, "hard_upper_bound": 29, "power_lower_bound": 30, "power_upper_bound": 31, "alif": [32, 129], "clamp": 33, "connect": [34, 121], "conv2d": 35, "deltacurr": 36, "deltapluscurr": 37, "glif1": [38, 129], "glif2": [39, 129], "homogeneouspoissonencod": 40, "lif": [41, 129], "layer": 42, "lineardens": 43, "lineardirect": 44, "linearlater": 45, "normal": [47, 86, 87], "poissonintervalencod": 48, "qif": [49, 130], "synaps": [50, 121, 125, 131, 132], "synapseconstructor": 51, "weightbiasdelaymixin": 52, "weightbiasmixin": 53, "weightmixin": 54, "adaptive_currents_linear": 55, "adaptive_thresholds_linear_spik": 56, "adaptive_thresholds_linear_voltag": 57, "apply_adaptive_curr": 58, "apply_adaptive_threshold": 59, "enc_homogeneous_poisson_exp_interv": 60, "enc_homogeneous_poisson_exp_interval_onlin": 61, "enc_inhomogenous_poisson_bernoulli_approx": 62, "enc_poisson_interv": 63, "enc_poisson_interval_onlin": 64, "trace_cumul": 65, "trace_cumulative_sc": 66, "trace_nearest": 67, "trace_nearest_sc": 68, "voltage_integration_linear": 69, "voltage_integration_quadrat": 70, "voltage_threshold": 71, "voltage_thresholding_slope_intercept": 72, "batchmixin": 73, "shapemixin": 74, "adaptationmixin": 75, "currentmixin": [76, 81], "refractorymixin": 77, "spikerefractorymixin": 78, "voltagemixin": 79, "currentderivedspikemixin": 80, "delayedspikecurrentaccessormixin": 82, "spikecurrentmixin": 83, "spikederivedcurrentmixin": 84, "spikemixin": 85, "cumulativetracereduc": 88, "emareduc": 89, "eventreduc": 90, "foldreduc": 91, "foldingreduc": 92, "inputmonitor": 93, "monitor": [94, 123], "nearesttracereduc": 95, "outputmonitor": 96, "passthroughreduc": 97, "postmonitor": 98, "premonitor": 99, "reduc": [100, 123], "scaledcumulativetracereduc": 101, "scalednearesttracereduc": 102, "statemonitor": 103, "ones": 104, "rescal": 105, "simple_exponential_smooth": 106, "manytomani": 107, "manytomanymethod": 108, "manytoon": 109, "manytoonemethod": 110, "onetomani": 111, "onetomanymethod": 112, "onetoon": 113, "onetoonemethod": 114, "uniform": 115, "zero": 116, "api": 117, "refer": [117, 128, 129, 130, 132], "infrastructur": 118, "gener": [118, 129], "math": 118, "tensor": 118, "learn": [119, 120, 125, 126, 127], "compon": [119, 121, 123], "updat": 119, "spike": [119, 122, 127, 128], "depend": [119, 120, 127, 128], "plastic": [119, 127], "paramet": [119, 120], "bound": [119, 127], "classifi": 119, "neural": [121, 122], "encod": [121, 122], "type": [121, 124], "mixin": 121, "observ": 123, "callabl": 124, "model": [125, 129, 130, 131, 132], "method": [125, 126, 127], "zoo": 125, "overview": [125, 126, 127, 128], "resum": 126, "like": [126, 127], "formul": [127, 128, 129, 130, 131, 132], "delai": 127, "anti": 127, "hebbian": 127, "astdp": 127, "descript": [127, 129, 130, 132], "mstdp": 127, "elig": 127, "mstdpet": 127, "weight": 127, "soft": 127, "hard": 127, "adapt": [128, 129, 130], "current": [128, 132], "linear": [128, 129], "threshold": 128, "voltag": 128, "leaki": 129, "integr": [129, 130], "fire": [129, 130], "altern": 129, "1": 129, "2": 129, "3": 129, "glif3": 129, "4": 129, "glif4": 129, "5": 129, "glif5": 129, "nonlinear": 130, "quadrat": 130, "izhikevich": 130, "eif": 130, "adex": 130, "conduct": 131, "base": [131, 132], "coba": 131, "variant": [131, 132], "cuba": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "Configuration": [[5, "configuration"]], "DimensionalModule": [[6, "dimensionalmodule"]], "HistoryModule": [[7, "historymodule"]], "Shape": [[7, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [34, null], [34, null], [34, null], [34, null], [35, null], [35, null], [35, null], [35, null], [35, null], [35, null], [35, null], [40, null], [43, null], [43, null], [43, null], [43, null], [43, null], [43, null], [43, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [45, null], [45, null], [45, null], [45, null], [45, null], [45, null], [45, null], [48, null], [55, null], [56, null], [57, null], [60, null], [61, null], [62, null], [63, null], [64, null], [82, null], [82, null], [91, null]], "Hook": [[8, "hook"]], "Interpolation": [[9, "interpolation"], [118, "interpolation"]], "Module": [[10, "module"]], "RemoteHook": [[11, "remotehook"]], "StateHook": [[12, "statehook"]], "empty": [[13, "empty"]], "exp": [[14, "exp"]], "full": [[15, "full"]], "holt_linear_smoothing": [[16, "holt-linear-smoothing"]], "interp_exp_decay": [[17, "interp-exp-decay"]], "interp_linear": [[18, "interp-linear"]], "interp_nearest": [[19, "interp-nearest"]], "interp_previous": [[20, "interp-previous"]], "HardWeightDependence": [[21, "hardweightdependence"]], "LayerwiseUpdater": [[22, "layerwiseupdater"]], "MaxRateClassifier": [[23, "maxrateclassifier"]], "STDP": [[24, "stdp"]], "SoftWeightDependence": [[25, "softweightdependence"]], "WeightDependence": [[26, "weightdependence"]], "UpdateBounding": [[27, "updatebounding"]], "hard_lower_bounding": [[28, "hard-lower-bounding"]], "hard_upper_bounding": [[29, "hard-upper-bounding"]], "power_lower_bounding": [[30, "power-lower-bounding"]], "power_upper_bounding": [[31, "power-upper-bounding"]], "ALIF": [[32, "alif"]], "Clamping": [[33, "clamping"]], "Connection": [[34, "connection"]], "Conv2D": [[35, "conv2d"]], "DeltaCurrent": [[36, "deltacurrent"]], "DeltaPlusCurrent": [[37, "deltapluscurrent"]], "GLIF1": [[38, "glif1"]], "GLIF2": [[39, "glif2"]], "HomogeneousPoissonEncoder": [[40, "homogeneouspoissonencoder"]], "LIF": [[41, "lif"]], "Layer": [[42, "layer"]], "LinearDense": [[43, "lineardense"]], "LinearDirect": [[44, "lineardirect"]], "LinearLateral": [[45, "linearlateral"]], "Neuron": [[46, "neuron"]], "Normalization": [[47, "normalization"]], "PoissonIntervalEncoder": [[48, "poissonintervalencoder"]], "QIF": [[49, "qif"]], "Synapse": [[50, "synapse"]], "SynapseConstructor": [[51, "synapseconstructor"]], "WeightBiasDelayMixin": [[52, "weightbiasdelaymixin"]], "WeightBiasMixin": [[53, "weightbiasmixin"]], "WeightMixin": [[54, "weightmixin"]], "adaptive_currents_linear": [[55, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[56, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[57, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[58, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[59, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[60, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[61, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[62, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[63, "enc-poisson-interval"]], "enc_poisson_interval_online": [[64, "enc-poisson-interval-online"]], "trace_cumulative": [[65, "trace-cumulative"]], "trace_cumulative_scaled": [[66, "trace-cumulative-scaled"]], "trace_nearest": [[67, "trace-nearest"]], "trace_nearest_scaled": [[68, "trace-nearest-scaled"]], "voltage_integration_linear": [[69, "voltage-integration-linear"]], "voltage_integration_quadratic": [[70, "voltage-integration-quadratic"]], "voltage_thresholding": [[71, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[72, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[73, "batchmixin"]], "ShapeMixin": [[74, "shapemixin"]], "AdaptationMixin": [[75, "adaptationmixin"]], "CurrentMixin": [[76, "currentmixin"], [81, "currentmixin"]], "RefractoryMixin": [[77, "refractorymixin"]], "SpikeRefractoryMixin": [[78, "spikerefractorymixin"]], "VoltageMixin": [[79, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[80, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[82, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[83, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[84, "spikederivedcurrentmixin"]], "SpikeMixin": [[85, "spikemixin"]], "normal": [[86, "normal"]], "normalize": [[87, "normalize"]], "CumulativeTraceReducer": [[88, "cumulativetracereducer"]], "EMAReducer": [[89, "emareducer"]], "EventReducer": [[90, "eventreducer"]], "FoldReducer": [[91, "foldreducer"]], "FoldingReducer": [[92, "foldingreducer"]], "InputMonitor": [[93, "inputmonitor"]], "Monitor": [[94, "monitor"]], "NearestTraceReducer": [[95, "nearesttracereducer"]], "OutputMonitor": [[96, "outputmonitor"]], "PassthroughReducer": [[97, "passthroughreducer"]], "PostMonitor": [[98, "postmonitor"]], "PreMonitor": [[99, "premonitor"]], "Reducer": [[100, "reducer"]], "ScaledCumulativeTraceReducer": [[101, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[102, "scalednearesttracereducer"]], "StateMonitor": [[103, "statemonitor"]], "ones": [[104, "ones"]], "rescale": [[105, "rescale"]], "simple_exponential_smoothing": [[106, "simple-exponential-smoothing"]], "ManyToMany": [[107, "manytomany"]], "ManyToManyMethod": [[108, "manytomanymethod"]], "ManyToOne": [[109, "manytoone"]], "ManyToOneMethod": [[110, "manytoonemethod"]], "OneToMany": [[111, "onetomany"]], "OneToManyMethod": [[112, "onetomanymethod"]], "OneToOne": [[113, "onetoone"]], "OneToOneMethod": [[114, "onetoonemethod"]], "uniform": [[115, "uniform"]], "zeros": [[116, "zeros"]], "API Reference": [[117, "api-reference"]], "inferno": [[118, "inferno"]], "Infrastructure": [[118, "infrastructure"]], "General Math": [[118, "general-math"]], "Tensors": [[118, "tensors"]], "inferno.learn": [[119, "module-inferno.learn"]], "Components": [[119, "components"], [121, "components"], [123, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[119, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[119, "parameter-update-bounding"]], "Classifiers": [[119, "classifiers"]], "inferno.learn.functional": [[120, "module-inferno.learn.functional"]], "Parameter Dependence": [[120, "parameter-dependence"]], "inferno.neural": [[121, "module-inferno.neural"]], "Neurons": [[121, "neurons"], [125, "neurons"]], "Synapses": [[121, "synapses"], [125, "synapses"]], "Connections": [[121, "connections"]], "Encoders": [[121, "encoders"]], "Hooks": [[121, "hooks"]], "Types": [[121, "types"]], "Mixins": [[121, "mixins"]], "inferno.neural.functional": [[122, "module-inferno.neural.functional"]], "Encodings": [[122, "encodings"]], "Neuronal Dynamics": [[122, "neuronal-dynamics"]], "Spike Trace": [[122, "spike-trace"]], "inferno.observe": [[123, "inferno-observe"]], "Monitors": [[123, "monitors"]], "Reducers": [[123, "reducers"]], "inferno.typing": [[124, "inferno-typing"]], "Callable Types": [[124, "callable-types"]], "Model and Method Zoo": [[125, "model-and-method-zoo"]], "Overview": [[125, "overview"], [126, "overview"], [127, "overview"], [128, "overview"]], "Learning Methods": [[125, "learning-methods"]], "ReSuMe-Like Learning Methods": [[126, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[127, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[127, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[127, "formulation"], [127, "id1"], [127, "id2"], [127, "id3"], [127, "id5"], [128, "formulation"], [128, "id1"], [128, "id3"], [128, "id5"], [129, "formulation"], [129, "id1"], [129, "id4"], [130, "formulation"], [130, "id1"], [131, "formulation"], [132, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[127, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[127, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[127, "description"], [127, "id4"], [129, "description"], [129, "id2"], [129, "id5"], [130, "description"], [130, "id2"], [130, "id4"], [132, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[127, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[127, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[127, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[127, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[128, "neuronal-adaptation"]], "Adaptive Current, Linear": [[128, "adaptive-current-linear"]], "References": [[128, "references"], [128, "id2"], [128, "id4"], [128, "id6"], [129, "references"], [129, "id3"], [129, "id6"], [130, "references"], [130, "id3"], [130, "id5"], [132, "references"]], "Adaptive Current, Linear Spike-Dependent": [[128, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[128, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[128, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[129, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[129, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[129, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[129, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[129, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[129, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[129, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[129, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[129, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[130, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[130, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic Integrate-and-Fire)": [[130, "izhikevich-adaptive-quadratic-integrate-and-fire"]], "Exponential Integrate-and-Fire (EIF)": [[130, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[130, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[131, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[131, "delta-coba-variant"]], "Synapse Models, Current-Based": [[132, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[132, "delta-cuba-variant"]]}, "indexentries": {"configuration (class in inferno)": [[5, "inferno.Configuration"]], "_asadict_() (configuration method)": [[5, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[6, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[6, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[6, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[7, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[7, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[7, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[7, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[7, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[7, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[7, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[7, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[7, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[7, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[7, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[7, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[7, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[8, "inferno.Hook"]], "deregister() (hook method)": [[8, "inferno.Hook.deregister"]], "on_eval (hook property)": [[8, "inferno.Hook.on_eval"]], "on_train (hook property)": [[8, "inferno.Hook.on_train"]], "posthook() (hook method)": [[8, "inferno.Hook.posthook"]], "prehook() (hook method)": [[8, "inferno.Hook.prehook"]], "register() (hook method)": [[8, "inferno.Hook.register"]], "registered (hook property)": [[8, "inferno.Hook.registered"]], "interpolation (class in inferno)": [[9, "inferno.Interpolation"]], "module (class in inferno)": [[10, "inferno.Module"]], "get_extra() (module method)": [[10, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[10, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[10, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[10, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[11, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[11, "inferno.RemoteHook.add_inner"]], "innerhook() (remotehook method)": [[11, "inferno.RemoteHook.innerhook"]], "on_eval_inner (remotehook property)": [[11, "inferno.RemoteHook.on_eval_inner"]], "on_train_inner (remotehook property)": [[11, "inferno.RemoteHook.on_train_inner"]], "remove_inner() (remotehook method)": [[11, "inferno.RemoteHook.remove_inner"]], "statehook (class in inferno)": [[12, "inferno.StateHook"]], "module (statehook property)": [[12, "inferno.StateHook.module"]], "register() (statehook method)": [[12, "inferno.StateHook.register"]], "empty() (in module inferno)": [[13, "inferno.empty"]], "exp() (in module inferno)": [[14, "inferno.exp"]], "full() (in module inferno)": [[15, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[16, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[17, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[18, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[19, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[20, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[21, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[22, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[23, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[24, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[24, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[24, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[24, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[24, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[24, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[25, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[26, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[26, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[26, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[27, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[28, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[29, "inferno.learn.functional.hard_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[30, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[31, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[32, "inferno.neural.ALIF"]], "adaptation (alif property)": [[32, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[32, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[32, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[32, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[32, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[32, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[32, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[32, "inferno.neural.ALIF.voltage"]], "clamping (class in inferno.neural)": [[33, "inferno.neural.Clamping"]], "connection (class in inferno.neural)": [[34, "inferno.neural.Connection"]], "bias (connection property)": [[34, "inferno.neural.Connection.bias"]], "biased (connection property)": [[34, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[34, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[34, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[34, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[34, "inferno.neural.Connection.clear"]], "delay (connection property)": [[34, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[34, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[34, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[34, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[34, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[34, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[34, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[34, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[34, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[34, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[34, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[34, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[34, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[34, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[34, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[34, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[34, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[35, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[35, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[35, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[35, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[35, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[35, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[35, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[35, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[35, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[35, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[35, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[35, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[35, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[35, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[35, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[35, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[35, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[35, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[35, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[35, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[35, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[35, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[35, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[36, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[36, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[36, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[36, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[37, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[37, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[37, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[37, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "glif1 (class in inferno.neural)": [[38, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[38, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[38, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[38, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[38, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[38, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[38, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[38, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[39, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[39, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[39, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[39, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[39, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[39, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[39, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[39, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[39, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[40, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[40, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[40, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[40, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[40, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "lif (class in inferno.neural)": [[41, "inferno.neural.LIF"]], "bsize (lif property)": [[41, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[41, "inferno.neural.LIF.clear"]], "dt (lif property)": [[41, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[41, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[41, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[41, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[41, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[42, "inferno.neural.Layer"]], "clear() (layer method)": [[42, "inferno.neural.Layer.clear"]], "connection (layer property)": [[42, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[42, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[42, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[42, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[43, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[43, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[43, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[43, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[43, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[43, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[43, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[43, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[43, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[43, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[43, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[43, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[43, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[43, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[43, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[43, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[43, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[43, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[43, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[43, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[43, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[43, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[43, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[44, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[44, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[44, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[44, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[44, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[44, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[44, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[44, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[44, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[44, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[44, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[44, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[44, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[44, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[44, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[44, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[44, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[44, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[44, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[44, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[44, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[44, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[44, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[45, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[45, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[45, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[45, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[45, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[45, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[45, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[45, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[45, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[45, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[45, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[45, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[45, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[45, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[45, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[45, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[45, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[45, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[45, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[45, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[45, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[45, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[45, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[46, "inferno.neural.Neuron"]], "bsize (neuron property)": [[46, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[46, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[46, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[46, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[46, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[46, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[46, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[46, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[47, "inferno.neural.Normalization"]], "poissonintervalencoder (class in inferno.neural)": [[48, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[48, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[48, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[49, "inferno.neural.QIF"]], "clear() (qif method)": [[49, "inferno.neural.QIF.clear"]], "dt (qif property)": [[49, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[49, "inferno.neural.QIF.forward"]], "synapse (class in inferno.neural)": [[50, "inferno.neural.Synapse"]], "clear() (synapse method)": [[50, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[50, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[50, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[50, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[50, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[50, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[50, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[50, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[50, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[51, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[52, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[52, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[53, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[53, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[54, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[54, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[55, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[56, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[57, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[58, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[59, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[60, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[61, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[62, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[73, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[73, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[74, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[74, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[74, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[74, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[74, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[75, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[75, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[76, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[76, "inferno.neural.neurons.mixins.CurrentMixin.current"], [81, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[77, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[77, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[78, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[78, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[79, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[79, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[80, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[80, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[81, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[82, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[82, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[82, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[83, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[84, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[84, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[85, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[85, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[86, "inferno.normal"]], "normalize() (in module inferno)": [[87, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[88, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[88, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[88, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[88, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[88, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[89, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[89, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[89, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[89, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[90, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[90, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[90, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[90, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[91, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[91, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[91, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[91, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[91, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[91, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[91, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[91, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[91, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[91, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[92, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[92, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[92, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[92, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[93, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[94, "inferno.observe.Monitor"]], "clear() (monitor method)": [[94, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[94, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[94, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[94, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[94, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[95, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[95, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[95, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[95, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[95, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[96, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[97, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[97, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[97, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[97, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[98, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[99, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[100, "inferno.observe.Reducer"]], "clear() (reducer method)": [[100, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[100, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[100, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[100, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[100, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[100, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[101, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[101, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[101, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[101, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[101, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[102, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[102, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[102, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[102, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[102, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[103, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[104, "inferno.ones"]], "rescale() (in module inferno)": [[105, "inferno.rescale"]], "simple_exponential_smoothing() (in module inferno)": [[106, "inferno.simple_exponential_smoothing"]], "manytomany (class in inferno.typing)": [[107, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[108, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[109, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[110, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[111, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[112, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[113, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[114, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[115, "inferno.uniform"]], "zeros() (in module inferno)": [[116, "inferno.zeros"]], "inferno.learn": [[119, "module-inferno.learn"]], "module": [[119, "module-inferno.learn"], [120, "module-inferno.learn.functional"], [121, "module-inferno.neural"], [122, "module-inferno.neural.functional"]], "inferno.learn.functional": [[120, "module-inferno.learn.functional"]], "inferno.neural": [[121, "module-inferno.neural"]], "inferno.neural.functional": [[122, "module-inferno.neural.functional"]]}})