Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/functional", "reference/generated/inferno.ContextualHook", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Module", "reference/generated/inferno.RecordModule", "reference/generated/inferno.RecordTensor", "reference/generated/inferno.ShapedTensor", "reference/generated/inferno.StateHook", "reference/generated/inferno.astensors", "reference/generated/inferno.bounding.FullBounding", "reference/generated/inferno.bounding.HalfBounding", "reference/generated/inferno.bounding.lower_multiplicative", "reference/generated/inferno.bounding.lower_power", "reference/generated/inferno.bounding.lower_sharp", "reference/generated/inferno.bounding.multiplicative", "reference/generated/inferno.bounding.power", "reference/generated/inferno.bounding.sharp", "reference/generated/inferno.bounding.upper_multiplicative", "reference/generated/inferno.bounding.upper_power", "reference/generated/inferno.bounding.upper_sharp", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.exponential_smoothing", "reference/generated/inferno.full", "reference/generated/inferno.functional.Extrapolation", "reference/generated/inferno.functional.FullBounding", "reference/generated/inferno.functional.HalfBounding", "reference/generated/inferno.functional.Interpolation", "reference/generated/inferno.functional.bound_lower_multiplicative", "reference/generated/inferno.functional.bound_lower_power", "reference/generated/inferno.functional.bound_lower_sharp", "reference/generated/inferno.functional.bound_multiplicative", "reference/generated/inferno.functional.bound_power", "reference/generated/inferno.functional.bound_sharp", "reference/generated/inferno.functional.bound_upper_multiplicative", "reference/generated/inferno.functional.bound_upper_power", "reference/generated/inferno.functional.bound_upper_sharp", "reference/generated/inferno.functional.extrap_expdecay", "reference/generated/inferno.functional.extrap_expratedecay", "reference/generated/inferno.functional.extrap_linear_backward", "reference/generated/inferno.functional.extrap_linear_forward", "reference/generated/inferno.functional.extrap_nearest", "reference/generated/inferno.functional.extrap_neighbors", "reference/generated/inferno.functional.extrap_next", "reference/generated/inferno.functional.extrap_previous", "reference/generated/inferno.functional.interp_expdecay", "reference/generated/inferno.functional.interp_expratedecay", "reference/generated/inferno.functional.interp_linear", "reference/generated/inferno.functional.interp_nearest", "reference/generated/inferno.functional.interp_next", "reference/generated/inferno.functional.interp_previous", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interpolation.Interpolation", "reference/generated/inferno.interpolation.expdecay", "reference/generated/inferno.interpolation.expratedecay", "reference/generated/inferno.interpolation.linear", "reference/generated/inferno.interpolation.nearest", "reference/generated/inferno.interpolation.previous", "reference/generated/inferno.isi", "reference/generated/inferno.learn.CellTrainer", "reference/generated/inferno.learn.IndependentTrainer", "reference/generated/inferno.learn.MSTDPET", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Cell", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Updatable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding_constant", "reference/generated/inferno.neural.functional.voltage_thresholding_linear", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer", "reference/generated/inferno.observe.ConditionalNearestTraceReducer", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.MonitorConstructor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.trace_cumulative", "reference/generated/inferno.trace_cumulative_scaled", "reference/generated/inferno.trace_nearest", "reference/generated/inferno.trace_nearest_scaled", "reference/generated/inferno.types.ManyToMany", "reference/generated/inferno.types.ManyToManyMethod", "reference/generated/inferno.types.ManyToOne", "reference/generated/inferno.types.ManyToOneMethod", "reference/generated/inferno.types.OneToMany", "reference/generated/inferno.types.OneToManyMethod", "reference/generated/inferno.types.OneToOne", "reference/generated/inferno.types.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/functional.md", "reference/generated/inferno.ContextualHook.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RecordModule.rst", "reference/generated/inferno.RecordTensor.rst", "reference/generated/inferno.ShapedTensor.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.astensors.rst", "reference/generated/inferno.bounding.FullBounding.rst", "reference/generated/inferno.bounding.HalfBounding.rst", "reference/generated/inferno.bounding.lower_multiplicative.rst", "reference/generated/inferno.bounding.lower_power.rst", "reference/generated/inferno.bounding.lower_sharp.rst", "reference/generated/inferno.bounding.multiplicative.rst", "reference/generated/inferno.bounding.power.rst", "reference/generated/inferno.bounding.sharp.rst", "reference/generated/inferno.bounding.upper_multiplicative.rst", "reference/generated/inferno.bounding.upper_power.rst", "reference/generated/inferno.bounding.upper_sharp.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.exponential_smoothing.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.functional.Extrapolation.rst", "reference/generated/inferno.functional.FullBounding.rst", "reference/generated/inferno.functional.HalfBounding.rst", "reference/generated/inferno.functional.Interpolation.rst", "reference/generated/inferno.functional.bound_lower_multiplicative.rst", "reference/generated/inferno.functional.bound_lower_power.rst", "reference/generated/inferno.functional.bound_lower_sharp.rst", "reference/generated/inferno.functional.bound_multiplicative.rst", "reference/generated/inferno.functional.bound_power.rst", "reference/generated/inferno.functional.bound_sharp.rst", "reference/generated/inferno.functional.bound_upper_multiplicative.rst", "reference/generated/inferno.functional.bound_upper_power.rst", "reference/generated/inferno.functional.bound_upper_sharp.rst", "reference/generated/inferno.functional.extrap_expdecay.rst", "reference/generated/inferno.functional.extrap_expratedecay.rst", "reference/generated/inferno.functional.extrap_linear_backward.rst", "reference/generated/inferno.functional.extrap_linear_forward.rst", "reference/generated/inferno.functional.extrap_nearest.rst", "reference/generated/inferno.functional.extrap_neighbors.rst", "reference/generated/inferno.functional.extrap_next.rst", "reference/generated/inferno.functional.extrap_previous.rst", "reference/generated/inferno.functional.interp_expdecay.rst", "reference/generated/inferno.functional.interp_expratedecay.rst", "reference/generated/inferno.functional.interp_linear.rst", "reference/generated/inferno.functional.interp_nearest.rst", "reference/generated/inferno.functional.interp_next.rst", "reference/generated/inferno.functional.interp_previous.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interpolation.Interpolation.rst", "reference/generated/inferno.interpolation.expdecay.rst", "reference/generated/inferno.interpolation.expratedecay.rst", "reference/generated/inferno.interpolation.linear.rst", "reference/generated/inferno.interpolation.nearest.rst", "reference/generated/inferno.interpolation.previous.rst", "reference/generated/inferno.isi.rst", "reference/generated/inferno.learn.CellTrainer.rst", "reference/generated/inferno.learn.IndependentTrainer.rst", "reference/generated/inferno.learn.MSTDPET.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Cell.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Updatable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_constant.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_linear.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.ConditionalCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ConditionalNearestTraceReducer.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.MonitorConstructor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.trace_cumulative.rst", "reference/generated/inferno.trace_cumulative_scaled.rst", "reference/generated/inferno.trace_nearest.rst", "reference/generated/inferno.trace_nearest_scaled.rst", "reference/generated/inferno.types.ManyToMany.rst", "reference/generated/inferno.types.ManyToManyMethod.rst", "reference/generated/inferno.types.ManyToOne.rst", "reference/generated/inferno.types.ManyToOneMethod.rst", "reference/generated/inferno.types.OneToMany.rst", "reference/generated/inferno.types.OneToManyMethod.rst", "reference/generated/inferno.types.OneToOne.rst", "reference/generated/inferno.types.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.functional", "ContextualHook", "DimensionalModule", "Hook", "Module", "RecordModule", "RecordTensor", "ShapedTensor", "StateHook", "astensors", "FullBounding", "HalfBounding", "lower_multiplicative", "lower_power", "lower_sharp", "multiplicative", "power", "sharp", "upper_multiplicative", "upper_power", "upper_sharp", "empty", "exp", "exponential_smoothing", "full", "Extrapolation", "FullBounding", "HalfBounding", "Interpolation", "bound_lower_multiplicative", "bound_lower_power", "bound_lower_sharp", "bound_multiplicative", "bound_power", "bound_sharp", "bound_upper_multiplicative", "bound_upper_power", "bound_upper_sharp", "extrap_expdecay", "extrap_expratedecay", "extrap_linear_backward", "extrap_linear_forward", "extrap_nearest", "extrap_neighbors", "extrap_next", "extrap_previous", "interp_expdecay", "interp_expratedecay", "interp_linear", "interp_nearest", "interp_next", "interp_previous", "holt_linear_smoothing", "Interpolation", "expdecay", "expratedecay", "linear", "nearest", "previous", "isi", "CellTrainer", "IndependentTrainer", "MSTDPET", "MaxRateClassifier", "STDP", "ALIF", "AdEx", "Biclique", "Cell", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Updatable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding_constant", "voltage_thresholding_linear", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "ConditionalCumulativeTraceReducer", "ConditionalNearestTraceReducer", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "MonitorConstructor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "sqrt", "LogNormal", "Normal", "Poisson", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"unlik": [0, 11, 13], "artifici": 0, "neuron": [0, 64, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 81, 83, 84, 85, 92, 93, 101, 102, 103, 111, 112, 113, 114, 117, 118, 119, 120, 121, 178, 183], "typic": [0, 2, 9, 178, 179, 181], "found": [0, 9], "ann": 0, "snn": 0, "ar": [0, 2, 7, 10, 11, 12, 14, 65, 67, 68, 69, 71, 72, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 97, 98, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 120, 122, 124, 126, 133, 136, 137, 138, 139, 149, 152, 153, 154, 156, 158, 176, 178, 179, 180, 181], "fundament": 0, "state": [0, 3, 7, 9, 10, 11, 12, 13, 28, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 96, 97, 113, 114, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 155, 156, 157, 158], "In": [0, 2, 3, 9, 10, 11, 136, 178, 180, 183], "biolog": [0, 2, 3, 180], "electr": [0, 179, 180, 181, 183], "potenti": [0, 2, 3, 20, 21, 22, 23, 24, 25, 37, 38, 39, 40, 41, 42, 67, 69, 70, 71, 73, 79, 80, 81, 83, 84, 89, 92, 101, 102, 103, 111, 112, 113, 114, 120, 178, 179, 180, 181, 183], "differ": [0, 10, 11, 66, 67, 68, 69, 70, 71, 77, 78, 79, 81, 83, 84, 92, 101, 103, 111, 112, 114, 124, 132, 133, 136, 141, 155, 157, 179, 180, 181], "between": [0, 10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 72, 75, 77, 78, 82, 85, 91, 93, 106, 107, 108, 109, 110, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 145, 146, 178, 181], "interior": 0, "exterior": 0, "cell": [0, 65, 66, 67, 69, 70, 71, 72, 79, 81, 83, 84, 85, 92, 93, 111, 112, 178, 179, 180, 181], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 58, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 124, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 152, 153, 154, 156, 158, 178, 179, 180, 181, 183], "drive": 0, "forc": [0, 13], "behind": [0, 2], "gener": [0, 2, 3, 11, 12, 64, 70, 71, 73, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 120, 128, 152, 153, 154, 167, 176, 178, 179, 181], "action": [0, 2, 3, 70, 71, 73, 79, 80, 81, 83, 84, 89, 92, 101, 102, 103, 113, 114, 120, 179, 180, 181, 183], "thi": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 81, 82, 83, 85, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 136, 138, 139, 142, 144, 147, 154, 156, 158, 167, 178, 179, 180, 181, 183], "extend": [0, 9, 128, 167], "simplifi": [0, 183], "us": [0, 2, 3, 6, 8, 9, 11, 12, 14, 15, 16, 30, 31, 32, 33, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 92, 93, 95, 97, 101, 103, 106, 111, 112, 124, 130, 131, 133, 136, 139, 140, 152, 153, 154, 156, 158, 180, 181], "when": [0, 2, 6, 8, 9, 10, 11, 12, 13, 14, 45, 46, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 85, 86, 87, 88, 90, 93, 97, 101, 102, 103, 113, 114, 117, 124, 132, 133, 136, 138, 139, 141, 142, 147, 179, 180], "": [0, 2, 8, 9, 10, 12, 13, 28, 57, 59, 60, 61, 62, 63, 65, 67, 69, 71, 74, 79, 82, 83, 85, 90, 91, 92, 93, 96, 101, 103, 106, 107, 108, 109, 110, 112, 129, 130, 131, 133, 134, 136, 139, 144, 145, 146, 147, 149, 156, 158, 179, 180, 181], "import": [0, 2, 9, 72], "treat": [0, 67, 69, 77, 78, 124], "variabl": [0, 9, 67, 69], "separ": [0, 76, 82, 91], "each": [0, 2, 7, 8, 10, 11, 12, 65, 67, 68, 72, 77, 78, 82, 85, 91, 136, 179, 180, 181, 183], "sampl": [0, 10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 68, 82, 91, 106, 107, 109, 110, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 153, 154, 167], "present": [0, 7, 10, 11, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 91, 92, 94, 98, 99, 100, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 136, 179], "dure": [0, 3, 89, 120], "fix": [0, 3, 70, 71, 79, 80, 81, 83, 84, 92, 154, 181], "hyperparamet": [0, 2, 67, 69, 82, 91, 176], "meanwhil": [0, 3], "do": [0, 65, 115, 116, 178], "need": [0, 9, 10, 11, 12, 82, 106, 107, 136, 147, 178], "duplic": [0, 65], "instead": [0, 2, 180], "broadcast": [0, 75, 78, 101, 102, 103, 104, 105], "batch": [0, 64, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 115, 116, 117, 124, 136], "some": [0, 2, 3, 10, 12, 134, 156, 158], "paramet": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 167, 168, 179, 181], "mai": [0, 2, 3, 9, 11, 65, 67, 69, 72, 76], "includ": [0, 9, 67, 69, 70, 71, 75, 81, 83, 85, 91, 96, 109, 110, 116, 117, 136, 176], "adapt": [0, 3, 70, 71, 81, 83, 101, 102, 103, 104, 105, 117, 155, 156, 157, 158, 176], "behavior": [0, 10, 11, 67, 68, 69, 70, 71, 81, 82, 83, 106, 107, 117, 176, 179, 180], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 26, 29, 30, 31, 32, 33, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176], "input": [0, 2, 6, 7, 8, 14, 26, 27, 29, 65, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 150, 151, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 183], "A": [0, 2, 7, 10, 12, 67, 69, 70, 71, 81, 83, 117, 130, 131, 132, 141, 145, 146, 154, 155, 156, 157, 158], "common": [0, 77, 78, 89, 94, 95, 133, 138, 139, 140, 142, 147, 178], "exampl": [0, 7, 12, 72, 104, 105, 181], "an": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 17, 20, 23, 26, 34, 37, 40, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 97, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 120, 124, 132, 133, 135, 137, 141, 147, 154, 159, 160, 161, 162, 163, 164, 179, 180, 181, 183], "threshold": [0, 70, 71, 81, 83, 102, 103, 105, 113, 114, 176, 180, 181], "where": [0, 2, 10, 11, 12, 19, 22, 25, 36, 39, 42, 64, 65, 67, 68, 69, 72, 75, 76, 82, 85, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 120, 124, 134, 136, 139, 140, 178, 179, 180, 181, 183], "defin": [0, 2, 82, 91, 180], "minimum": [0, 7, 12, 15, 16, 31, 32, 82, 106, 107, 149], "membran": [0, 3, 70, 71, 73, 79, 80, 81, 83, 84, 89, 92, 101, 102, 103, 111, 112, 113, 114, 117, 118, 121, 179, 180, 181], "which": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 27, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 151, 154, 167, 178, 179, 180, 181, 183], "spike": [0, 2, 64, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 81, 82, 83, 84, 89, 91, 92, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 120, 122, 124, 125, 126, 127, 176, 180, 181, 183], "These": [0, 68, 72, 78, 179, 180], "should": [0, 6, 7, 8, 9, 10, 11, 12, 13, 30, 33, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 101, 102, 103, 106, 107, 117, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "share": [0, 65, 67], "across": [0, 11, 12, 65, 67, 70, 71, 72, 79, 81, 83, 84, 86, 87, 88, 92, 111, 112, 179, 180, 181], "all": [0, 2, 10, 12, 14, 64, 65, 66, 67, 72, 85, 86, 88, 90, 96, 97, 106, 107, 108, 109, 110, 129, 130, 132, 133, 136, 137, 139, 144, 145, 149, 155, 156, 180], "contribut": [0, 130, 131, 145, 146], "portion": 0, "updat": [0, 2, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 57, 65, 66, 67, 68, 69, 70, 71, 73, 75, 81, 83, 85, 93, 101, 102, 103, 113, 114, 117, 140, 155, 156, 157, 158, 178], "also": [0, 3, 7, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 67, 69, 70, 71, 75, 76, 81, 83, 85, 86, 87, 88, 93, 108, 117, 156, 158, 180, 181], "appli": [0, 2, 3, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 65, 66, 67, 70, 72, 74, 76, 85, 86, 87, 88, 90, 93, 96, 97, 101, 102, 103, 104, 105, 136, 179, 180, 181, 183], "weight": [0, 2, 67, 68, 69, 75, 76, 86, 87, 88, 98, 99, 100, 178], "bias": [0, 75, 76, 86, 87, 88, 98, 99], "handl": [0, 9, 66], "same": [0, 7, 9, 10, 11, 12, 65, 76, 117, 130, 131, 132, 134, 135, 136, 140, 141, 143, 145, 146, 159, 160, 161, 162, 163, 164, 165, 166, 181], "wai": [0, 2, 6, 9, 147], "can": [0, 2, 3, 8, 9, 10, 11, 12, 65, 66, 67, 69, 70, 71, 77, 78, 81, 83, 85, 93, 117, 133, 138, 139, 142, 147, 178, 180, 181], "done": [0, 101, 102, 103], "either": [0, 7, 10, 11, 12, 68, 72, 98, 103, 124, 133, 179], "reduc": [0, 2, 12, 65, 67, 68, 69, 70, 71, 72, 81, 97, 101, 102, 103, 117, 133, 136, 137, 138, 139, 142, 147], "output": [0, 6, 8, 13, 26, 29, 57, 68, 72, 73, 75, 76, 82, 85, 86, 87, 88, 91, 93, 106, 107, 108, 109, 110, 113, 114, 128, 135, 139, 142, 145, 146, 148, 150, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 181], "along": [0, 7, 10, 67, 69, 72, 76, 90, 101, 102, 103, 116, 129, 136, 140, 149], "dimens": [0, 7, 10, 11, 12, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 86, 87, 88, 90, 91, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 129, 136, 149], "The": [0, 2, 3, 7, 10, 11, 12, 13, 30, 33, 64, 65, 66, 67, 68, 69, 72, 73, 76, 77, 78, 82, 85, 91, 93, 97, 104, 105, 106, 107, 109, 110, 122, 126, 133, 135, 136, 138, 140, 142, 145, 146, 147, 152, 154, 156, 158, 179, 181], "former": [0, 179], "more": [0, 3, 7, 12, 67, 69, 70, 71, 77, 78, 79, 80, 81, 83, 84, 92, 97, 101, 102, 103, 176, 179], "effici": [0, 65], "make": [0, 11, 140], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 176], "perform": [0, 2, 8, 10, 11, 28, 57, 67, 68, 69, 74, 76, 90, 136, 137, 154, 155, 156, 157, 158, 178], "inferno": [0, 2, 65, 66, 72, 85, 136, 176, 178, 180, 181], "object": [0, 8, 9, 12, 13, 65, 66, 85, 93, 95, 96, 97, 100, 115, 117, 118, 119, 121, 123, 124, 127], "orient": 0, "interfac": 0, "automat": [0, 7, 9, 11, 12, 65, 68, 85, 101, 102, 103, 139], "But": 0, "certain": 0, "case": [0, 2, 19, 22, 25, 36, 39, 42, 47, 54, 62, 69, 77, 78, 90, 120, 129, 131, 139, 141, 146, 156, 157, 158, 178, 183], "function": [0, 6, 8, 9, 13, 27, 45, 46, 65, 66, 67, 69, 70, 71, 72, 74, 77, 78, 81, 83, 90, 93, 94, 96, 97, 101, 102, 103, 113, 114, 117, 124, 128, 133, 135, 136, 138, 139, 142, 145, 146, 147, 151, 152, 153, 154, 156, 158, 167, 178, 183], "might": 0, "necessari": 0, "hand": [0, 133, 136], "detail": [0, 67, 69, 70, 71, 76, 77, 78, 79, 80, 81, 83, 84, 92, 101, 102, 103, 176], "inform": [0, 6, 7, 8, 11, 75, 89, 94, 97, 179], "process": [0, 65, 67, 69, 72, 82, 85, 106, 107], "arxiv": [0, 179], "1909": 0, "02549": 0, "becaus": [0, 65], "over": [0, 2, 10, 11, 65, 67, 68, 69, 70, 71, 76, 81, 86, 87, 88, 108, 117, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 179, 180, 181, 183], "unit": [0, 10, 11, 66, 67, 69, 130, 131, 132, 134, 135, 136, 141, 143, 145, 146, 183], "relev": [0, 13], "comput": [0, 2, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 68, 75, 82, 85, 91, 93, 149, 152, 153, 154], "match": [0, 9, 11, 86, 87, 88, 130, 131, 132, 135, 141, 145, 146, 155, 156, 157, 158], "theoret": 0, "continu": [0, 152], "descript": [0, 176], "specifi": [0, 2, 7, 11, 12, 26, 29, 65, 66, 67, 68, 69, 72, 73, 85, 90, 93, 94, 97, 128, 129, 133, 142, 147, 148, 150, 167, 168], "length": [0, 2, 10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 178, 179, 180, 181, 183], "given": [0, 7, 9, 10, 11, 12, 64, 65, 67, 68, 69, 72, 73, 85, 91, 93, 94, 109, 110, 113, 114, 136, 137, 139, 140, 144, 152, 153, 154, 176, 179, 180, 183], "millisecond": [0, 70, 71, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 94, 119, 130, 131, 132, 136, 141, 145, 146], "On": 0, "step": [0, 3, 10, 11, 28, 30, 43, 44, 45, 46, 47, 48, 49, 50, 57, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 155, 156, 157, 158, 178, 179, 180, 181, 183], "amount": [0, 2, 58, 68, 70, 71, 76, 81, 83, 101, 102, 154], "ha": [0, 9, 12, 65, 67, 75, 76, 85, 86, 87, 88, 93, 117, 120, 122, 124, 126, 133, 136, 139, 144, 147, 181, 183], "elaps": 0, "subtract": [0, 11, 133], "from": [0, 2, 7, 9, 10, 11, 12, 26, 29, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 65, 67, 68, 69, 72, 73, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 97, 98, 99, 100, 106, 107, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 145, 146, 148, 150, 152, 153, 154, 167, 168, 178, 181, 183], "remain": [0, 89, 101, 102, 103, 113, 114, 119, 120, 134, 179], "inclus": [0, 74], "bound": [0, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 74, 77, 78, 103, 124], "zero": [0, 7, 10, 11, 12, 64, 76, 86, 87, 88, 90, 129, 130, 131, 132, 133, 134, 136, 141, 143, 145, 146, 154], "equal": [0, 2, 11, 72, 82, 91, 106, 107, 178], "consid": [0, 2, 10, 11, 12, 28, 57, 67, 130, 131, 132, 135, 136, 139, 141, 144, 145, 146, 154, 155, 156, 157, 158, 178, 180], "out": [0, 2, 10, 11, 43, 44, 45, 46, 47, 48, 49, 50, 76, 77, 78, 124], "its": [0, 2, 7, 9, 10, 11, 12, 65, 66, 72, 73, 75, 82, 85, 97, 106, 107, 133, 178, 181, 183], "therefor": [0, 7], "evenli": [0, 11], "divis": 0, "simualt": [0, 70, 71, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 92], "practic": [0, 2], "round": [0, 11], "up": [0, 11], "next": [0, 10, 11, 45, 46, 49, 53, 55, 61, 70, 137], "integ": [0, 3, 10, 11], "multipl": [0, 2, 3, 11, 17, 23, 34, 37, 40, 64, 65, 67, 69, 76, 81, 114, 130, 131, 139, 144, 145, 146], "size": [0, 7, 10, 11, 12, 26, 29, 67, 68, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 115, 116, 124, 128, 148, 167, 168], "affect": [0, 3, 11, 67, 156, 158, 176], "onli": [0, 2, 8, 9, 11, 12, 13, 65, 67, 69, 74, 76, 77, 85, 90, 97, 133], "data": [0, 10, 11, 12, 26, 29, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 69, 75, 76, 86, 87, 88, 117, 118, 121, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 148, 149, 150, 167, 168], "pass": [0, 6, 8, 10, 11, 13, 65, 67, 69, 70, 71, 72, 75, 76, 81, 83, 85, 86, 87, 88, 93, 117, 133, 138, 139, 142, 147, 183], "through": [0, 3, 11, 75, 76, 86, 87, 88, 115, 116, 183], "itself": [0, 8, 13, 66, 72, 75], "special": 0, "must": [0, 6, 7, 8, 9, 11, 12, 13, 65, 66, 72, 75, 76, 78, 85, 89, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 135, 136, 137, 139, 140, 142, 145, 146, 156, 158], "load": [0, 9], "principl": 0, "modul": [0, 6, 7, 8, 10, 11, 12, 13, 65, 66, 67, 68, 72, 73, 74, 75, 82, 85, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 138, 139, 140, 142, 147, 160, 162, 164, 166, 176], "record": [0, 10, 11, 133, 136, 138, 139, 142, 144, 147], "e": [0, 2, 6, 7, 9, 10, 11, 27, 64, 65, 66, 85, 91, 108, 109, 110, 136, 152, 153, 154, 181], "g": [0, 9, 64, 65, 66, 85], "synaps": [0, 73, 75, 76, 77, 78, 85, 86, 87, 88, 93, 95, 122, 123, 124, 125, 126, 127], "while": [0, 3, 70, 71, 79, 80, 81, 83, 84, 92, 113, 114, 139], "durat": [0, 10, 11, 130, 131, 132, 134, 135, 136, 137, 141, 143, 144, 145, 146], "chang": [0, 7, 9, 10, 11, 12, 65, 66, 67, 69, 75, 76, 86, 87, 115, 116, 134, 178, 179, 183], "underli": [0, 2, 11, 76, 85, 93, 133, 134, 136, 138, 139, 142, 147, 180, 181], "structur": [0, 11, 72], "note": [0, 9, 67, 178, 180, 183], "properti": [0, 2, 7, 8, 9, 10, 11, 12, 13, 26, 29, 65, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 136, 139, 141, 144, 145, 146, 148, 150, 152, 153, 154, 167, 168, 180], "setter": [0, 11, 12, 77, 78, 88, 117, 122, 126], "modifi": [0, 6, 7, 8, 10, 11, 12, 26, 29, 85, 128, 133, 138, 139, 142, 147, 148, 150, 167, 168], "after": [0, 2, 7, 8, 10, 11, 12, 58, 67, 69, 70, 71, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 92, 94, 96, 98, 99, 100, 101, 102, 103, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 138, 139, 142, 147, 149, 179, 180, 181], "phenomenon": 2, "rate": [2, 44, 52, 60, 67, 68, 69, 81, 82, 91, 103, 106, 107, 109, 110, 154, 178, 179, 180, 181], "quantiti": 2, "decreas": [2, 178, 179], "proport": [2, 68, 179, 180], "current": [2, 3, 10, 11, 12, 13, 28, 57, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 96, 101, 104, 111, 112, 113, 114, 118, 122, 123, 124, 125, 126, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 155, 156, 157, 158, 176, 178, 180, 181], "valu": [2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 57, 59, 60, 64, 68, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 108, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 179, 180, 181, 183], "It": [2, 11, 65, 67, 69, 85, 181], "describ": [2, 176, 178], "differenti": 2, "equat": 2, "tau": [2, 43, 51, 59, 134, 156], "frac": [2, 11, 43, 45, 46, 51, 53, 59, 61, 67, 68, 69, 70, 71, 76, 79, 81, 83, 84, 92, 101, 102, 106, 107, 112, 130, 131, 132, 134, 141, 145, 146, 152, 153, 154, 155, 156, 157, 158, 178, 179, 180, 181], "dn": 2, "dt": [2, 10, 11, 70, 71, 75, 77, 78, 79, 80, 81, 83, 84, 89, 92, 94, 130, 131, 132, 136, 141, 145, 146, 178, 179, 180, 181], "n": [2, 11, 67, 69, 82, 86, 87, 88, 104, 105, 106, 107, 152, 153, 154], "solut": [2, 178, 179, 180], "t": [2, 7, 10, 11, 28, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 101, 102, 103, 106, 107, 108, 111, 112, 113, 114, 120, 130, 131, 132, 134, 141, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 181, 183], "n_0": [2, 10, 11, 64, 68, 82, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 124, 136], "0": [2, 10, 11, 12, 19, 22, 25, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 101, 102, 103, 115, 116, 120, 129, 130, 131, 132, 134, 135, 141, 143, 145, 146, 168, 178, 181, 183], "oft": 2, "neural": [2, 65, 72, 85], "network": [2, 65, 85], "simul": [2, 3, 64, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 101, 102, 103, 111, 112, 113, 114, 130, 131, 132, 136, 141, 145, 146, 179, 180, 181, 183], "involv": 2, "discret": [2, 10, 11, 30, 130, 131, 132, 136, 141, 145, 146, 154, 181, 183], "timestep": [2, 70], "those": [2, 12, 65, 70, 72, 75, 93], "thei": [2, 108, 138, 178], "often": [2, 178, 181], "appear": 2, "form": [2, 6, 8, 9], "exp": [2, 43, 44, 51, 52, 59, 60, 67, 68, 69, 70, 71, 79, 81, 84, 102, 111, 130, 131, 132, 134, 141, 145, 146, 152, 153, 155, 156, 157, 158, 178, 179, 180, 181], "left": [2, 11, 43, 44, 45, 46, 51, 52, 53, 59, 60, 67, 68, 69, 70, 71, 76, 79, 81, 83, 84, 88, 92, 101, 102, 103, 111, 112, 114, 130, 131, 132, 133, 134, 136, 141, 145, 146, 152, 153, 155, 156, 157, 158, 178, 179, 180, 181], "right": [2, 11, 43, 44, 45, 46, 51, 52, 53, 59, 60, 67, 68, 69, 70, 71, 76, 79, 81, 83, 84, 88, 92, 101, 102, 103, 111, 112, 114, 130, 131, 132, 133, 134, 136, 141, 145, 146, 152, 153, 155, 156, 157, 158, 178, 179, 180, 181], "wa": [2, 7, 10, 12, 30, 33, 58, 65, 70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 133], "solv": 2, "analyt": 2, "approxim": [2, 71, 79, 83, 92, 101, 103, 108, 112, 178, 179, 181], "via": [2, 7, 65, 66, 85], "euler": [2, 71, 79, 83, 92, 101, 103, 112], "method": [2, 6, 7, 9, 10, 11, 14, 65, 66, 67, 69, 71, 73, 75, 76, 79, 82, 83, 86, 87, 88, 92, 97, 101, 103, 106, 107, 108, 112, 122, 124, 126, 136, 137, 139, 147], "both": [2, 7, 30, 67, 133], "repres": [2, 7, 75, 78, 89, 94, 116, 120, 181], "select": [2, 10, 11, 54, 55, 56, 62, 63, 67, 69, 94, 124, 136], "model": [2, 3, 179], "term": [2, 67, 69, 103, 178, 180], "long": [2, 12, 178], "live": [2, 7, 11, 12], "correspond": [2, 9, 11, 12, 65, 70, 71, 72, 77, 78, 79, 80, 81, 83, 84, 85, 89, 92, 97, 101, 102, 103, 113, 114, 120, 152, 153], "under": [2, 181], "relat": [2, 136, 176, 181], "ne": 2, "k": [2, 68, 101, 102, 103, 104, 105, 154, 156, 160, 162, 164, 166], "That": 2, "repeat": 2, "applic": [2, 130, 131, 132, 134, 135, 141, 143, 145, 146], "1": [2, 7, 10, 11, 12, 17, 19, 20, 22, 23, 25, 28, 34, 36, 37, 39, 40, 42, 57, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 103, 104, 105, 106, 107, 108, 120, 129, 134, 148, 152, 153, 154, 176, 178, 179, 181, 183], "start": [2, 12, 30, 181], "To": [2, 7, 10, 11, 13, 26, 29, 82, 106, 107, 128, 148, 167, 168, 179, 180], "outsid": [2, 136], "notion": 2, "life": 2, "we": [2, 9], "ln": 2, "b": [2, 57, 67, 68, 75, 76, 82, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 124, 133, 147], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 154], "sometim": [2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42], "lambda": [2, 44, 52, 60, 68, 154, 180], "context": [2, 178, 179], "frequent": 2, "aris": 2, "care": [2, 97], "histori": [2, 10, 11, 67, 69, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146], "activ": [2, 7], "formal": 2, "sum": [2, 67, 68, 69, 70, 71, 72, 81, 83, 117], "previou": [2, 12, 45, 46, 50, 51, 52, 53, 56, 59, 60, 61, 68, 77, 78, 124, 137, 143], "occur": [2, 7, 10, 11, 12, 13, 67, 68, 69, 74, 77, 78, 90, 124, 154, 179, 180, 181, 183], "howev": [2, 65, 67, 147], "purpos": [2, 67, 145, 146], "comparison": 2, "grow": 2, "complex": [2, 27, 28, 29, 57, 90, 129, 130, 131, 132, 141, 145, 146, 150, 151, 155, 156, 157, 158], "quadrat": [2, 83, 92, 112, 176], "respect": [2, 13, 67, 69, 72, 76, 85, 86, 87, 88, 98, 139], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 64, 68, 72, 85, 93, 130, 131, 156, 158, 180], "than": [2, 64, 65, 68, 72, 85, 93, 106, 107, 108, 130, 131, 156, 158, 180, 181], "everi": [2, 12, 65, 67, 69, 82, 85, 106, 107], "prior": [2, 10, 11, 12, 13, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 89, 120, 124, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 155, 156, 178], "leav": [2, 180], "tau_x": [2, 130, 131, 132, 141, 145, 146, 155, 156, 157, 158], "dx": 2, "x": [2, 19, 22, 25, 27, 28, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 83, 86, 87, 88, 130, 131, 132, 134, 141, 145, 146, 151, 152, 153, 155, 156, 157, 158, 183], "sum_f": 2, "f": [2, 45, 46, 67, 69, 76, 82, 91, 106, 107, 108, 120, 178], "amplitud": [2, 130, 131, 132, 141, 145, 146, 155, 156, 157, 158], "set": [2, 7, 9, 10, 11, 12, 26, 29, 65, 67, 69, 70, 71, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 96, 97, 101, 102, 103, 106, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 141, 143, 145, 146, 148, 155, 157, 167, 168, 178, 180, 181], "construct": [2, 26, 29, 77, 78, 85, 94, 95, 128, 133, 138, 139, 140, 142, 147, 148, 167, 168], "evalu": [2, 7, 8, 13, 65, 70, 71, 81, 83, 138], "otherwis": [2, 9, 11, 12, 47, 54, 62, 75, 77, 78, 82, 91, 96, 120, 142, 156], "interpret": 2, "follow": [2, 3, 6, 8, 11, 12, 75, 91, 109, 110, 124, 134, 136, 152, 153, 180], "whenev": 2, "add": [2, 9, 11, 12, 65, 66, 67, 69, 72, 85, 93, 96, 130, 132, 145, 155, 156, 158], "j": [2, 130, 131, 145, 146, 156, 158], "true": [2, 6, 8, 10, 11, 12, 13, 65, 67, 68, 69, 70, 71, 74, 75, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 96, 106, 107, 133, 138, 139, 142, 147, 154, 178], "event": [2, 135, 154], "sum_j": 2, "text": [2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 54, 62, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 152, 153, 154, 156, 178, 179, 180, 181, 183], "m": [2, 64, 67, 69, 70, 71, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 124, 179, 180, 181, 183], "most": [2, 10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 69, 72, 75, 82, 106, 107, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 178, 179], "recent": [2, 10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 69, 75, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 178], "runtim": 2, "cdot": [2, 10, 11, 64, 68, 76, 82, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 124, 136, 178], "iverson": [2, 178], "bracket": [2, 178], "inner": [2, 76, 86, 87, 88, 178], "statement": [2, 178], "fals": [2, 7, 10, 11, 12, 13, 64, 65, 67, 68, 69, 74, 75, 76, 77, 78, 82, 85, 86, 87, 88, 90, 91, 93, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 133, 136, 138, 142, 147, 178], "begin": [2, 19, 22, 25, 28, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 57, 62, 67, 69, 70, 71, 76, 77, 78, 81, 83, 120, 131, 134, 141, 146, 156, 157, 158, 178, 179, 180, 181, 183], "neq": [2, 69, 183], "end": [2, 12, 19, 22, 25, 28, 30, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 57, 62, 64, 67, 69, 70, 71, 76, 77, 78, 81, 83, 120, 131, 134, 141, 146, 147, 156, 157, 158, 178, 179, 180, 181, 183], "further": [2, 6, 8], "new": [2, 7, 9, 10, 11, 12, 65, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 98, 99, 100, 115, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 136, 141, 145, 146, 155, 156, 157, 158], "observ": [2, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 73, 77, 78, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 152, 153, 155, 156, 157, 158], "h": [2, 76, 130, 131, 132, 141, 145, 146, 155, 156, 157, 158], "meet": 2, "criterion": [2, 130, 131, 135, 145, 146], "ad": [2, 7, 10, 12, 65, 72, 76, 82, 85, 90, 93, 97, 98, 99, 100, 106, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 136], "so": [2, 9, 11, 65, 67, 134, 183], "mid": [2, 152, 153, 154], "f_a": 2, "tradition": 2, "connect": [2, 72, 73, 76, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 178], "especi": [2, 72], "learn": [2, 67, 68, 69, 70, 71, 75, 76, 81, 83, 86, 87, 88], "contain": [2, 9, 11, 12, 33, 57, 113, 114], "depress": [2, 17, 18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 67, 69, 178, 179], "compon": [2, 156, 158, 179, 180], "techniqu": 2, "limit": [2, 9, 15, 16, 17, 18, 19, 23, 24, 25, 31, 32, 34, 35, 36, 40, 41, 42, 67, 69, 70, 71, 77, 78, 81, 83, 117, 124], "rang": [2, 10, 11, 74, 136], "align": [2, 10, 11, 28, 43, 44, 45, 46, 47, 48, 49, 50, 57, 67, 70, 71, 76, 81, 83, 134, 178, 179, 180, 181], "a_": [2, 178], "v": 2, "v_": [2, 70, 71, 79, 81, 83, 84, 92, 101, 103, 111, 112, 113, 114, 179, 180, 181], "max": [2, 15, 20, 21, 22, 23, 24, 25, 31, 37, 38, 39, 40, 41, 42, 67, 69, 70, 71, 72, 74, 81, 83, 103, 117, 149, 179], "mu_": [2, 18, 21, 24, 35, 38, 41], "eta_": [2, 67, 69], "min": [2, 15, 17, 18, 19, 20, 21, 22, 31, 34, 35, 36, 37, 38, 39, 72, 74, 149], "adjust": [2, 45, 46, 178], "magnitud": [2, 67, 178, 179], "ltp": [2, 67, 69, 178], "ltd": [2, 67, 69, 178], "being": [2, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 91, 92, 93, 106, 107, 108, 109, 110, 116, 133, 138, 139, 142, 147], "upper": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 74], "lower": [2, 15, 16, 17, 18, 19, 20, 21, 22, 31, 32, 34, 35, 36, 37, 38, 39, 74, 103, 179], "origin": [2, 67, 69, 70, 71, 81, 83, 117, 136], "order": [2, 7, 9, 10, 66, 72, 90, 129, 136], "penal": 2, "penalti": 2, "control": [2, 12, 67, 69, 81, 83, 92, 112, 114, 181], "refer": [2, 6, 7, 9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 69, 70, 71, 76, 77, 78, 79, 80, 81, 83, 84, 92, 97, 101, 102, 103, 139, 176], "power": [2, 17, 18, 20, 23, 24, 34, 35, 37, 38, 40, 41], "law": 2, "theta": [2, 19, 22, 25, 36, 39, 42, 70, 81, 113, 114, 179, 180, 181], "nonneg": [2, 106, 107, 108, 109, 110], "filter": [2, 76, 133, 138, 142, 147], "ani": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 65, 66, 67, 69, 73, 75, 78, 85, 88, 93, 98, 99, 133, 136, 137, 138, 139, 142, 147, 180, 181, 183], "would": [2, 7, 10, 12, 13], "move": [2, 11, 66, 134], "beyond": 2, "hold": [2, 11], "int_": 2, "infti": [2, 70, 81, 105, 179, 180, 181], "neg": [2, 7, 11, 15, 20, 21, 22, 31, 37, 38, 39, 131, 146, 158], "argument": [2, 6, 8, 11, 13, 65, 67, 68, 69, 72, 73, 75, 76, 85, 86, 87, 88, 93, 130, 131, 133, 136, 137, 139, 144, 147, 152, 153, 154], "posit": [2, 7, 15, 31, 64, 73, 85, 137], "geq": [2, 19, 22, 25, 36, 39, 42, 113, 114], "deriv": [2, 12, 122, 124, 126, 152, 181], "d": [2, 10, 11, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 136, 179, 180], "And": [2, 76], "integr": [2, 70, 71, 79, 80, 81, 84, 89, 92, 94, 111, 112, 156, 158, 176, 183], "have": [3, 7, 11, 12, 64, 65, 73, 76, 85, 86, 87, 135, 136, 145, 146, 156, 158], "two": [3, 7, 11, 12, 30, 33, 58, 67, 72, 75, 76, 179, 181], "kind": 3, "absolut": [3, 70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 111, 112, 113, 114, 120, 132, 141, 155, 157], "arp": [3, 120], "rel": [3, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 73, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146, 152, 153], "rrp": 3, "cannot": [3, 7, 9, 10, 11, 12, 73, 115, 116, 179], "presynapt": [3, 67, 69, 70, 71, 77, 78, 79, 80, 81, 83, 84, 92, 104, 111, 112, 113, 114, 178, 179, 180, 183], "doe": [3, 7, 9, 10, 11, 65, 72, 85, 93, 122, 126, 136, 154, 183], "depolar": [3, 181], "repolar": 3, "hyperpolar": 3, "mean": [3, 67, 69, 70, 71, 72, 81, 117, 133, 138, 139, 142, 147, 152, 153, 154], "difficult": 3, "fire": [3, 70, 71, 79, 80, 81, 84, 92, 105, 176, 178, 179], "imposs": 3, "time": [3, 7, 10, 11, 13, 28, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 176, 179, 180, 181, 183], "voltag": [3, 70, 71, 73, 79, 80, 81, 83, 84, 89, 92, 101, 102, 103, 105, 111, 112, 113, 114, 121, 176, 180, 181], "reset": [3, 10, 11, 70, 71, 75, 77, 78, 79, 80, 81, 83, 84, 89, 92, 94, 103, 113, 114, 136, 179, 180, 181], "determin": [3, 14, 26, 29, 65, 76, 86, 87, 88, 109, 128, 132, 141, 148, 150, 167, 168], "strongli": 3, "constant": [3, 43, 44, 51, 52, 59, 60, 67, 69, 70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 111, 112, 130, 131, 132, 134, 141, 145, 146, 178, 179, 180, 181], "wherea": [3, 7, 10, 65], "other": [3, 9, 68, 72, 74, 85, 90, 93, 133, 138, 142, 147, 180], "parameter": [3, 43, 44, 51, 52, 91, 109, 110, 178], "class": [6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 30, 31, 32, 33, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166], "prehook": [6, 8, 13, 133, 138, 139, 142, 147], "str": [6, 7, 8, 9, 10, 11, 12, 65, 66, 67, 69, 72, 73, 74, 75, 85, 89, 90, 93, 94, 96, 97, 133, 139, 140, 147, 152, 153, 154], "none": [6, 7, 8, 10, 11, 12, 13, 14, 15, 20, 21, 22, 26, 28, 29, 31, 37, 38, 39, 45, 46, 57, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 117, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 167, 168], "posthook": [6, 8, 133, 138, 139, 142, 147], "prehook_kwarg": [6, 8, 139], "dict": [6, 7, 8, 9, 11, 12, 66, 72, 73, 85, 93, 139, 152, 153, 154], "posthook_kwarg": [6, 8, 139], "train_upd": [6, 8, 13, 74, 90, 133, 138, 139, 142, 147], "bool": [6, 7, 8, 10, 11, 12, 13, 26, 29, 64, 65, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 98, 99, 100, 106, 107, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 167, 168], "eval_upd": [6, 8, 13, 74, 90, 133, 138, 139, 142, 147], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "hook": [6, 13, 65, 74, 85, 90, 133, 139, 147], "provid": [6, 8, 9, 11, 72, 93, 149], "forward": [6, 8, 11, 13, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 133, 136, 138, 139, 142, 144, 147], "subclass": [6, 13, 65, 66, 67, 75, 85, 89, 94, 96, 137, 139], "manag": [6, 8, 97, 113, 114, 115, 116, 124], "safe": [6, 8, 85], "garbag": 6, "collector": 6, "without": [6, 10, 11, 66, 139, 144, 156, 158, 179, 180, 181], "cyclic": 6, "option": [6, 7, 8, 10, 11, 12, 13, 26, 29, 45, 46, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 103, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 167, 168], "name": [6, 7, 9, 10, 11, 12, 65, 66, 67, 69, 72, 73, 74, 85, 90, 93, 97, 120, 122, 124, 126, 139, 147, 152, 153, 154], "execut": [6, 13, 139], "default": [6, 7, 8, 10, 11, 12, 13, 14, 26, 29, 45, 46, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 167, 168], "keyword": [6, 8, 11, 65, 67, 69, 72, 73, 75, 76, 85, 86, 87, 88, 93, 139], "register_forward_pre_hook": [6, 8, 139], "register_forward_hook": [6, 8, 139], "run": [6, 8, 13, 70, 71, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 92, 94, 133], "train": [6, 8, 13, 64, 65, 66, 67, 70, 71, 73, 74, 81, 82, 83, 90, 91, 106, 107, 108, 109, 110, 133, 138, 139, 142, 147, 176], "mode": [6, 8, 13, 65, 67, 69, 70, 71, 74, 77, 78, 81, 83, 89, 90, 133, 138, 139, 142, 147], "eval": [6, 8, 13, 74, 90, 133, 138, 139, 142, 147], "rais": [6, 7, 8, 9, 10, 11, 12, 13, 27, 65, 66, 72, 73, 75, 85, 89, 93, 94, 96, 137, 139, 179], "runtimeerror": [6, 7, 8, 10, 11, 12, 65, 72, 73, 85, 93, 96, 139], "least": [6, 7, 8, 12, 72], "one": [6, 8, 11, 65, 67, 69, 70, 71, 72, 81, 83, 85, 87, 88, 93, 117, 161, 162, 163, 164, 165, 166, 179], "If": [6, 7, 8, 10, 11, 12, 14, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 96, 98, 101, 102, 103, 106, 107, 117, 133, 138, 139, 140, 142, 144], "signatur": [6, 8, 77, 78, 94, 133, 138, 139, 142, 147], "arg": [6, 8, 9, 15, 16, 30, 31, 32, 33, 58, 72, 93, 94, 95, 137, 139, 140, 144, 159, 160, 161, 162, 163, 164, 165, 166], "Or": [6, 8], "with_kwarg": [6, 8], "kwarg": [6, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 133, 136, 139, 140, 144, 159, 160, 161, 162, 163, 164, 165, 166], "see": [6, 8, 67, 69, 97, 128, 139, 167, 180, 181], "constraint": [7, 10, 11, 12, 115, 116, 136], "tupl": [7, 11, 12, 14, 26, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 57, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 113, 114, 116, 117, 128, 129, 133, 136, 138, 142, 147, 148, 149, 152, 153, 167, 168], "int": [7, 10, 11, 12, 26, 27, 28, 29, 57, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 106, 107, 109, 110, 115, 116, 117, 128, 129, 130, 131, 132, 141, 145, 146, 148, 149, 150, 151, 155, 156, 157, 158, 167, 168], "support": [7, 10, 11, 76, 77, 78, 86, 87, 88, 94, 95, 178], "dimension": [7, 12, 76], "constrain": [7, 10, 11, 12, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "buffer": [7, 9, 10, 11, 12, 115, 124], "dim": [7, 10, 11, 12, 89, 90, 94, 95, 115, 116, 129, 149], "attribut": [7, 9, 10, 11, 12, 65, 68, 73, 74, 77, 78, 85, 90, 96, 97, 116, 117, 120, 124, 133, 140, 147, 181], "valueerror": [7, 10, 11, 12, 65, 72, 85, 93], "persist": [7, 11, 12], "dictionari": [7, 9, 10, 11, 12, 66, 72, 85, 93], "themselv": 7, "uniqu": [7, 11, 12, 65, 72, 73], "element": [7, 10, 11, 12, 14, 67, 68, 72, 76, 85, 86, 87, 88, 90, 93, 106, 107, 108, 109, 110, 116, 129, 130, 131, 132, 135, 141, 145, 146, 155, 156, 157, 158], "For": [7, 11, 12, 67, 69, 70, 71, 77, 78, 79, 80, 81, 83, 84, 85, 92, 101, 102, 103, 104, 105, 130, 131, 132, 133, 134, 141, 145, 146, 147, 178], "place": [7, 11, 12, 66, 85], "tensor": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 168], "three": [7, 72], "sinc": [7, 33, 82, 106, 107, 135], "scalar": [7, 10, 11, 14, 26, 29, 128, 148, 152, 153, 154, 167, 168], "ignor": [7, 8, 11, 12, 13, 133, 138, 142, 147], "compat": [7, 9, 10, 12], "test": [7, 11, 12, 65, 132, 133, 135, 138, 141, 142, 145, 146, 147, 152, 153, 154, 156, 158], "torch": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 168], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "type": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "classmethod": [7, 11, 12, 77, 78, 94, 133, 138, 139, 142, 147, 152, 153, 154], "compatible_": 7, "compatible_lik": 7, "iter": [7, 65, 72, 82, 85, 91, 107, 110], "creat": [7, 10, 11, 12, 65, 72, 76, 77, 78, 85, 86, 87, 93, 97, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127], "shape": [7, 12, 26, 29, 30, 33, 70, 71, 77, 78, 79, 80, 81, 83, 84, 89, 92, 94, 95, 116, 117, 128, 148, 150, 167, 168], "like": [7, 9, 10, 11, 12, 26, 29, 30, 33, 67, 69, 70, 71, 75, 76, 81, 83, 86, 87, 88, 94, 117, 128, 148, 150, 167, 168, 176], "nn": [7, 9, 11, 12, 13, 65, 66, 74, 90], "_description_": [7, 10, 11, 108], "compatible_like_": 7, "suffici": 7, "made": [7, 9, 12, 97, 136], "sort": 7, "result": [7, 10, 11, 30, 33, 68, 72, 75, 76, 93, 130, 131, 132, 134, 135, 136, 141, 143, 145, 146, 152, 153, 154], "first": [7, 10, 11, 30, 64, 72, 77, 78, 85, 93, 104, 105, 106, 108, 109, 180], "last": [7, 10, 64, 67, 69, 73, 75, 89, 101, 102, 103, 120, 135, 136, 137, 139, 183], "increas": [7, 12, 70, 71, 79, 81, 83, 92, 101, 102, 112, 178, 179, 181], "deregister_constrain": [7, 10], "deregist": [7, 8, 10, 65], "isn": [7, 10], "call": [7, 8, 9, 10, 11, 12, 13, 65, 66, 67, 69, 73, 74, 75, 85, 90, 93, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 136, 138, 139, 142, 144, 147, 154, 178, 180, 181], "noth": [7, 10, 122, 126], "fulli": [7, 9, 10, 74, 90], "qualifi": [7, 9, 10, 74, 90], "string": [7, 9, 10, 72, 74, 90], "regist": [7, 8, 9, 10, 11, 12, 13, 65, 66, 74, 75, 76, 85, 86, 87, 90, 93, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 133, 138, 139, 140, 142, 147], "number": [7, 10, 11, 12, 27, 64, 65, 68, 72, 75, 76, 82, 86, 87, 88, 91, 97, 101, 102, 103, 106, 107, 108, 109, 110, 116, 124, 128, 136, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 167], "requir": [7, 9, 11, 12, 26, 29, 64, 66, 67, 69, 73, 76, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 136, 148, 150, 156, 158, 167, 168], "dims_": 7, "extra_repr": [7, 75, 89, 94], "extra": [7, 9, 65, 75, 89, 94], "represent": [7, 85], "print": 7, "custom": [7, 67, 69, 70, 71, 72, 81, 83, 117], "you": [7, 9], "re": 7, "implement": [7, 9, 13, 65, 66, 67, 70, 71, 72, 75, 79, 83, 85, 89, 92, 93, 94, 96, 101, 103, 112, 113, 114, 137, 139, 176, 179, 180], "your": [7, 9], "own": [7, 12, 65, 66, 73], "singl": [7, 12, 13, 33, 66, 72, 93, 142], "line": 7, "multi": 7, "accept": [7, 73, 136], "liveconstrain": [7, 10], "enforc": [7, 9, 136], "assign": [7, 9, 11, 12, 68, 77, 78, 88, 117], "reconstrain": [7, 10, 11, 12], "exist": [7, 9, 10, 12, 64, 65, 68, 70, 72, 85, 93, 96, 97, 136, 139, 178], "ahead": [7, 10], "realloc": [7, 10], "remov": [7, 10, 11, 12, 65], "longer": [7, 10, 11, 139], "valid": [7, 9, 10, 11, 12, 72, 75, 85, 93, 97, 139, 152, 153, 154], "self": [7, 10, 11, 65, 73, 136], "register_constrain": [7, 10], "invalid": [7, 9, 10, 12, 67, 69, 97], "attributeerror": [7, 9, 10, 65, 72, 85, 93], "get_paramet": [7, 10], "point": [7, 11, 64, 82, 106, 107, 154, 181], "callabl": [8, 14, 15, 16, 30, 31, 32, 33, 45, 46, 58, 67, 69, 70, 71, 72, 81, 83, 97, 117, 133, 136, 138, 142, 147, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166], "removablehandl": 8, "befor": [8, 9, 10, 11, 12, 45, 46, 67, 69, 72, 74, 76, 88, 90, 93, 124, 133, 136, 137, 138, 142, 147, 149, 179, 181], "still": [8, 11, 12, 65, 76, 82, 97, 106, 107, 132, 141, 155, 157], "evalexec": 8, "pytorch": [8, 9, 67, 69, 70, 71, 81, 83, 117, 154], "typeerror": [8, 9], "instanc": [8, 9, 12, 65, 75, 96, 133, 147, 178], "warn": 8, "runtimewarn": 8, "alreadi": [8, 11, 12, 65, 72, 85, 93, 142, 147], "registr": [8, 85], "trainexec": 8, "extens": 9, "similar": [9, 67, 69, 70, 71, 81, 83, 117, 156, 158], "regular": 9, "enabl": 9, "simpl": [9, 28, 104, 105], "export": 9, "exact": [9, 10, 11, 135], "kei": [9, 11, 12, 85], "insert": [9, 10, 11, 72], "addition": [9, 179], "check": [9, 12, 156, 158], "__setattr__": 9, "__init__": 9, "parent": [9, 97], "child": 9, "constructor": [9, 65, 67, 69, 76, 77, 78, 86, 87, 88, 94, 95, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 138, 139, 140, 142, 147], "get_extra": 9, "target": [9, 10, 85, 132, 133, 138, 139, 140, 141, 142, 147, 152, 153, 155, 157], "throw": 9, "error": [9, 72, 85, 93], "similarli": 9, "specif": [9, 75, 96, 152, 181], "get_submodul": 9, "look": 9, "referenc": [9, 73, 139], "path": [9, 65, 140], "termin": 9, "resolv": [9, 65], "someth": 9, "get_extra_st": 9, "state_dict": 9, "set_extra_st": 9, "store": [9, 10, 11, 67, 68, 69, 88, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147], "build": 9, "picklabl": 9, "ensur": [9, 12], "work": [9, 142, 176], "serial": 9, "backward": [9, 11], "guarante": [9, 65], "break": 9, "pickl": 9, "register_extra": 9, "manner": [9, 137], "register_buff": 9, "except": [9, 11, 13, 72, 74, 90, 130, 131, 156, 158, 178, 180], "access": [9, 11, 85, 93], "keyerror": 9, "empti": [9, 11, 12, 130, 131, 132, 134, 135, 137, 138, 141, 143, 145, 146], "dot": [9, 65, 73, 133, 147], "notat": [9, 133, 147], "python": [9, 72], "identifi": [9, 72, 73], "load_state_dict": 9, "within": [9, 10, 11], "step_tim": [10, 11, 30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 95, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 130, 131, 132, 134, 135, 136, 137, 141, 143, 144, 145, 146, 181], "float": [10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dimensionalmodul": [10, 89, 115, 116, 118, 119, 120, 121], "index": [10, 11, 75, 136], "restor": 10, "pointer": [10, 11], "slice": [10, 11, 12, 82, 91, 107, 110], "overwrit": [10, 11], "preserv": [10, 11, 12, 70, 71, 81, 83, 136], "latest_first": 10, "offset": [10, 11, 73, 75], "full": [10, 150], "nativ": 10, "storag": [10, 11, 136], "latest": [10, 11, 28, 57, 131, 141, 146, 155, 156, 157, 158], "roll": 10, "By": [10, 133], "zeroth": 10, "window": 10, "locat": [10, 11, 152, 153], "oper": [10, 11, 12, 76, 133, 137], "overwritten": [10, 11], "retriev": [10, 11, 65, 124, 136], "increment": 10, "write": [10, 11], "recordsz": [10, 11], "interp": [10, 11, 136], "interpol": [10, 11, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 77, 78, 124, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146], "toler": [10, 11, 124, 132, 136, 141, 155, 156, 157, 158], "1e": [10, 11, 90, 129, 136], "06": [10, 11], "ever": [10, 11], "attempt": [10, 11, 117], "regardless": [10, 11, 12, 13, 65], "maximum": [10, 11, 15, 16, 31, 32, 64, 67, 68, 69, 76, 77, 78, 82, 86, 87, 88, 91, 94, 95, 108, 124, 136, 149], "co": [10, 11, 67, 69, 77, 78, 124], "6": [10, 11, 178, 179, 181], "ldot": [10, 11, 64, 68, 82, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 136], "mimic": [10, 11], "gather": [10, 11, 68, 136], "thrown": [10, 11], "avoid": [10, 11, 93, 97], "clamp": [10, 11, 65, 85, 108], "owner": [11, 12], "persist_data": [11, 12], "persist_constraint": [11, 12], "persist_tempor": 11, "strict": [11, 12], "shapedtensor": 11, "read": 11, "peek": [11, 136, 139, 144], "pop": 11, "readrang": 11, "push": [11, 136, 144], "writerang": 11, "belong": [11, 12], "tempor": [11, 136], "linkedattribut": [11, 12], "alia": [11, 12, 73, 80], "recordtensorattribut": 11, "oldest": [11, 136], "uniniti": [11, 26], "depend": [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 69, 70, 75, 102, 103, 105, 115, 116, 142, 176, 180], "associ": [11, 12, 65, 66, 82, 85, 91, 96], "shift": 11, "transpar": 11, "equival": [11, 12, 17, 20, 23, 34, 37, 40, 130, 131, 136, 178, 180], "attr": [11, 12, 65, 73, 74, 75, 90, 133, 140, 147], "decr": 11, "po": [11, 15, 20, 21, 22, 31, 37, 38, 39], "deiniti": 11, "use_uniniti": 11, "uninitializedbuff": [11, 12], "uninitializedparamet": [11, 12], "devic": [11, 26, 29, 66, 128, 148, 150, 167, 168], "gradient": [11, 26, 29, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 148, 150, 167, 168], "initi": [11, 12, 67, 69, 73, 76, 82, 86, 87, 88, 89, 91, 97, 98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 141, 143, 144, 145, 146], "reassign": [11, 85], "uninit": 11, "newest": 11, "entir": [11, 130, 131, 132, 134, 135, 141, 143, 145, 146], "logic": [11, 72, 85, 93, 113, 114, 136, 156, 158], "divid": 11, "alwai": [11, 124], "although": [11, 97, 154, 178, 181], "larger": 11, "incr": 11, "dtype": [11, 26, 29, 128, 135, 145, 146, 148, 150, 152, 153, 154, 167, 168], "fill": [11, 12, 29, 128, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146, 148, 150, 167, 168], "exclud": [11, 68, 75, 76, 86, 87, 88, 89, 94, 95, 116], "overrid": [11, 26, 29, 65, 67, 68, 69, 128, 148, 150, 167, 168], "tyoe": 11, "extrap": 11, "extrapol": [11, 43, 44, 45, 46, 47, 48, 49, 50], "inplac": 11, "extrap_kwarg": 11, "cast": 11, "back": [11, 180], "indic": [11, 12], "non": [11, 14, 152, 153, 154], "determinist": 11, "chosen": 11, "propag": 11, "incorrectli": 11, "onc": [11, 65], "overlap": 11, "suggest": 11, "altern": 11, "getter": [11, 77, 78], "delet": [11, 12, 65, 67, 72, 75, 85, 93, 96, 97], "decrement": 11, "unalt": [11, 12], "ob": [11, 28, 57, 130, 131, 132, 134, 135, 141, 143, 145, 146], "advanc": 11, "code": 11, "no_grad": 11, "s_0": [11, 28, 57, 134], "sequenti": 11, "l": 75, "phi": [], "p": [17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 90, 129, 152, 153, 154, 178], "2": [30, 47, 76, 81, 152, 153, 154, 176, 181], "edit": [11, 12], "shapetensor": 11, "account": 11, "them": [11, 68, 72, 120, 133, 138, 139, 142, 147, 176], "newli": [11, 12, 75, 95, 140], "lceil": 11, "delta": [11, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 69, 70, 71, 77, 78, 79, 81, 82, 83, 84, 91, 92, 101, 102, 103, 106, 107, 108, 111, 112, 130, 131, 132, 134, 141, 145, 146, 155, 156, 157, 158, 176, 178, 179, 180, 181], "rceil": 11, "interp_kwarg": 11, "previous": [11, 13, 74, 90, 136], "nearest": [11, 30, 33, 54, 67, 69, 77, 78, 131, 136, 141, 146], "prevent": [11, 12, 13], "act": [11, 13], "etc": [11, 64, 85], "possibl": [11, 65, 68, 136], "caus": 11, "conveni": [12, 93], "unsupport": 12, "neither": [12, 85], "nor": [12, 85], "final": [12, 64, 72, 136, 137], "count": [12, 116, 132, 141, 154, 155, 157], "goe": [12, 179], "shapedtensorattribut": 12, "satisfi": 12, "_": [12, 152, 153, 154, 178], "_data": 12, "_constraint": 12, "alter": [12, 65, 66, 76, 86, 87, 136], "resiz": 12, "cut": 12, "off": [12, 65, 120], "toward": [12, 83, 92, 112, 180, 181], "unconstrain": 12, "static": 12, "preserve_tail": 12, "version": 12, "built": 12, "reshap": [12, 72, 75, 76, 86, 87, 88], "tail": 12, "kept": 12, "head": 12, "append": 12, "assum": [12, 43, 44, 67, 69, 72, 75, 93, 117, 133], "higher": 12, "expand": [12, 67, 76], "strictli": [12, 65, 154], "met": 12, "as_prehook": [13, 74, 90, 147], "prepend": [13, 74, 90, 133, 138, 142, 147], "always_cal": [13, 74, 90], "contextualhook": [13, 139], "abc": [13, 66, 75, 85, 89, 94, 96, 137, 144], "interact": 13, "even": [13, 65, 67, 69, 72, 74, 85, 90, 93, 133, 147], "trigger": [13, 179, 180, 181], "here": [13, 30, 33, 65, 176], "ignore_mod": 13, "unregist": 13, "normal": [13, 68, 74, 149, 152, 183], "manual": [13, 93, 115, 116], "configur": 13, "abstract": [13, 66, 75, 85, 89, 94, 96, 137, 144], "notimplementederror": [13, 65, 66, 75, 85, 89, 94, 137, 139], "convers": 14, "convert": 14, "leftmost": 14, "unspecifi": [14, 72], "protocol": [15, 16, 30, 31, 32, 33, 58, 95, 140, 159, 160, 161, 162, 163, 164, 165, 166], "param": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 96, 97], "part": [15, 31], "scale": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 68, 69, 82, 90, 91, 109, 110, 129, 130, 131, 145, 146, 152, 153, 156, 158, 178], "partial": [16, 32, 65, 76, 77, 78, 86, 87, 88, 94, 133, 138, 139, 142, 147], "soft": [17, 18, 20, 21, 23, 24, 34, 35, 37, 38, 40, 41], "expon": [17, 18, 20, 21, 23, 24, 34, 35, 37, 38, 40, 41], "u_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42], "p_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42], "sharp": [19, 25, 36, 39, 42, 71, 79, 181], "hard": [19, 22, 25, 36, 39, 42], "u": [20, 21, 22, 37, 38, 39], "upper_pow": [21, 38], "lower_pow": [21, 38], "layout": [26, 29, 128, 148, 150, 167, 168], "requires_grad": [26, 29, 98, 99, 100, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 148, 150, 167, 168], "ndarrai": [27, 151], "agnost": [27, 151], "exponenti": [27, 28, 43, 44, 51, 52, 57, 59, 60, 67, 69, 70, 71, 79, 81, 82, 83, 84, 92, 101, 102, 103, 106, 107, 111, 112, 130, 131, 132, 134, 141, 145, 146, 155, 156, 157, 158, 176, 179], "y": [27, 86, 87, 88, 151, 180], "numpi": [27, 151], "level": [28, 57], "alpha": [28, 57, 134], "smooth": [28, 57, 134], "x_0": [28, 57, 134], "s_": [28, 57, 134], "x_": [28, 57, 67, 69, 134, 156, 178], "s_t": [28, 57, 134], "factor": [28, 57, 134, 181], "revis": [28, 57], "prev_data": [30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146], "next_data": [30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146], "sample_at": [30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146], "total": [30, 33, 68, 179, 180, 181, 183], "second": [30, 72, 85, 93, 130, 131, 180], "subsequ": [30, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 78, 130, 131, 132, 134, 135, 137, 141, 143, 145, 146], "time_const": [43, 51, 59, 79, 80, 84, 92, 101, 102, 111, 112, 130, 131, 132, 141, 145, 146], "decai": [43, 44, 51, 52, 59, 60, 67, 68, 69, 70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 111, 112, 130, 131, 132, 141, 145, 146, 155, 156, 157, 158, 179, 180], "dynam": [43, 44, 70, 71, 77, 78, 79, 80, 81, 83, 84, 89, 92, 94, 97, 111, 112, 113, 114, 179, 180, 181], "t_": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 120, 178], "neighbor": [43, 44, 45, 46, 47, 48, 49, 50, 178], "rate_const": [44, 52, 60], "linearli": [45, 46, 82, 91], "ident": [45, 46, 72, 93, 138], "closest": 47, "leq": [47, 132, 141, 152, 153, 154, 155, 157], "linearlli": [53, 61], "trend": 57, "beta": 57, "holt": 57, "linear": [57, 70, 86, 87, 88, 101, 102, 103, 104, 105, 111, 134, 176, 181], "b_0": 57, "x_1": 57, "b_": 57, "b_t": 57, "measur": [58, 136], "d_": [59, 60, 61, 62, 63, 178], "time_first": 64, "transform": [64, 72, 86, 87, 88, 93], "inter": [64, 66, 82, 106, 107, 124], "interv": [11, 64, 76, 82, 86, 87, 88, 91, 106, 107, 109, 110], "pad": [64, 72, 76], "nan": 64, "could": 64, "fewer": 64, "calcul": [64, 67, 68, 69, 77, 78, 133, 137, 178, 180], "interspik": 64, "c": [64, 72, 76], "popul": 64, "amongst": [64, 65], "trainer": [65, 66, 67], "layer": [65, 66, 67, 69, 72, 73, 93], "monitor": [65, 66, 67, 69, 73, 85, 133, 138, 140, 142, 147, 179], "likewis": [65, 66, 178], "add_cel": [65, 72, 85, 93], "auxiliari": [65, 66, 67, 69], "add_monitor": 65, "monitorconstructor": [65, 133, 138, 139, 142, 147], "tag": 65, "trainabl": [65, 66, 67, 69, 75, 97], "seper": [65, 73], "alias": 65, "pool": [65, 73], "bypass": 65, "less": [65, 106, 107], "cours": 65, "yield": [65, 82, 85, 91, 107, 110], "clear": [65, 67, 70, 71, 75, 77, 78, 79, 80, 81, 83, 84, 85, 89, 92, 94, 96, 97, 133, 136, 139, 144], "addit": [65, 67, 75, 76, 81, 82, 86, 87, 88, 96, 106, 107, 114, 156, 158, 179, 180], "overridden": [65, 67, 69, 139, 144], "well": [65, 67, 99, 176], "doesn": [65, 67, 72, 85, 93, 101, 102, 103], "del_cel": [65, 72, 85, 93], "again": [65, 72], "del_monitor": 65, "get_cel": [65, 85], "get": [65, 66, 82, 85, 106, 107], "get_monitor": 65, "togeth": [65, 178], "named_cel": [65, 85], "named_monitor": 65, "named_monitors_of": 65, "associt": 65, "put": 65, "cumul": [65, 67, 69, 85, 130, 132, 145, 152, 153, 154, 178], "celltrain": 66, "moduledict": 66, "register_cel": [66, 67, 69], "alongsid": 66, "lr_post": [67, 69], "lr_pre": [67, 69], "tc_post": [67, 69], "tc_pre": [67, 69], "tc_elig": 67, "delai": [67, 69, 73, 75, 76, 77, 78, 86, 87, 88, 94, 95, 98, 124, 176], "interp_toler": [67, 69], "batch_reduct": [67, 69, 70, 71, 81, 83, 117], "field_reduct": [67, 69], "independenttrain": [67, 69], "plastic": [67, 69, 176], "elig": [67, 176], "trace": [67, 69, 130, 131, 132, 141, 145, 146, 155, 156, 157, 158, 176], "w": [67, 69, 76, 86, 87, 88, 178], "gamma": [67, 154, 178], "r": [67, 152, 153, 154, 178, 180], "z_": 67, "post": [67, 69, 75, 76, 86, 87, 88, 133, 178], "pre": [67, 69, 75, 76, 86, 87, 88, 133, 178], "tau_z": [67, 178], "tau_": [67, 69, 178], "t_n": [67, 69, 178], "sign": [67, 69], "reinforc": 67, "split": 67, "sgn": [67, 69], "hebbian": [67, 69, 176], "anti": [67, 69, 178], "postsynapt": [67, 69, 75, 89, 101, 102, 103, 120, 178, 179], "trace_mod": [67, 69], "liter": [67, 69, 72, 77, 78], "recept": [67, 69], "field": [67, 69, 180, 181], "desir": [67, 69, 90, 129, 147, 152, 153], "expect": [67, 69, 76, 82, 85, 86, 87, 88, 91, 106, 107, 108, 109, 110, 136, 142, 152, 153, 154], "basi": [67, 69], "keep": [67, 69, 70, 71, 81, 83, 117], "visit": [67, 69, 70, 71, 77, 78, 79, 80, 81, 83, 84, 92, 101, 102, 103, 104, 105], "zoo": [67, 69, 70, 71, 77, 78, 79, 80, 81, 83, 84, 92, 101, 102, 103, 104, 105], "reward": [67, 178], "num_class": 68, "classifi": 68, "per": [68, 76, 124], "intern": [68, 77, 78, 88, 116], "multipli": [68, 156, 158, 180], "b_k": [68, 71, 83, 101, 103, 179, 181], "group": [68, 70, 71, 72, 75, 77, 78, 79, 81, 83, 84, 89, 92, 93, 94, 95, 101, 102, 103, 116], "decay_r": 68, "logit": 68, "label": 68, "infer": 68, "ground": 68, "truth": 68, "predict": 68, "were": [68, 72], "averag": [68, 101, 102, 103, 134], "nclass": 68, "ndim": 68, "l_1": 68, "raw": 68, "recalcul": 68, "bigl": 69, "f_": [69, 120, 156, 178], "bigr": 69, "x_n": 69, "tau_n": 69, "rest_v": [70, 71, 79, 80, 81, 83, 84, 92, 101, 103, 111, 112, 114], "reset_v": [70, 71, 79, 80, 83, 84, 92, 113], "thresh_eq_v": [70, 81, 181], "refrac_t": [70, 71, 79, 80, 81, 83, 84, 92, 113, 114, 120], "tc_membran": [70, 71, 81, 83], "tc_adapt": [70, 71, 83], "spike_incr": [70, 71, 81, 83, 101, 102], "resist": [70, 71, 79, 80, 81, 83, 84, 92, 111, 112, 180], "batch_siz": [70, 71, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 115, 116], "adaptationmixin": [70, 71, 81, 83], "voltagemixin": [70, 71, 79, 80, 81, 83, 84, 92], "spikerefractorymixin": [70, 71, 79, 80, 81, 83, 84, 92], "leaki": [70, 80, 81, 84, 176], "v_m": [70, 71, 79, 81, 83, 84, 92, 101, 103, 111, 112, 113, 114, 179, 180, 181], "rest": [70, 71, 77, 78, 79, 80, 81, 83, 84, 89, 92, 94, 101, 103, 111, 112, 114, 179, 180, 181], "r_mi": [70, 71, 79, 81, 83, 84, 92, 111, 112, 180, 181], "tau_m": [70, 71, 79, 81, 83, 84, 92, 111, 112, 180, 181], "theta_": [70, 81, 103, 105, 179, 180, 181], "sum_k": [70, 71, 81, 83, 179, 180, 181], "theta_k": [70, 81, 102, 103, 105, 179, 180], "tau_k": [70, 71, 83, 101, 102, 179, 180, 181], "leftarrow": [70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 113, 114, 179, 180, 181], "d_k": [70, 81, 83, 179, 180, 181], "equilibrium": [70, 71, 79, 81, 83, 84, 92, 101, 103, 105, 111, 112, 114, 179, 180, 181], "mv": [70, 71, 79, 81, 83, 84, 92, 101, 102, 103, 105, 111, 112, 113, 114, 121, 179, 180, 181], "refractori": [70, 71, 79, 80, 81, 82, 83, 84, 89, 92, 101, 102, 103, 106, 107, 111, 112, 113, 114, 119, 120], "period": [70, 71, 79, 80, 81, 82, 83, 84, 89, 92, 101, 102, 103, 106, 107, 111, 112, 113, 114, 119, 120], "r_m": [70, 71, 79, 81, 83, 84, 92, 111, 112, 180], "omega": [70, 71, 79, 81, 83, 84, 92, 111, 112, 180], "keep_adapt": [70, 71, 81, 83], "refrac_lock": [70, 71, 79, 80, 81, 83, 84, 92], "na": [70, 71, 79, 80, 81, 83, 84, 92, 101, 104, 111, 112, 113, 114, 118, 122, 123, 125, 179, 180, 181, 183], "additon": 117, "lead": 117, "unreduc": 117, "batchedshap": 116, "batchsz": [75, 89, 115, 116], "replic": [91, 109, 110, 116], "refrac": [82, 89, 101, 102, 103, 106, 107, 113, 114, 119, 120], "millivolt": [73, 89, 121], "rheobase_v": [71, 79], "thresh_v": [71, 79, 80, 83, 84, 92, 113, 114, 181], "voltage_coupl": [71, 83, 101], "delta_t": [71, 79, 181], "v_t": [71, 79, 181], "i_x": [71, 78, 83, 179, 181, 183], "w_k": [71, 83, 101, 104, 179, 181], "a_k": [71, 101, 102, 103, 179, 181], "approach": [71, 79, 181], "rapidli": [71, 79], "steep": [71, 79, 181], "natur": [71, 79, 83, 92, 112, 152, 153, 154], "abov": [71, 79, 179, 181], "rheobas": [71, 79, 181], "strength": [71, 83, 92, 101, 112], "coupl": [71, 83, 101, 179, 181], "mu": [71, 83, 101, 152, 153, 179, 180, 181], "onetoon": [72, 76, 86, 87, 88, 93, 113, 114, 135, 136, 145, 146], "combin": 72, "stack": 72, "prod": [72, 86, 87, 88], "complet": 72, "bipartit": 72, "graph": 72, "third": 72, "take": [72, 108, 122, 126, 142, 151, 159, 160, 161, 162, 163, 164, 165, 166], "einop": 72, "produc": [72, 73], "receiv": [72, 93, 138, 178], "ouput": 72, "__call__": [72, 85], "captur": [72, 93], "py": [72, 75, 76, 85, 86, 87, 88, 93], "meth": [72, 75, 76, 86, 87, 88, 93], "specifyi": [72, 85, 93], "add_connect": [72, 85, 93], "add_neuron": [72, 85, 93], "hasn": [72, 85, 93], "been": [72, 85, 93, 136], "pair": [72, 73, 85, 93], "del_connect": [72, 85, 93], "del_neuron": [72, 85, 93], "wire": [72, 85, 93, 178], "topologi": [72, 93], "submodul": [73, 140], "compos": [73, 75, 133], "local_remap": 73, "local": 73, "remap": 73, "callback": 73, "realign": 73, "postspik": 73, "postvoltag": 73, "precurr": 73, "syncurr": [73, 75], "synapt": [73, 75, 76, 77, 78, 86, 87, 88, 94, 122, 123, 124, 125, 126], "prespik": 73, "synspik": [73, 75], "statehook": [74, 90], "batched_inshap": 75, "batched_outshap": [75, 86, 87, 88], "bia": [75, 76, 86, 87, 88, 98, 99], "learnabl": [75, 76, 86, 87, 88, 98, 99, 100], "clearabl": 75, "defaultupdat": [75, 96], "exclude_weight": 75, "exclude_bia": 75, "exclude_delai": 75, "delayedbi": 75, "maxmimum": 75, "inshap": [75, 76, 86, 87, 88], "insiz": 75, "cach": 75, "refresh": 75, "like_input": [75, 76, 86, 87, 88], "like_synapt": [75, 76, 86, 87, 88], "outshap": [75, 76, 86, 87, 88], "outsiz": 75, "postsyn_recept": [75, 76, 86, 87, 88], "presyn_recept": [75, 76, 86, 87, 88], "selector": [75, 76, 77, 78, 86, 87, 88, 94, 124], "height": 76, "width": 76, "channel": 76, "kernel": 76, "stride": 76, "dilat": 76, "synapseconstructor": [76, 77, 78, 86, 87, 88, 94], "weight_init": [76, 86, 87, 88], "bias_init": [76, 86, 87, 88], "delay_init": [76, 86, 87, 88], "weightbiasdelaymixin": [76, 86, 87, 88], "convolut": 76, "spatial": 76, "plane": 76, "kh": 76, "kw": 76, "delay_": [76, 86, 87, 98], "effect": [76, 86, 87, 179, 181], "unless": [76, 86, 87, 139, 144], "later": [76, 86, 87], "uniform": [76, 86, 87, 88], "random": [76, 86, 87, 88, 128, 152, 153, 154, 167], "rand": [76, 86, 87, 88, 167], "anoth": [76, 124], "h_": 76, "w_": 76, "formula": 76, "document": 76, "lfloor": [76, 154], "p_h": 76, "d_h": 76, "k_h": 76, "s_h": 76, "rfloor": [76, 154], "p_w": 76, "d_w": 76, "k_w": 76, "s_w": 76, "ph": 76, "pw": 76, "side": [76, 180], "dh": 76, "dw": [76, 178], "sh": [76, 130, 131, 145, 146, 156, 158], "sw": 76, "reli": 76, "upon": [76, 181], "consequenti": 76, "memori": 76, "spike_q": [77, 78], "interp_mod": [77, 78], "interp_tol": [77, 78], "current_overbound": [77, 78], "spike_overbound": [77, 78], "delayedspikecurrentaccessormixin": [77, 78], "spikederivedcurrentmixin": 77, "memoryless": [77, 78], "respond": [77, 78, 179], "instantan": [77, 78], "q": [77, 78, 183], "charg": [77, 78, 183], "carri": [77, 78, 183], "pc": [77, 78, 183], "replac": [77, 78, 124], "cuba": [77, 78, 176], "variant": [77, 78, 176], "recordmodul": [77, 78, 94, 122, 123, 124, 125, 126, 127, 144], "partialconstructor": [77, 78, 94, 133, 138, 139, 142, 147], "spikecurrentmixin": 78, "passthrough": [78, 143], "inject": 78, "glif": [80, 81, 176, 179, 180], "lif": [80, 176], "reset_v_add": 81, "reset_v_mul": 81, "rc_adapt": 81, "lambda_k": [81, 180], "m_v": [81, 114, 180], "b_v": [81, 114, 180], "unitless": [81, 83, 92, 112, 114, 155, 156, 157, 158, 181], "frequenc": [82, 91, 106, 107, 108, 109, 110, 179], "compens": [82, 106, 107, 154], "generatormixin": [82, 91], "refractorystepmixin": 82, "encod": [82, 91], "poisson": [82, 91, 106, 107, 108, 109, 110], "distribut": [82, 91, 106, 107, 108, 109, 110, 152, 153, 154], "randomli": [82, 106, 107], "hz": [82, 91, 106, 107, 108, 109, 110], "pseudorandom": [82, 91, 106, 107, 109, 110, 128, 152, 153, 154, 167], "allow": [82, 106, 107, 132, 136, 141, 155, 157, 179], "distanc": [82, 106, 107], "th": [82, 101, 102, 103, 106, 107], "onlin": [82, 91], "intens": [82, 91], "hertz": [82, 91], "pin": 82, "crit_v": [83, 92, 112], "affin": [83, 92, 112], "crit": [83, 92, 112, 181], "drift": [83, 92, 112], "awai": [83, 92, 112, 181], "simultan": 85, "proxi": 85, "connection_nam": [85, 93], "neuron_nam": [85, 93], "primarili": 85, "connection_kwarg": [85, 93], "neuron_kwarg": [85, 93], "capture_intermedi": [85, 93], "turn": [85, 133, 147], "unpack": [85, 136, 138], "get_connect": 85, "get_neuron": 85, "named_connect": 85, "named_neuron": 85, "named_synaps": 85, "accumul": [85, 96, 97], "in_shap": 86, "out_shap": 86, "interc": [86, 88], "m_0": 86, "unbatch": [86, 87, 88], "odot": [87, 88], "inputoutput": [87, 88], "i_n": 88, "lineardens": 88, "creation": 88, "mask": [88, 111, 112, 156, 158], "shapemixin": [89, 94], "epsilon": [90, 129, 132, 141, 155, 157], "12": [90, 129, 179], "norm": [90, 129], "demonin": [90, 129], "stepmixin": 91, "bindsnet": [91, 109, 110], "invers": [91, 109, 110, 180, 183], "wrap": [93, 133, 142, 147], "serial_c": 93, "serial_n": 93, "nanoamper": [94, 118, 123, 124, 126], "current_at": [94, 124], "spike_at": [94, 124], "boolean": 94, "updatesom": 96, "reduct": 97, "taken": 97, "collis": 97, "small": 97, "_get_": 97, "_set_": 97, "_del_": 97, "weakli": 97, "weightbiasmixin": 98, "mixin": [98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "inherit": [98, 99, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "weight_": [98, 99, 100], "bias_": [98, 99], "weightmixin": 99, "maintain": [101, 102, 103, 113, 114], "adapt_r": 103, "rebound_r": 103, "adapt_reset_min": 103, "permit": [103, 156, 158], "adap": [104, 105], "i_": 104, "optioon": [106, 107], "nonsens": [106, 107], "1000": [106, 107], "inhomogen": 108, "exce": 108, "greater": 108, "masked_input": [111, 112], "held": [113, 114], "v_slope": 114, "v_intercept": 114, "batchmixin": 116, "concept": 116, "__shape": 116, "adaptation_": 117, "adapt_batchreduc": 117, "current_": [118, 122, 123, 124, 125], "refrac_": [119, 120], "refractorymixin": 120, "driven": 121, "voltage_": 121, "currentmixin": [122, 125], "therefrom": [122, 126], "_to_spik": [122, 124], "primit": [123, 125, 127], "primitive_curr": 124, "primitive_spik": 124, "current_interp": 124, "spike_interp": 124, "current_overv": 124, "spike_overv": 124, "_to_curr": [124, 126], "spike_": [124, 125, 126, 127], "_current_interp": 124, "_spike_interp": 124, "_current_ob_v": 124, "_spike_ob_v": 124, "_primitive_curr": 124, "_primitive_spik": 124, "_interp_tol": 124, "spikemixin": [125, 126], "randn": 128, "foldingreduc": [130, 131, 132, 134, 135, 141, 143, 145, 146], "condit": [130, 131, 155, 156, 157, 158, 181], "lvert": [130, 132, 141, 145, 155, 156, 157], "scaledcumulativetracereduc": 130, "fold": [130, 131, 132, 134, 135, 137, 141, 143, 145, 146], "cond": [130, 131], "incorpor": [130, 131, 132, 134, 135, 136, 137, 141, 143, 144, 145, 146, 155, 156, 157, 158, 180, 181], "scalednearesttracereduc": 131, "rvert": [132, 141, 155, 157], "filter_": [133, 138, 142, 147], "map_": [133, 138, 142, 147], "op_": 133, "nest": [133, 140, 147], "map": [133, 136, 138, 142, 147], "minu": 133, "op": 133, "ti": [133, 147], "reject": 133, "compar": 133, "reiniti": [133, 136, 139, 144], "decoupl": 134, "datatyp": [135, 145, 146, 156, 158], "infin": 135, "fold_fn": 136, "just": 136, "whatev": 136, "situat": 136, "keepshap": 136, "histor": 136, "dump": [136, 139, 144], "view": [136, 139, 144], "07": [136, 179], "7": 136, "fail": 136, "fall": 136, "foldreduc": 137, "step_data": 137, "sent": 138, "0th": 138, "directli": [139, 143], "weak": 139, "did": 139, "sens": 140, "sensibl": 140, "reduer": [142, 147], "resmin": 149, "resmax": 149, "srcmin": 149, "srcmax": 149, "unchang": 149, "amin": 149, "amax": 149, "shortcut": 150, "squar": 151, "root": 151, "continuousdistribut": [152, 153], "log": [152, 153, 154], "probabl": [152, 153, 154], "mathbb": [152, 153, 154], "sigma": [152, 153], "cdf": [152, 153, 154], "loc": [152, 153], "erf": [152, 153], "sqrt": [152, 153], "standard": [152, 153], "deviat": [152, 153], "logcdf": [152, 153, 154], "logarithm": [152, 153, 154], "logpdf": [152, 153], "densiti": [152, 153], "pi": [152, 153], "likelihood": [152, 153], "sim": [152, 153, 154], "params_mv": [152, 153], "varianc": [152, 153, 154], "mu_x": [152, 153], "sigma_x": [152, 153], "qquad": [152, 153], "pdf": [152, 153], "variat": [152, 153, 154], "mathcal": [152, 153, 178], "sample_mv": [152, 153], "var": [152, 153, 154], "lnormal": 153, "discretedistribut": 154, "_0": 154, "logpmf": 154, "mass": 154, "pmf": 154, "metal": 154, "shader": 154, "accordingli": 154, "degener": 154, "init": [155, 156, 157, 158], "matchfn": [156, 158], "trace_cumul": 156, "predic": [156, 158], "sf": 156, "x_t": 156, "trace_nearest": 158, "arbitrari": [159, 160, 161, 162, 163, 164], "uniformli": 167, "depth": 176, "academ": 176, "plan": 176, "futur": 176, "alif": 176, "3": [176, 181], "4": [176, 179, 181], "5": [176, 181], "nonlinear": 176, "qif": 176, "izhikevich": 176, "eif": 176, "adex": 176, "conduct": [176, 180], "coba": 176, "stdp": 176, "mstdp": 176, "mstdpet": 176, "triplet": 176, "resum": 176, "tbd": 177, "summar": 178, "afterward": 178, "causal": 178, "phrase": [178, 180], "revers": 178, "direct": 178, "below": [178, 179, 181], "written": 178, "commonli": 178, "sum_": 178, "With": [178, 179, 180, 181], "dirac": [178, 183], "w_t": 178, "pp": 178, "xi": 178, "phi_": 178, "dp": 178, "phi_n": 178, "_n": 178, "zeta": 178, "10": [178, 179, 180, 181], "1162": [178, 179], "neco": [178, 179], "2007": 178, "19": 178, "1468": 178, "z": 178, "dz": 178, "impos": 179, "regard": 179, "impli": 179, "steadi": 179, "give": 179, "degre": 179, "freedom": 179, "modif": 179, "dampen": 179, "amplifi": 179, "said": 179, "latter": [179, 181], "dw_k": [179, 181], "approx": [179, 181], "subthreshold": [179, 181], "doi": [179, 180, 181], "1017": [179, 180, 181], "cbo9781107447615": [179, 180, 181], "1152": 179, "jn": 179, "00686": 179, "2005": 179, "Be": [179, 180], "1038": [179, 180], "s41467": [179, 180], "017": [179, 180], "02717": [179, 180], "allen": [179, 180], "institut": [179, 180], "whitepap": [179, 180], "rebound": 179, "2008": 179, "680": 179, "neco_a_00196": 179, "1803": 179, "09574": 179, "021": 179, "24427": 179, "8": [179, 181], "00234": 179, "2019": 179, "dv_m": [180, 181], "basic": 180, "rule": 180, "slope": [180, 181], "show": [180, 181], "v_r": [180, 181], "60": [180, 181], "plot": [180, 181], "c_m": 180, "g_l": 180, "capacit": 180, "nf": 180, "leak": 180, "expos": 180, "isbn": [180, 181, 183], "9780262548083": [180, 181, 183], "020": 180, "17236": 180, "fraction": 180, "intercept": 180, "convent": 180, "conting": 180, "reach": 180, "critic": 181, "tendenc": 181, "stabl": 181, "unstabl": 181, "attract": 181, "repel": 181, "v_c": 181, "50": 181, "depeend": 181, "3390": 181, "brainsci12070863": 181, "7551": 181, "mitpress": 181, "2526": 181, "001": 181, "0001": 181, "close": 181, "rapid": 181, "upsw": 181, "rightarrow": 181, "easi": 181, "confus": 181, "unrel": 181, "occasion": 181, "denot": 181, "vartheta_": 181, "rh": 181, "thresh": 181, "usual": 181, "simuat": 181, "illustr": 181, "4249": 181, "scholarpedia": 181, "8427": 181, "1523": 181, "jneurosci": 181, "23": 181, "37": 181, "11628": 181, "2003": 181, "t_f": 183, "extern": 183, "veri": 183, "role": 183, "deliv": 183, "dramat": 183}, "objects": {"inferno": [[6, 0, 1, "", "ContextualHook"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "Hook"], [9, 0, 1, "", "Module"], [10, 0, 1, "", "RecordModule"], [11, 0, 1, "", "RecordTensor"], [12, 0, 1, "", "ShapedTensor"], [13, 0, 1, "", "StateHook"], [14, 4, 1, "", "astensors"], [26, 4, 1, "", "empty"], [27, 4, 1, "", "exp"], [28, 4, 1, "", "exponential_smoothing"], [29, 4, 1, "", "full"], [5, 5, 0, "-", "functional"], [57, 4, 1, "", "holt_linear_smoothing"], [64, 4, 1, "", "isi"], [171, 5, 0, "-", "learn"], [172, 5, 0, "-", "neural"], [128, 4, 1, "", "normal"], [129, 4, 1, "", "normalize"], [148, 4, 1, "", "ones"], [149, 4, 1, "", "rescale"], [150, 4, 1, "", "scalar"], [151, 4, 1, "", "sqrt"], [175, 5, 0, "-", "stats"], [155, 4, 1, "", "trace_cumulative"], [156, 4, 1, "", "trace_cumulative_scaled"], [157, 4, 1, "", "trace_nearest"], [158, 4, 1, "", "trace_nearest_scaled"], [167, 4, 1, "", "uniform"], [168, 4, 1, "", "zeros"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "dims"], [7, 1, 1, "", "dims_"], [7, 1, 1, "", "extra_repr"], [7, 2, 1, "", "liveconstrain"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"], [7, 1, 1, "", "validate"]], "inferno.Hook": [[8, 1, 1, "", "deregister"], [8, 2, 1, "", "evalexec"], [8, 1, 1, "", "register"], [8, 2, 1, "", "registered"], [8, 2, 1, "", "trainexec"]], "inferno.Module": [[9, 1, 1, "", "get_extra"], [9, 1, 1, "", "get_extra_state"], [9, 1, 1, "", "register_extra"], [9, 1, 1, "", "set_extra_state"]], "inferno.RecordModule": [[10, 1, 1, "", "aligned"], [10, 1, 1, "", "deregister_constrained"], [10, 2, 1, "", "dt"], [10, 2, 1, "", "duration"], [10, 1, 1, "", "latest"], [10, 1, 1, "", "reconstrain"], [10, 1, 1, "", "record"], [10, 2, 1, "", "recordsz"], [10, 1, 1, "", "register_constrained"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "select"]], "inferno.RecordTensor": [[11, 3, 1, "", "LinkedAttributes"], [11, 1, 1, "", "align"], [11, 2, 1, "", "attributes"], [11, 2, 1, "", "constraints"], [11, 1, 1, "", "create"], [11, 1, 1, "", "decr"], [11, 1, 1, "", "deinitialize"], [11, 2, 1, "", "dt"], [11, 2, 1, "", "duration"], [11, 1, 1, "", "incr"], [11, 1, 1, "", "initialize"], [11, 1, 1, "", "insert"], [11, 2, 1, "", "latest"], [11, 1, 1, "", "peek"], [11, 2, 1, "", "pointer"], [11, 1, 1, "", "pop"], [11, 1, 1, "", "push"], [11, 1, 1, "", "read"], [11, 1, 1, "", "readrange"], [11, 1, 1, "", "reconstrain"], [11, 2, 1, "", "recordsz"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "select"], [11, 2, 1, "", "shape"], [11, 2, 1, "", "value"], [11, 1, 1, "", "write"]], "inferno.ShapedTensor": [[12, 3, 1, "", "LinkedAttributes"], [12, 2, 1, "", "attributes"], [12, 1, 1, "", "compatible"], [12, 2, 1, "", "constraints"], [12, 1, 1, "", "create"], [12, 2, 1, "", "dimensionality"], [12, 2, 1, "", "ignored"], [12, 2, 1, "", "live"], [12, 2, 1, "", "name"], [12, 2, 1, "", "owner"], [12, 1, 1, "", "reconstrain"], [12, 1, 1, "", "resize"], [12, 2, 1, "", "strict"], [12, 2, 1, "", "valid"], [12, 2, 1, "", "value"]], "inferno.StateHook": [[13, 1, 1, "", "forward"], [13, 1, 1, "", "hook"], [13, 2, 1, "", "module"], [13, 1, 1, "", "register"]], "inferno.bounding": [[15, 0, 1, "", "FullBounding"], [16, 0, 1, "", "HalfBounding"], [17, 4, 1, "", "lower_multiplicative"], [18, 4, 1, "", "lower_power"], [19, 4, 1, "", "lower_sharp"], [20, 4, 1, "", "multiplicative"], [21, 4, 1, "", "power"], [22, 4, 1, "", "sharp"], [23, 4, 1, "", "upper_multiplicative"], [24, 4, 1, "", "upper_power"], [25, 4, 1, "", "upper_sharp"]], "inferno.functional": [[30, 0, 1, "", "Extrapolation"], [31, 0, 1, "", "FullBounding"], [32, 0, 1, "", "HalfBounding"], [33, 0, 1, "", "Interpolation"], [34, 4, 1, "", "bound_lower_multiplicative"], [35, 4, 1, "", "bound_lower_power"], [36, 4, 1, "", "bound_lower_sharp"], [37, 4, 1, "", "bound_multiplicative"], [38, 4, 1, "", "bound_power"], [39, 4, 1, "", "bound_sharp"], [40, 4, 1, "", "bound_upper_multiplicative"], [41, 4, 1, "", "bound_upper_power"], [42, 4, 1, "", "bound_upper_sharp"], [43, 4, 1, "", "extrap_expdecay"], [44, 4, 1, "", "extrap_expratedecay"], [45, 4, 1, "", "extrap_linear_backward"], [46, 4, 1, "", "extrap_linear_forward"], [47, 4, 1, "", "extrap_nearest"], [48, 4, 1, "", "extrap_neighbors"], [49, 4, 1, "", "extrap_next"], [50, 4, 1, "", "extrap_previous"], [51, 4, 1, "", "interp_expdecay"], [52, 4, 1, "", "interp_expratedecay"], [53, 4, 1, "", "interp_linear"], [54, 4, 1, "", "interp_nearest"], [55, 4, 1, "", "interp_next"], [56, 4, 1, "", "interp_previous"]], "inferno.interpolation": [[58, 0, 1, "", "Interpolation"], [59, 4, 1, "", "expdecay"], [60, 4, 1, "", "expratedecay"], [61, 4, 1, "", "linear"], [62, 4, 1, "", "nearest"], [63, 4, 1, "", "previous"]], "inferno.learn": [[65, 0, 1, "", "CellTrainer"], [66, 0, 1, "", "IndependentTrainer"], [67, 0, 1, "", "MSTDPET"], [68, 0, 1, "", "MaxRateClassifier"], [69, 0, 1, "", "STDP"]], "inferno.learn.CellTrainer": [[65, 1, 1, "", "add_cell"], [65, 1, 1, "", "add_monitor"], [65, 2, 1, "", "cells"], [65, 1, 1, "", "clear"], [65, 1, 1, "", "del_cell"], [65, 1, 1, "", "del_monitor"], [65, 1, 1, "", "forward"], [65, 1, 1, "", "get_cell"], [65, 1, 1, "", "get_monitor"], [65, 2, 1, "", "monitors"], [65, 2, 1, "", "named_cells"], [65, 2, 1, "", "named_monitors"], [65, 1, 1, "", "named_monitors_of"], [65, 1, 1, "", "train"], [65, 1, 1, "", "update"]], "inferno.learn.IndependentTrainer": [[66, 0, 1, "", "Unit"], [66, 1, 1, "", "register_cell"], [66, 1, 1, "", "unit"]], "inferno.learn.IndependentTrainer.Unit": [[66, 3, 1, "", "cell"], [66, 3, 1, "", "monitors"], [66, 3, 1, "", "state"]], "inferno.learn.MSTDPET": [[67, 1, 1, "", "clear"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "register_cell"]], "inferno.learn.MaxRateClassifier": [[68, 2, 1, "", "assignments"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "infer"], [68, 1, 1, "", "learn"], [68, 2, 1, "", "nclass"], [68, 2, 1, "", "ndim"], [68, 2, 1, "", "occurances"], [68, 2, 1, "", "proportional"], [68, 2, 1, "", "proportions"], [68, 2, 1, "", "rates"], [68, 2, 1, "", "shape"]], "inferno.learn.STDP": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "register_cell"]], "inferno.neural": [[70, 0, 1, "", "ALIF"], [71, 0, 1, "", "AdEx"], [72, 0, 1, "", "Biclique"], [73, 0, 1, "", "Cell"], [74, 0, 1, "", "Clamping"], [75, 0, 1, "", "Connection"], [76, 0, 1, "", "Conv2D"], [77, 0, 1, "", "DeltaCurrent"], [78, 0, 1, "", "DeltaPlusCurrent"], [79, 0, 1, "", "EIF"], [80, 0, 1, "", "GLIF1"], [81, 0, 1, "", "GLIF2"], [82, 0, 1, "", "HomogeneousPoissonEncoder"], [83, 0, 1, "", "Izhikevich"], [84, 0, 1, "", "LIF"], [85, 0, 1, "", "Layer"], [86, 0, 1, "", "LinearDense"], [87, 0, 1, "", "LinearDirect"], [88, 0, 1, "", "LinearLateral"], [89, 0, 1, "", "Neuron"], [90, 0, 1, "", "Normalization"], [91, 0, 1, "", "PoissonIntervalEncoder"], [92, 0, 1, "", "QIF"], [93, 0, 1, "", "Serial"], [94, 0, 1, "", "Synapse"], [95, 0, 1, "", "SynapseConstructor"], [96, 0, 1, "", "Updatable"], [97, 0, 1, "", "Updater"], [173, 5, 0, "-", "functional"]], "inferno.neural.ALIF": [[70, 1, 1, "", "clear"], [70, 2, 1, "", "dt"], [70, 1, 1, "", "forward"]], "inferno.neural.AdEx": [[71, 1, 1, "", "clear"], [71, 2, 1, "", "dt"], [71, 1, 1, "", "forward"]], "inferno.neural.Biclique": [[72, 1, 1, "", "add_cell"], [72, 1, 1, "", "add_connection"], [72, 1, 1, "", "add_neuron"], [72, 1, 1, "", "del_cell"], [72, 1, 1, "", "del_connection"], [72, 1, 1, "", "del_neuron"], [72, 1, 1, "", "wiring"]], "inferno.neural.Cell": [[73, 2, 1, "", "connection"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "local_remap"], [73, 2, 1, "", "neuron"], [73, 2, 1, "", "postspike"], [73, 2, 1, "", "postvoltage"], [73, 2, 1, "", "precurrent"], [73, 2, 1, "", "prespike"], [73, 2, 1, "", "synapse"], [73, 2, 1, "", "updater"]], "inferno.neural.Clamping": [[74, 1, 1, "", "hook"]], "inferno.neural.Connection": [[75, 2, 1, "", "batched_inshape"], [75, 2, 1, "", "batched_outshape"], [75, 2, 1, "", "batchsz"], [75, 2, 1, "", "bias"], [75, 2, 1, "", "biased"], [75, 1, 1, "", "clear"], [75, 1, 1, "", "defaultupdater"], [75, 2, 1, "", "delay"], [75, 2, 1, "", "delayedby"], [75, 2, 1, "", "dt"], [75, 1, 1, "", "extra_repr"], [75, 1, 1, "", "forward"], [75, 2, 1, "", "inshape"], [75, 1, 1, "", "insize"], [75, 1, 1, "", "like_input"], [75, 1, 1, "", "like_synaptic"], [75, 2, 1, "", "outshape"], [75, 1, 1, "", "outsize"], [75, 1, 1, "", "postsyn_receptive"], [75, 1, 1, "", "presyn_receptive"], [75, 2, 1, "", "selector"], [75, 2, 1, "", "synapse"], [75, 2, 1, "", "syncurrent"], [75, 2, 1, "", "synspike"], [75, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[76, 1, 1, "", "forward"], [76, 2, 1, "", "inshape"], [76, 1, 1, "", "like_input"], [76, 1, 1, "", "like_synaptic"], [76, 2, 1, "", "outshape"], [76, 1, 1, "", "postsyn_receptive"], [76, 1, 1, "", "presyn_receptive"], [76, 2, 1, "", "selector"]], "inferno.neural.DeltaCurrent": [[77, 1, 1, "", "clear"], [77, 2, 1, "", "dt"], [77, 1, 1, "", "forward"], [77, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[78, 1, 1, "", "clear"], [78, 2, 1, "", "dt"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[79, 1, 1, "", "clear"], [79, 2, 1, "", "dt"], [79, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[80, 1, 1, "", "clear"], [80, 2, 1, "", "dt"], [80, 1, 1, "", "forward"]], "inferno.neural.GLIF2": [[81, 1, 1, "", "clear"], [81, 2, 1, "", "dt"], [81, 1, 1, "", "forward"]], "inferno.neural.HomogeneousPoissonEncoder": [[82, 2, 1, "", "compensated"], [82, 1, 1, "", "forward"], [82, 2, 1, "", "frequency"], [82, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[83, 1, 1, "", "clear"], [83, 2, 1, "", "dt"], [83, 1, 1, "", "forward"]], "inferno.neural.LIF": [[84, 1, 1, "", "clear"], [84, 2, 1, "", "dt"], [84, 1, 1, "", "forward"]], "inferno.neural.Layer": [[85, 1, 1, "", "add_cell"], [85, 1, 1, "", "add_connection"], [85, 1, 1, "", "add_neuron"], [85, 2, 1, "", "cells"], [85, 2, 1, "", "connections"], [85, 1, 1, "", "del_cell"], [85, 1, 1, "", "del_connection"], [85, 1, 1, "", "del_neuron"], [85, 1, 1, "", "forward"], [85, 1, 1, "", "get_cell"], [85, 1, 1, "", "get_connection"], [85, 1, 1, "", "get_neuron"], [85, 2, 1, "", "named_cells"], [85, 2, 1, "", "named_connections"], [85, 2, 1, "", "named_neurons"], [85, 2, 1, "", "named_synapses"], [85, 2, 1, "", "neurons"], [85, 1, 1, "", "update"], [85, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[86, 1, 1, "", "forward"], [86, 2, 1, "", "inshape"], [86, 1, 1, "", "like_input"], [86, 1, 1, "", "like_synaptic"], [86, 2, 1, "", "outshape"], [86, 1, 1, "", "postsyn_receptive"], [86, 1, 1, "", "presyn_receptive"], [86, 2, 1, "", "selector"]], "inferno.neural.LinearDirect": [[87, 1, 1, "", "forward"], [87, 2, 1, "", "inshape"], [87, 1, 1, "", "like_input"], [87, 1, 1, "", "like_synaptic"], [87, 2, 1, "", "outshape"], [87, 1, 1, "", "postsyn_receptive"], [87, 1, 1, "", "presyn_receptive"], [87, 2, 1, "", "selector"]], "inferno.neural.LinearLateral": [[88, 2, 1, "", "delay"], [88, 1, 1, "", "forward"], [88, 2, 1, "", "inshape"], [88, 1, 1, "", "like_input"], [88, 1, 1, "", "like_synaptic"], [88, 2, 1, "", "outshape"], [88, 1, 1, "", "postsyn_receptive"], [88, 1, 1, "", "presyn_receptive"], [88, 2, 1, "", "selector"], [88, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[89, 2, 1, "", "batchsz"], [89, 1, 1, "", "clear"], [89, 2, 1, "", "dt"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "forward"], [89, 2, 1, "", "refrac"], [89, 2, 1, "", "spike"], [89, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[90, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[91, 1, 1, "", "forward"], [91, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[92, 1, 1, "", "clear"], [92, 2, 1, "", "dt"], [92, 1, 1, "", "forward"]], "inferno.neural.Serial": [[93, 1, 1, "", "add_cell"], [93, 1, 1, "", "add_connection"], [93, 1, 1, "", "add_neuron"], [93, 2, 1, "", "cell"], [93, 2, 1, "", "connection"], [93, 1, 1, "", "del_cell"], [93, 1, 1, "", "del_connection"], [93, 1, 1, "", "del_neuron"], [93, 1, 1, "", "forward"], [93, 2, 1, "", "neuron"], [93, 2, 1, "", "synapse"], [93, 2, 1, "", "updater"], [93, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[94, 1, 1, "", "clear"], [94, 2, 1, "", "current"], [94, 1, 1, "", "current_at"], [94, 2, 1, "", "delay"], [94, 2, 1, "", "dt"], [94, 1, 1, "", "extra_repr"], [94, 1, 1, "", "forward"], [94, 1, 1, "", "partialconstructor"], [94, 2, 1, "", "spike"], [94, 1, 1, "", "spike_at"]], "inferno.neural.Updatable": [[96, 1, 1, "", "clear"], [96, 1, 1, "", "defaultupdater"], [96, 2, 1, "", "updatable"], [96, 1, 1, "", "update"], [96, 2, 1, "", "updater"], [96, 1, 1, "", "updatesome"]], "inferno.neural.Updater": [[97, 1, 1, "", "clear"], [97, 1, 1, "", "forward"], [97, 2, 1, "", "names"], [97, 2, 1, "", "parent"]], "inferno.neural.connections.mixins": [[98, 0, 1, "", "WeightBiasDelayMixin"], [99, 0, 1, "", "WeightBiasMixin"], [100, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[98, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[99, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[100, 2, 1, "", "weight"]], "inferno.neural.functional": [[101, 4, 1, "", "adaptive_currents_linear"], [102, 4, 1, "", "adaptive_thresholds_linear_spike"], [103, 4, 1, "", "adaptive_thresholds_linear_voltage"], [104, 4, 1, "", "apply_adaptive_currents"], [105, 4, 1, "", "apply_adaptive_thresholds"], [106, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [107, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [108, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [109, 4, 1, "", "enc_poisson_interval"], [110, 4, 1, "", "enc_poisson_interval_online"], [111, 4, 1, "", "voltage_integration_linear"], [112, 4, 1, "", "voltage_integration_quadratic"], [113, 4, 1, "", "voltage_thresholding_constant"], [114, 4, 1, "", "voltage_thresholding_linear"]], "inferno.neural.mixins": [[115, 0, 1, "", "BatchMixin"], [116, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[115, 2, 1, "", "batchsz"]], "inferno.neural.mixins.ShapeMixin": [[116, 2, 1, "", "batchedshape"], [116, 2, 1, "", "count"], [116, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[117, 0, 1, "", "AdaptationMixin"], [118, 0, 1, "", "CurrentMixin"], [119, 0, 1, "", "RefractoryMixin"], [120, 0, 1, "", "SpikeRefractoryMixin"], [121, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[117, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[118, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[119, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[120, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[121, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[122, 0, 1, "", "CurrentDerivedSpikeMixin"], [123, 0, 1, "", "CurrentMixin"], [124, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [125, 0, 1, "", "SpikeCurrentMixin"], [126, 0, 1, "", "SpikeDerivedCurrentMixin"], [127, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[122, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[123, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[124, 1, 1, "", "current_at"], [124, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[126, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[127, 2, 1, "", "spike"]], "inferno.observe": [[130, 0, 1, "", "ConditionalCumulativeTraceReducer"], [131, 0, 1, "", "ConditionalNearestTraceReducer"], [132, 0, 1, "", "CumulativeTraceReducer"], [133, 0, 1, "", "DifferenceMonitor"], [134, 0, 1, "", "EMAReducer"], [135, 0, 1, "", "EventReducer"], [136, 0, 1, "", "FoldReducer"], [137, 0, 1, "", "FoldingReducer"], [138, 0, 1, "", "InputMonitor"], [139, 0, 1, "", "Monitor"], [140, 0, 1, "", "MonitorConstructor"], [141, 0, 1, "", "NearestTraceReducer"], [142, 0, 1, "", "OutputMonitor"], [143, 0, 1, "", "PassthroughReducer"], [144, 0, 1, "", "Reducer"], [145, 0, 1, "", "ScaledCumulativeTraceReducer"], [146, 0, 1, "", "ScaledNearestTraceReducer"], [147, 0, 1, "", "StateMonitor"]], "inferno.observe.ConditionalCumulativeTraceReducer": [[130, 2, 1, "", "dt"], [130, 1, 1, "", "fold"], [130, 1, 1, "", "initialize"], [130, 1, 1, "", "interpolate"]], "inferno.observe.ConditionalNearestTraceReducer": [[131, 2, 1, "", "dt"], [131, 1, 1, "", "fold"], [131, 1, 1, "", "initialize"], [131, 1, 1, "", "interpolate"]], "inferno.observe.CumulativeTraceReducer": [[132, 2, 1, "", "dt"], [132, 1, 1, "", "fold"], [132, 1, 1, "", "initialize"], [132, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[133, 1, 1, "", "clear"], [133, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[134, 1, 1, "", "fold"], [134, 1, 1, "", "initialize"], [134, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[135, 1, 1, "", "fold"], [135, 1, 1, "", "initialize"], [135, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[136, 1, 1, "", "clear"], [136, 2, 1, "", "data"], [136, 2, 1, "", "dt"], [136, 1, 1, "", "dump"], [136, 2, 1, "", "duration"], [136, 1, 1, "", "forward"], [136, 1, 1, "", "peek"], [136, 1, 1, "", "push"], [136, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[137, 1, 1, "", "fold"], [137, 1, 1, "", "initialize"], [137, 1, 1, "", "interpolate"]], "inferno.observe.InputMonitor": [[138, 1, 1, "", "partialconstructor"]], "inferno.observe.Monitor": [[139, 1, 1, "", "clear"], [139, 1, 1, "", "dump"], [139, 1, 1, "", "partialconstructor"], [139, 1, 1, "", "peek"], [139, 2, 1, "", "peeked"], [139, 2, 1, "", "reducer"], [139, 1, 1, "", "register"], [139, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[141, 2, 1, "", "dt"], [141, 1, 1, "", "fold"], [141, 1, 1, "", "initialize"], [141, 1, 1, "", "interpolate"]], "inferno.observe.OutputMonitor": [[142, 1, 1, "", "partialconstructor"]], "inferno.observe.PassthroughReducer": [[143, 1, 1, "", "fold"], [143, 1, 1, "", "initialize"], [143, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[144, 1, 1, "", "clear"], [144, 1, 1, "", "dump"], [144, 1, 1, "", "forward"], [144, 1, 1, "", "peek"], [144, 2, 1, "", "peeked"], [144, 1, 1, "", "push"], [144, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[145, 2, 1, "", "dt"], [145, 1, 1, "", "fold"], [145, 1, 1, "", "initialize"], [145, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[146, 2, 1, "", "dt"], [146, 1, 1, "", "fold"], [146, 1, 1, "", "initialize"], [146, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[147, 1, 1, "", "partialconstructor"]], "inferno.stats": [[152, 0, 1, "", "LogNormal"], [153, 0, 1, "", "Normal"], [154, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[152, 1, 1, "", "cdf"], [152, 1, 1, "", "logcdf"], [152, 1, 1, "", "logpdf"], [152, 1, 1, "", "mean"], [152, 1, 1, "", "params_mv"], [152, 1, 1, "", "pdf"], [152, 1, 1, "", "sample"], [152, 1, 1, "", "sample_mv"], [152, 1, 1, "", "validate"], [152, 1, 1, "", "variance"]], "inferno.stats.Normal": [[153, 1, 1, "", "cdf"], [153, 1, 1, "", "logcdf"], [153, 1, 1, "", "logpdf"], [153, 1, 1, "", "mean"], [153, 1, 1, "", "params_mv"], [153, 1, 1, "", "pdf"], [153, 1, 1, "", "sample"], [153, 1, 1, "", "sample_mv"], [153, 1, 1, "", "validate"], [153, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[154, 1, 1, "", "cdf"], [154, 1, 1, "", "logcdf"], [154, 1, 1, "", "logpmf"], [154, 1, 1, "", "mean"], [154, 1, 1, "", "pmf"], [154, 1, 1, "", "sample"], [154, 1, 1, "", "validate"], [154, 1, 1, "", "variance"]], "inferno.types": [[159, 0, 1, "", "ManyToMany"], [160, 0, 1, "", "ManyToManyMethod"], [161, 0, 1, "", "ManyToOne"], [162, 0, 1, "", "ManyToOneMethod"], [163, 0, 1, "", "OneToMany"], [164, 0, 1, "", "OneToManyMethod"], [165, 0, 1, "", "OneToOne"], [166, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 171, 178], "simul": 0, "refractori": [0, 3], "period": [0, 3], "model": [0, 172, 176, 180, 181, 182, 183], "save": 0, "restor": 0, "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 181], "decai": 2, "constant": 2, "trace": [2, 170, 178], "cumul": 2, "nearest": [2, 62], "scale": 2, "paramet": [2, 152, 153, 154, 170], "depend": [2, 171, 178, 179], "soft": 2, "hard": 2, "dirac": 2, "delta": [2, 182, 183], "heavisid": 2, "step": 2, "function": [2, 5, 173], "relationship": 2, "neuron": [3, 89, 172, 173, 176, 179, 180, 181], "system": 3, "dynam": [3, 173], "welcom": 4, "inferno": [4, 5, 170, 171, 172, 173, 174, 175], "": 4, "document": 4, "protocol": 5, "bound": [5, 170], "interpol": [5, 33, 58, 170], "extrapol": [5, 30], "contextualhook": 6, "dimensionalmodul": 7, "hook": [8, 172], "modul": [9, 178], "recordmodul": 10, "shape": [10, 11, 64, 67, 68, 75, 76, 82, 86, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 110, 124, 136], "recordtensor": 11, "shapedtensor": 12, "statehook": 13, "astensor": 14, "fullbound": [15, 31], "halfbound": [16, 32], "lower_multipl": 17, "lower_pow": 18, "lower_sharp": 19, "multipl": 20, "power": 21, "sharp": 22, "upper_multipl": 23, "upper_pow": 24, "upper_sharp": 25, "empti": 26, "exp": 27, "exponential_smooth": 28, "full": 29, "bound_lower_multipl": 34, "bound_lower_pow": 35, "bound_lower_sharp": 36, "bound_multipl": 37, "bound_pow": 38, "bound_sharp": 39, "bound_upper_multipl": 40, "bound_upper_pow": 41, "bound_upper_sharp": 42, "extrap_expdecai": 43, "extrap_expratedecai": 44, "extrap_linear_backward": 45, "extrap_linear_forward": 46, "extrap_nearest": 47, "extrap_neighbor": 48, "extrap_next": 49, "extrap_previ": 50, "interp_expdecai": 51, "interp_expratedecai": 52, "interp_linear": 53, "interp_nearest": 54, "interp_next": 55, "interp_previ": 56, "holt_linear_smooth": 57, "expdecai": 59, "expratedecai": 60, "linear": [61, 179, 180], "previou": 63, "isi": 64, "celltrain": 65, "independenttrain": 66, "mstdpet": [67, 178], "maxrateclassifi": 68, "stdp": [69, 178], "alif": [70, 180], "adex": [71, 181], "bicliqu": 72, "cell": 73, "clamp": 74, "connect": [75, 172], "conv2d": 76, "deltacurr": 77, "deltapluscurr": 78, "eif": [79, 181], "glif1": [80, 180], "glif2": [81, 180], "homogeneouspoissonencod": 82, "izhikevich": [83, 181], "lif": [84, 180], "layer": 85, "lineardens": 86, "lineardirect": 87, "linearlater": 88, "normal": [90, 128, 129, 153], "poissonintervalencod": 91, "qif": [92, 181], "serial": 93, "synaps": [94, 172, 176, 182, 183], "synapseconstructor": 95, "updat": [96, 97, 171], "weightbiasdelaymixin": 98, "weightbiasmixin": 99, "weightmixin": 100, "adaptive_currents_linear": 101, "adaptive_thresholds_linear_spik": 102, "adaptive_thresholds_linear_voltag": 103, "apply_adaptive_curr": 104, "apply_adaptive_threshold": 105, "enc_homogeneous_poisson_exp_interv": 106, "enc_homogeneous_poisson_exp_interval_onlin": 107, "enc_inhomogenous_poisson_bernoulli_approx": 108, "enc_poisson_interv": 109, "enc_poisson_interval_onlin": 110, "voltage_integration_linear": 111, "voltage_integration_quadrat": 112, "voltage_thresholding_const": 113, "voltage_thresholding_linear": 114, "batchmixin": 115, "shapemixin": 116, "adaptationmixin": 117, "currentmixin": [118, 123], "refractorymixin": 119, "spikerefractorymixin": 120, "voltagemixin": 121, "currentderivedspikemixin": 122, "delayedspikecurrentaccessormixin": 124, "spikecurrentmixin": 125, "spikederivedcurrentmixin": 126, "spikemixin": 127, "conditionalcumulativetracereduc": 130, "conditionalnearesttracereduc": 131, "cumulativetracereduc": 132, "differencemonitor": 133, "emareduc": 134, "eventreduc": 135, "foldreduc": 136, "foldingreduc": 137, "inputmonitor": 138, "monitor": [139, 174], "monitorconstructor": 140, "nearesttracereduc": 141, "outputmonitor": 142, "passthroughreduc": 143, "reduc": [144, 174], "scaledcumulativetracereduc": 145, "scalednearesttracereduc": 146, "statemonitor": 147, "ones": 148, "rescal": 149, "scalar": 150, "sqrt": 151, "lognorm": 152, "support": [152, 153, 154], "poisson": 154, "trace_cumul": 155, "trace_cumulative_sc": 156, "trace_nearest": 157, "trace_nearest_sc": 158, "manytomani": 159, "manytomanymethod": 160, "manytoon": 161, "manytoonemethod": 162, "onetomani": 163, "onetomanymethod": 164, "onetoon": 165, "onetoonemethod": 166, "uniform": 167, "zero": 168, "api": 169, "refer": [169, 178, 179, 180, 181, 183], "infrastructur": 170, "tensor": 170, "creation": 170, "math": 170, "oper": 170, "spike": [170, 171, 178, 179], "type": [170, 172], "learn": [171, 176, 177, 178], "compon": [171, 172, 174], "plastic": [171, 178], "classifi": 171, "neural": [172, 173], "encod": [172, 173], "mixin": 172, "observ": 174, "stat": 175, "distribut": 175, "method": [176, 177, 178], "zoo": 176, "overview": [176, 177, 179], "resum": 177, "like": [177, 178], "hebbian": 178, "formul": [178, 179, 180, 181, 182, 183], "delai": 178, "mstdp": 178, "descript": [178, 180, 181, 183], "elig": 178, "triplet": 178, "adapt": [179, 180, 181], "current": [179, 183], "threshold": 179, "voltag": 179, "leaki": 180, "integr": [180, 181], "fire": [180, 181], "altern": 180, "gener": 180, "1": 180, "2": 180, "3": 180, "glif3": 180, "4": 180, "glif4": 180, "5": 180, "glif5": 180, "nonlinear": 181, "quadrat": 181, "conduct": 182, "base": [182, 183], "coba": 182, "variant": [182, 183], "cuba": 183}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Model Saving and Restoring": [[0, "model-saving-and-restoring"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Trace": [[2, "scaling-trace"]], "Parameter Dependence": [[2, "parameter-dependence"]], "Soft Dependence": [[2, "soft-dependence"]], "Hard Dependence": [[2, "hard-dependence"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "": [[3, "id1"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.functional": [[5, "module-inferno.functional"]], "Protocols": [[5, "protocols"]], "Bounding": [[5, "bounding"]], "Interpolation": [[5, "interpolation"], [33, "interpolation"], [58, "interpolation"], [170, "interpolation"]], "Extrapolation": [[5, "extrapolation"], [30, "extrapolation"]], "astensors": [[14, "astensors"]], "FullBounding": [[15, "fullbounding"], [31, "fullbounding"]], "HalfBounding": [[16, "halfbounding"], [32, "halfbounding"]], "lower_multiplicative": [[17, "lower-multiplicative"]], "lower_power": [[18, "lower-power"]], "lower_sharp": [[19, "lower-sharp"]], "multiplicative": [[20, "multiplicative"]], "power": [[21, "power"]], "sharp": [[22, "sharp"]], "upper_multiplicative": [[23, "upper-multiplicative"]], "upper_power": [[24, "upper-power"]], "upper_sharp": [[25, "upper-sharp"]], "empty": [[26, "empty"]], "exp": [[27, "exp"]], "exponential_smoothing": [[28, "exponential-smoothing"]], "full": [[29, "full"]], "bound_lower_multiplicative": [[34, "bound-lower-multiplicative"]], "bound_lower_power": [[35, "bound-lower-power"]], "bound_lower_sharp": [[36, "bound-lower-sharp"]], "bound_multiplicative": [[37, "bound-multiplicative"]], "bound_power": [[38, "bound-power"]], "bound_sharp": [[39, "bound-sharp"]], "bound_upper_multiplicative": [[40, "bound-upper-multiplicative"]], "bound_upper_power": [[41, "bound-upper-power"]], "bound_upper_sharp": [[42, "bound-upper-sharp"]], "extrap_expdecay": [[43, "extrap-expdecay"]], "extrap_expratedecay": [[44, "extrap-expratedecay"]], "extrap_linear_backward": [[45, "extrap-linear-backward"]], "extrap_linear_forward": [[46, "extrap-linear-forward"]], "extrap_nearest": [[47, "extrap-nearest"]], "extrap_neighbors": [[48, "extrap-neighbors"]], "extrap_next": [[49, "extrap-next"]], "extrap_previous": [[50, "extrap-previous"]], "interp_expdecay": [[51, "interp-expdecay"]], "interp_expratedecay": [[52, "interp-expratedecay"]], "interp_linear": [[53, "interp-linear"]], "interp_nearest": [[54, "interp-nearest"]], "interp_next": [[55, "interp-next"]], "interp_previous": [[56, "interp-previous"]], "holt_linear_smoothing": [[57, "holt-linear-smoothing"]], "expdecay": [[59, "expdecay"]], "expratedecay": [[60, "expratedecay"]], "linear": [[61, "linear"]], "nearest": [[62, "nearest"]], "previous": [[63, "previous"]], "Shape": [[64, null], [67, null], [68, null], [68, null], [68, null], [68, null], [68, null], [68, null], [68, null], [75, null], [75, null], [75, null], [75, null], [76, null], [76, null], [76, null], [76, null], [76, null], [76, null], [76, null], [82, null], [86, null], [86, null], [86, null], [86, null], [86, null], [86, null], [86, null], [87, null], [87, null], [87, null], [87, null], [87, null], [87, null], [87, null], [88, null], [88, null], [88, null], [88, null], [88, null], [88, null], [88, null], [91, null], [101, null], [102, null], [103, null], [106, null], [107, null], [108, null], [109, null], [110, null], [124, null], [124, null], [136, null], [10, null], [11, null], [11, null], [11, null], [11, null], [11, null]], "isi": [[64, "isi"]], "CellTrainer": [[65, "celltrainer"]], "IndependentTrainer": [[66, "independenttrainer"]], "MSTDPET": [[67, "mstdpet"]], "MaxRateClassifier": [[68, "maxrateclassifier"]], "STDP": [[69, "stdp"]], "ALIF": [[70, "alif"]], "AdEx": [[71, "adex"]], "Biclique": [[72, "biclique"]], "Cell": [[73, "cell"]], "Clamping": [[74, "clamping"]], "Connection": [[75, "connection"]], "Conv2D": [[76, "conv2d"]], "DeltaCurrent": [[77, "deltacurrent"]], "DeltaPlusCurrent": [[78, "deltapluscurrent"]], "EIF": [[79, "eif"]], "GLIF1": [[80, "glif1"]], "GLIF2": [[81, "glif2"]], "HomogeneousPoissonEncoder": [[82, "homogeneouspoissonencoder"]], "Izhikevich": [[83, "izhikevich"]], "LIF": [[84, "lif"]], "Layer": [[85, "layer"]], "LinearDense": [[86, "lineardense"]], "LinearDirect": [[87, "lineardirect"]], "LinearLateral": [[88, "linearlateral"]], "Neuron": [[89, "neuron"]], "Normalization": [[90, "normalization"]], "PoissonIntervalEncoder": [[91, "poissonintervalencoder"]], "QIF": [[92, "qif"]], "Serial": [[93, "serial"]], "Synapse": [[94, "synapse"]], "SynapseConstructor": [[95, "synapseconstructor"]], "Updatable": [[96, "updatable"]], "Updater": [[97, "updater"]], "WeightBiasDelayMixin": [[98, "weightbiasdelaymixin"]], "WeightBiasMixin": [[99, "weightbiasmixin"]], "WeightMixin": [[100, "weightmixin"]], "adaptive_currents_linear": [[101, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[102, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[103, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[104, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[105, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[106, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[107, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[108, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[109, "enc-poisson-interval"]], "enc_poisson_interval_online": [[110, "enc-poisson-interval-online"]], "voltage_integration_linear": [[111, "voltage-integration-linear"]], "voltage_integration_quadratic": [[112, "voltage-integration-quadratic"]], "voltage_thresholding_constant": [[113, "voltage-thresholding-constant"]], "voltage_thresholding_linear": [[114, "voltage-thresholding-linear"]], "BatchMixin": [[115, "batchmixin"]], "ShapeMixin": [[116, "shapemixin"]], "AdaptationMixin": [[117, "adaptationmixin"]], "CurrentMixin": [[118, "currentmixin"], [123, "currentmixin"]], "RefractoryMixin": [[119, "refractorymixin"]], "SpikeRefractoryMixin": [[120, "spikerefractorymixin"]], "VoltageMixin": [[121, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[122, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[124, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[125, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[126, "spikederivedcurrentmixin"]], "SpikeMixin": [[127, "spikemixin"]], "normal": [[128, "normal"]], "normalize": [[129, "normalize"]], "ConditionalCumulativeTraceReducer": [[130, "conditionalcumulativetracereducer"]], "ConditionalNearestTraceReducer": [[131, "conditionalnearesttracereducer"]], "CumulativeTraceReducer": [[132, "cumulativetracereducer"]], "DifferenceMonitor": [[133, "differencemonitor"]], "EMAReducer": [[134, "emareducer"]], "EventReducer": [[135, "eventreducer"]], "FoldReducer": [[136, "foldreducer"]], "FoldingReducer": [[137, "foldingreducer"]], "InputMonitor": [[138, "inputmonitor"]], "Monitor": [[139, "monitor"]], "MonitorConstructor": [[140, "monitorconstructor"]], "NearestTraceReducer": [[141, "nearesttracereducer"]], "OutputMonitor": [[142, "outputmonitor"]], "PassthroughReducer": [[143, "passthroughreducer"]], "Reducer": [[144, "reducer"]], "ScaledCumulativeTraceReducer": [[145, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[146, "scalednearesttracereducer"]], "StateMonitor": [[147, "statemonitor"]], "ones": [[148, "ones"]], "rescale": [[149, "rescale"]], "scalar": [[150, "scalar"]], "sqrt": [[151, "sqrt"]], "LogNormal": [[152, "lognormal"]], "Parameters": [[152, null], [153, null], [154, null]], "Support": [[152, null], [153, null], [154, null]], "Normal": [[153, "normal"]], "Poisson": [[154, "poisson"]], "trace_cumulative": [[155, "trace-cumulative"]], "trace_cumulative_scaled": [[156, "trace-cumulative-scaled"]], "trace_nearest": [[157, "trace-nearest"]], "trace_nearest_scaled": [[158, "trace-nearest-scaled"]], "ManyToMany": [[159, "manytomany"]], "ManyToManyMethod": [[160, "manytomanymethod"]], "ManyToOne": [[161, "manytoone"]], "ManyToOneMethod": [[162, "manytoonemethod"]], "OneToMany": [[163, "onetomany"]], "OneToManyMethod": [[164, "onetomanymethod"]], "OneToOne": [[165, "onetoone"]], "OneToOneMethod": [[166, "onetoonemethod"]], "uniform": [[167, "uniform"]], "zeros": [[168, "zeros"]], "API Reference": [[169, "api-reference"]], "inferno": [[170, "inferno"]], "Infrastructure": [[170, "infrastructure"]], "Tensor Creation": [[170, "tensor-creation"]], "Math Operations": [[170, "math-operations"]], "Spike Trace": [[170, "spike-trace"]], "Parameter Bounding": [[170, "parameter-bounding"]], "Types": [[170, "types"], [172, "types"]], "inferno.learn": [[171, "module-inferno.learn"]], "Components": [[171, "components"], [172, "components"], [174, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[171, "updaters-spike-timing-dependent-plasticity"]], "Classifiers": [[171, "classifiers"]], "inferno.neural": [[172, "module-inferno.neural"]], "Modeling": [[172, "modeling"]], "Neurons": [[172, "neurons"], [176, "neurons"]], "Synapses": [[172, "synapses"], [176, "synapses"]], "Connections": [[172, "connections"]], "Encoders": [[172, "encoders"]], "Hooks": [[172, "hooks"]], "Mixins": [[172, "mixins"]], "inferno.neural.functional": [[173, "module-inferno.neural.functional"]], "Encodings": [[173, "encodings"]], "Neuronal Dynamics": [[173, "neuronal-dynamics"]], "inferno.observe": [[174, "inferno-observe"]], "Monitors": [[174, "monitors"]], "Reducers": [[174, "reducers"]], "inferno.stats": [[175, "module-inferno.stats"]], "Distributions": [[175, "distributions"]], "Model and Method Zoo": [[176, "model-and-method-zoo"]], "Overview": [[176, "overview"], [177, "overview"], [179, "overview"]], "Learning Methods": [[176, "learning-methods"]], "ReSuMe-Like Learning Methods": [[177, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[178, "stdp-like-learning-methods"]], "Hebbian Learning": [[178, "hebbian-learning"]], "Spike Timing-Dependent Plasticity (STDP)": [[178, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[178, "formulation"], [178, "id1"], [178, "id2"], [179, "formulation"], [179, "id1"], [179, "id3"], [179, "id5"], [180, "formulation"], [180, "id1"], [180, "id4"], [181, "formulation"], [181, "id1"], [181, "id4"], [181, "id7"], [182, "formulation"], [183, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[178, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[178, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Description": [[178, "description"], [180, "description"], [180, "id2"], [180, "id5"], [181, "description"], [181, "id2"], [181, "id5"], [181, "id8"], [183, "description"]], "References": [[178, "references"], [178, "id3"], [179, "references"], [179, "id2"], [179, "id4"], [179, "id6"], [180, "references"], [180, "id3"], [180, "id6"], [181, "references"], [181, "id3"], [181, "id6"], [181, "id9"], [183, "references"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[178, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Triplet Spike-Timing Dependent Plasticity (STDP)": [[178, "triplet-spike-timing-dependent-plasticity-stdp"]], "Neuronal Adaptation": [[179, "neuronal-adaptation"]], "Adaptive Current, Linear": [[179, "adaptive-current-linear"]], "Adaptive Current, Linear Spike-Dependent": [[179, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[179, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[179, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[180, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[180, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[180, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[180, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[180, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[180, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[180, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[180, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[180, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[181, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[181, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[181, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[181, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[181, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[182, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[182, "delta-coba-variant"]], "Synapse Models, Current-Based": [[183, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[183, "delta-cuba-variant"]], "ContextualHook": [[6, "contextualhook"]], "DimensionalModule": [[7, "dimensionalmodule"]], "Hook": [[8, "hook"]], "Module": [[9, "module"]], "RecordModule": [[10, "recordmodule"]], "RecordTensor": [[11, "recordtensor"]], "ShapedTensor": [[12, "shapedtensor"]], "StateHook": [[13, "statehook"]]}, "indexentries": {"contextualhook (class in inferno)": [[6, "inferno.ContextualHook"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "dims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.dims"]], "dims_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.dims_"]], "extra_repr() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.extra_repr"]], "liveconstrain (dimensionalmodule property)": [[7, "inferno.DimensionalModule.liveconstrain"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "validate() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.validate"]], "hook (class in inferno)": [[8, "inferno.Hook"]], "deregister() (hook method)": [[8, "inferno.Hook.deregister"]], "evalexec (hook property)": [[8, "inferno.Hook.evalexec"]], "register() (hook method)": [[8, "inferno.Hook.register"]], "registered (hook property)": [[8, "inferno.Hook.registered"]], "trainexec (hook property)": [[8, "inferno.Hook.trainexec"]], "module (class in inferno)": [[9, "inferno.Module"]], "get_extra() (module method)": [[9, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[9, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[9, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[9, "inferno.Module.set_extra_state"]], "recordmodule (class in inferno)": [[10, "inferno.RecordModule"]], "aligned() (recordmodule method)": [[10, "inferno.RecordModule.aligned"]], "deregister_constrained() (recordmodule method)": [[10, "inferno.RecordModule.deregister_constrained"]], "dt (recordmodule property)": [[10, "inferno.RecordModule.dt"]], "duration (recordmodule property)": [[10, "inferno.RecordModule.duration"]], "latest() (recordmodule method)": [[10, "inferno.RecordModule.latest"]], "reconstrain() (recordmodule method)": [[10, "inferno.RecordModule.reconstrain"]], "record() (recordmodule method)": [[10, "inferno.RecordModule.record"]], "recordsz (recordmodule property)": [[10, "inferno.RecordModule.recordsz"]], "register_constrained() (recordmodule method)": [[10, "inferno.RecordModule.register_constrained"]], "reset() (recordmodule method)": [[10, "inferno.RecordModule.reset"]], "select() (recordmodule method)": [[10, "inferno.RecordModule.select"]], "linkedattributes (recordtensor attribute)": [[11, "inferno.RecordTensor.LinkedAttributes"]], "recordtensor (class in inferno)": [[11, "inferno.RecordTensor"]], "align() (recordtensor method)": [[11, "inferno.RecordTensor.align"]], "attributes (recordtensor property)": [[11, "inferno.RecordTensor.attributes"]], "constraints (recordtensor property)": [[11, "inferno.RecordTensor.constraints"]], "create() (recordtensor class method)": [[11, "inferno.RecordTensor.create"]], "decr() (recordtensor method)": [[11, "inferno.RecordTensor.decr"]], "deinitialize() (recordtensor method)": [[11, "inferno.RecordTensor.deinitialize"]], "dt (recordtensor property)": [[11, "inferno.RecordTensor.dt"]], "duration (recordtensor property)": [[11, "inferno.RecordTensor.duration"]], "incr() (recordtensor method)": [[11, "inferno.RecordTensor.incr"]], "initialize() (recordtensor method)": [[11, "inferno.RecordTensor.initialize"]], "insert() (recordtensor method)": [[11, "inferno.RecordTensor.insert"]], "latest (recordtensor property)": [[11, "inferno.RecordTensor.latest"]], "peek() (recordtensor method)": [[11, "inferno.RecordTensor.peek"]], "pointer (recordtensor property)": [[11, "inferno.RecordTensor.pointer"]], "pop() (recordtensor method)": [[11, "inferno.RecordTensor.pop"]], "push() (recordtensor method)": [[11, "inferno.RecordTensor.push"]], "read() (recordtensor method)": [[11, "inferno.RecordTensor.read"]], "readrange() (recordtensor method)": [[11, "inferno.RecordTensor.readrange"]], "reconstrain() (recordtensor method)": [[11, "inferno.RecordTensor.reconstrain"]], "recordsz (recordtensor property)": [[11, "inferno.RecordTensor.recordsz"]], "reset() (recordtensor method)": [[11, "inferno.RecordTensor.reset"]], "select() (recordtensor method)": [[11, "inferno.RecordTensor.select"]], "shape (recordtensor property)": [[11, "inferno.RecordTensor.shape"]], "value (recordtensor property)": [[11, "inferno.RecordTensor.value"]], "write() (recordtensor method)": [[11, "inferno.RecordTensor.write"]], "linkedattributes (shapedtensor attribute)": [[12, "inferno.ShapedTensor.LinkedAttributes"]], "shapedtensor (class in inferno)": [[12, "inferno.ShapedTensor"]], "attributes (shapedtensor property)": [[12, "inferno.ShapedTensor.attributes"]], "compatible() (shapedtensor method)": [[12, "inferno.ShapedTensor.compatible"]], "constraints (shapedtensor property)": [[12, "inferno.ShapedTensor.constraints"]], "create() (shapedtensor class method)": [[12, "inferno.ShapedTensor.create"]], "dimensionality (shapedtensor property)": [[12, "inferno.ShapedTensor.dimensionality"]], "ignored (shapedtensor property)": [[12, "inferno.ShapedTensor.ignored"]], "live (shapedtensor property)": [[12, "inferno.ShapedTensor.live"]], "name (shapedtensor property)": [[12, "inferno.ShapedTensor.name"]], "owner (shapedtensor property)": [[12, "inferno.ShapedTensor.owner"]], "reconstrain() (shapedtensor method)": [[12, "inferno.ShapedTensor.reconstrain"]], "resize() (shapedtensor static method)": [[12, "inferno.ShapedTensor.resize"]], "strict (shapedtensor property)": [[12, "inferno.ShapedTensor.strict"]], "valid (shapedtensor property)": [[12, "inferno.ShapedTensor.valid"]], "value (shapedtensor property)": [[12, "inferno.ShapedTensor.value"]], "statehook (class in inferno)": [[13, "inferno.StateHook"]], "forward() (statehook method)": [[13, "inferno.StateHook.forward"]], "hook() (statehook method)": [[13, "inferno.StateHook.hook"]], "module (statehook property)": [[13, "inferno.StateHook.module"]], "register() (statehook method)": [[13, "inferno.StateHook.register"]]}})