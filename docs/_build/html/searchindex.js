Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/distributions", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.dists.LogNormal", "reference/generated/inferno.dists.Normal", "reference/generated/inferno.dists.Poisson", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.sqrt", "reference/generated/inferno.tensorize", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/distributions.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.dists.LogNormal.rst", "reference/generated/inferno.dists.Normal.rst", "reference/generated/inferno.dists.Poisson.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.tensorize.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.dists", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "LogNormal", "Normal", "Poisson", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "simple_exponential_smoothing", "sqrt", "tensorize", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 49, 98, 135, 139, 140], "provid": [0, 6, 9, 10, 11, 31, 112], "two": [0, 3, 7, 8, 9, 10, 39, 40, 138, 140], "main": 0, "wai": [0, 2, 11], "interact": [0, 13], "through": [0, 3, 39, 40, 50, 51, 52, 80, 81, 142], "its": [0, 2, 6, 7, 8, 11, 12, 26, 39, 46, 67, 68, 140, 142], "interfac": 0, "The": [0, 2, 3, 7, 8, 12, 13, 14, 16, 26, 27, 40, 42, 49, 55, 65, 66, 67, 68, 70, 71, 73, 75, 87, 91, 97, 98, 100, 103, 108, 109, 110, 137, 138, 140], "latter": [0, 49, 138, 140], "can": [0, 2, 3, 6, 7, 9, 11, 12, 25, 28, 29, 30, 36, 37, 45, 47, 82, 100, 101, 103, 105, 106, 110, 139, 140], "distinguish": 0, "have": [0, 3, 8, 26, 29, 30, 40, 49, 50, 51, 73, 75, 97, 98, 108, 109], "modul": [0, 7, 8, 9, 12, 13, 26, 27, 38, 39, 46, 49, 53, 54, 55, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 103, 105, 106, 110, 118, 120, 122, 124, 135], "name": [0, 6, 7, 8, 11, 14, 15, 16, 26, 28, 38, 49, 54, 85, 87, 89, 91], "which": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 21, 22, 23, 24, 26, 27, 28, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 54, 55, 56, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 108, 109, 110, 112, 115, 125, 137, 138, 139, 140, 142], "end": [0, 2, 20, 23, 25, 28, 32, 33, 36, 37, 40, 41, 42, 44, 45, 47, 48, 72, 73, 74, 75, 85, 95, 96, 102, 108, 109, 114, 137, 138, 139, 140, 142], "In": [0, 2, 8, 46, 55, 98, 139, 142], "gener": [0, 2, 3, 7, 12, 14, 15, 16, 26, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 62, 63, 64, 67, 68, 69, 70, 71, 78, 79, 85, 93, 125, 135, 138, 140], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 89, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 116, 137, 138, 139, 140, 142], "great": 0, "get": [0, 26, 46, 67, 68], "off": [0, 85], "ground": [0, 27], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 11], "tensor": [0, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 125, 126], "shape": [0, 7, 17, 19, 36, 37, 41, 42, 43, 44, 45, 47, 48, 53, 56, 57, 58, 81, 82, 93, 111, 113, 125, 126], "compat": [0, 7, 11], "automat": [0, 11, 27, 62, 63, 64], "reduct": 0, "batch": [0, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 80, 81, 82, 89, 98], "axi": 0, "done": [0, 62, 63, 64], "you": [0, 11], "meanwhil": [0, 3], "more": [0, 3, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 62, 63, 64, 105, 106, 135, 138], "control": [0, 6, 12, 45, 47, 56, 77, 79, 137, 140], "over": [0, 2, 8, 27, 28, 36, 37, 40, 45, 50, 51, 52, 82, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 137, 138, 139, 140, 142], "flow": 0, "logic": [0, 8, 73, 75, 78, 79, 98], "allow": [0, 46, 67, 68, 72, 74, 95, 98, 102, 138], "greater": [0, 30, 69], "custom": [0, 28, 36, 37, 45, 47, 82], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135], "class": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124], "extend": [0, 11, 93, 125], "implement": [0, 2, 8, 11, 26, 30, 36, 37, 39, 43, 47, 53, 56, 57, 62, 64, 77, 78, 79, 98, 99, 135, 137, 138, 139], "subclass": [0, 6, 9, 12, 26, 30, 39, 40, 50, 51, 52, 53, 57, 99], "us": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 26, 27, 28, 29, 31, 36, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 56, 58, 62, 64, 67, 73, 75, 76, 77, 89, 98, 101, 116, 139, 140], "from": [0, 2, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 26, 27, 28, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 67, 68, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 111, 113, 125, 126, 140, 142], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 6, 7, 8, 9, 11, 12, 16, 25, 26, 28, 29, 30, 36, 37, 39, 40, 45, 46, 47, 49, 50, 51, 52, 53, 55, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 103, 105, 106, 110, 125, 137, 138, 139, 140, 142], "certain": 0, "case": [0, 2, 12, 23, 25, 28, 32, 33, 36, 41, 42, 44, 45, 48, 72, 73, 74, 75, 85, 94, 95, 102, 108, 109, 137, 142], "mai": [0, 2, 7, 10, 11, 28, 40, 49], "faster": [0, 46, 55], "less": [0, 30, 67, 68], "type": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "check": [0, 7, 73, 75], "need": [0, 11, 46, 49, 67, 68], "paramet": [0, 2, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 125, 126, 137, 138, 140], "remain": [0, 36, 44, 45, 48, 53, 62, 63, 64, 78, 79, 84, 85, 96, 138], "same": [0, 2, 6, 8, 11, 12, 36, 40, 45, 49, 82, 95, 96, 97, 98, 102, 104, 108, 109, 117, 118, 119, 120, 121, 122, 123, 124, 140], "multipl": [0, 2, 3, 40, 45, 49, 79, 98, 137], "call": [0, 8, 9, 11, 12, 13, 16, 26, 38, 39, 40, 50, 51, 52, 54, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 100, 101, 103, 105, 106, 110, 139, 140], "pre": [0, 28, 39, 40, 50, 51, 52, 137], "comput": [0, 2, 7, 14, 15, 16, 27, 39, 40, 46, 50, 51, 52, 55, 112], "initi": [0, 26, 40, 50, 51, 52, 53, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 102, 104, 107, 108, 109], "unlik": [0, 12, 13], "artifici": 0, "neuron": [0, 27, 36, 37, 39, 43, 44, 45, 47, 48, 49, 56, 62, 63, 64, 76, 77, 78, 79, 82, 83, 84, 85, 86, 137, 142], "typic": [0, 11, 138, 140], "found": [0, 11], "ann": 0, "snn": 0, "ar": [0, 2, 6, 7, 8, 14, 15, 16, 26, 27, 28, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 78, 79, 85, 87, 89, 91, 98, 99, 100, 112, 116, 135, 137, 138, 139, 140], "fundament": 0, "state": [0, 8, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 72, 73, 74, 75, 78, 79, 95, 96, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110, 114], "biolog": [0, 2, 3, 139], "electr": [0, 138, 139, 140, 142], "potenti": [0, 2, 3, 28, 33, 35, 36, 37, 43, 44, 45, 47, 48, 53, 56, 62, 63, 64, 76, 77, 78, 79, 85, 137, 138, 139, 140, 142], "differ": [0, 8, 27, 28, 36, 37, 41, 42, 43, 45, 47, 48, 56, 62, 64, 72, 74, 76, 77, 79, 89, 95, 98, 102, 138, 139, 140], "between": [0, 8, 10, 21, 22, 23, 24, 39, 41, 42, 46, 49, 55, 67, 68, 69, 70, 71, 95, 96, 97, 98, 99, 102, 104, 108, 109, 137, 140], "interior": 0, "exterior": 0, "cell": [0, 36, 37, 43, 45, 47, 48, 56, 76, 77, 138, 139, 140], "drive": 0, "forc": 0, "behind": [0, 2], "action": [0, 2, 3, 36, 37, 43, 44, 45, 47, 48, 53, 56, 62, 63, 64, 78, 79, 85, 138, 139, 140, 142], "simplifi": [0, 142], "model": [0, 2, 3, 25, 29, 30, 32, 33, 34, 35, 49, 138], "when": [0, 2, 6, 8, 9, 11, 12, 13, 27, 28, 36, 37, 38, 39, 40, 45, 47, 49, 50, 51, 52, 54, 62, 63, 64, 78, 79, 82, 89, 95, 98, 100, 101, 102, 103, 105, 106, 110, 116, 137, 138, 139], "": [0, 2, 7, 9, 11, 12, 13, 20, 21, 22, 23, 24, 26, 37, 43, 46, 47, 55, 56, 62, 64, 67, 68, 69, 70, 71, 73, 75, 77, 96, 98, 101, 107, 108, 109, 110, 114, 138, 139, 140], "import": [0, 2, 11], "treat": [0, 2, 28, 41, 42, 89], "variabl": [0, 2, 11], "separ": [0, 40, 46, 55], "each": [0, 2, 7, 8, 9, 27, 41, 42, 46, 55, 98, 138, 139, 140, 142], "sampl": [0, 8, 10, 14, 15, 16, 21, 22, 23, 24, 27, 46, 55, 67, 68, 70, 71, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 125], "present": [0, 7, 8, 27, 28, 29, 30, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 98, 138], "dure": [0, 3, 36, 44, 45, 48, 53, 85], "fix": [0, 3, 16, 36, 37, 43, 44, 45, 47, 48, 56, 140], "hyperparamet": [0, 2, 135], "do": [0, 80, 81], "duplic": 0, "instead": [0, 2, 139], "broadcast": [0, 39, 42, 62, 63, 64, 65, 66], "some": [0, 2, 8, 10, 49, 73, 75, 96], "includ": [0, 8, 10, 11, 28, 31, 36, 37, 39, 40, 45, 47, 49, 50, 51, 52, 55, 70, 71, 81, 82, 98, 105, 106, 135], "adapt": [0, 3, 36, 37, 45, 47, 62, 63, 64, 65, 66, 72, 73, 74, 75, 82, 135], "behavior": [0, 6, 27, 28, 36, 37, 45, 46, 47, 49, 67, 68, 82, 135, 138, 139], "input": [0, 2, 7, 9, 17, 18, 19, 26, 27, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 62, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 138, 139, 140, 142], "A": [0, 2, 12, 16, 28, 36, 37, 45, 47, 82], "common": [0, 2, 41, 42, 53, 57, 58], "exampl": [0, 12, 65, 66, 140], "an": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 16, 17, 27, 28, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 81, 82, 85, 89, 95, 97, 99, 102, 110, 117, 118, 119, 120, 121, 122, 138, 139, 140, 142], "threshold": [0, 36, 37, 45, 47, 63, 64, 66, 78, 79, 135, 139, 140], "where": [0, 2, 7, 8, 12, 14, 25, 27, 28, 29, 30, 33, 36, 39, 40, 44, 45, 46, 48, 49, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 85, 89, 96, 98, 137, 138, 139, 140, 142], "defin": [0, 2, 6, 29, 30, 139], "minimum": [0, 7, 29, 30, 46, 67, 68, 112], "membran": [0, 3, 36, 37, 43, 44, 45, 47, 48, 53, 56, 62, 63, 64, 76, 77, 78, 79, 82, 83, 86, 138, 139, 140], "spike": [0, 2, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 62, 63, 64, 66, 67, 68, 69, 70, 71, 78, 79, 85, 87, 89, 90, 91, 92, 135, 139, 140, 142], "These": [0, 27, 42, 138, 139], "should": [0, 7, 8, 9, 11, 12, 13, 26, 27, 28, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 62, 63, 64, 67, 68, 82, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110], "share": [0, 7], "across": [0, 36, 37, 43, 45, 47, 48, 50, 51, 52, 56, 76, 77, 138, 139, 140], "all": [0, 2, 26, 49, 50, 52, 54, 67, 68, 69, 70, 71, 72, 73, 94, 95, 98, 101, 107, 108, 112, 116, 139], "contribut": [0, 2, 108, 109], "portion": 0, "updat": [0, 2, 8, 9, 12, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 47, 62, 63, 64, 72, 73, 74, 75, 78, 79, 82, 137], "also": [0, 3, 7, 8, 28, 36, 37, 39, 40, 45, 47, 50, 51, 52, 69, 73, 75, 82, 139, 140], "appli": [0, 3, 7, 12, 13, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 50, 51, 52, 54, 62, 63, 64, 65, 66, 98, 105, 106, 137, 138, 139, 140, 142], "weight": [0, 12, 25, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 50, 51, 52, 59, 60, 61, 135], "bias": [0, 39, 40, 50, 51, 52, 59, 60], "handl": [0, 11], "either": [0, 2, 8, 9, 27, 59, 64, 89, 138], "reduc": [0, 2, 27, 28, 36, 37, 45, 62, 63, 64, 82, 98, 99, 100, 101, 103, 105, 106, 110], "output": [0, 9, 13, 17, 19, 20, 27, 39, 40, 46, 49, 50, 51, 52, 55, 67, 68, 69, 70, 71, 73, 75, 78, 79, 93, 97, 101, 103, 105, 106, 108, 109, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 140], "along": [0, 12, 40, 54, 62, 63, 64, 81, 94, 98, 112], "dimens": [0, 7, 8, 27, 28, 36, 37, 39, 40, 45, 46, 47, 50, 51, 52, 54, 55, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 81, 82, 94, 98, 112], "former": [0, 49, 138], "effici": 0, "make": [0, 7], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 6, 135], "perform": [0, 2, 9, 12, 16, 20, 27, 38, 40, 54, 72, 73, 74, 75, 98, 99, 114], "But": 0, "might": 0, "necessari": 0, "hand": [0, 98], "detail": [0, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 56, 62, 63, 64, 135], "inform": [0, 9, 53, 105, 106, 138], "process": [0, 26, 28, 46, 67, 68], "arxiv": [0, 138], "1909": 0, "02549": 0, "becaus": [0, 8], "unit": [0, 8, 95, 96, 97, 98, 102, 104, 108, 109, 142], "relev": 0, "match": [0, 2, 7, 50, 51, 52, 72, 73, 74, 75, 95, 97, 102, 108, 109], "theoret": 0, "continu": [0, 14], "descript": [0, 135], "specifi": [0, 7, 8, 9, 17, 19, 26, 27, 29, 54, 57, 93, 94, 100, 103, 110, 111, 113, 125, 126, 137], "length": [0, 2, 8, 10, 21, 22, 23, 24, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 85, 95, 96, 97, 98, 99, 102, 104, 108, 109, 137, 138, 139, 140, 142], "given": [0, 11, 14, 15, 16, 25, 26, 27, 28, 29, 55, 57, 70, 71, 78, 79, 98, 99, 101, 107, 135, 138, 139, 142], "millisecond": [0, 28, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 56, 57, 84, 95, 98, 102, 108, 109], "On": 0, "step": [0, 3, 8, 20, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 95, 96, 97, 98, 99, 102, 104, 108, 109, 114, 137, 138, 139, 140, 142], "amount": [0, 10, 16, 27, 36, 37, 40, 45, 47, 62, 63, 137], "ha": [0, 6, 8, 11, 25, 26, 29, 30, 36, 39, 40, 45, 50, 51, 52, 82, 85, 87, 89, 91, 98, 110, 140, 142], "elaps": 0, "subtract": 0, "inclus": [0, 38], "bound": [0, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 64, 89, 135], "zero": [0, 16, 40, 50, 51, 52, 94, 95, 96, 98, 102, 104, 108, 109], "equal": [0, 2, 67, 68], "consid": [0, 2, 16, 20, 72, 73, 74, 75, 95, 97, 98, 102, 108, 109, 114, 139], "out": [0, 40, 41, 42, 89, 137], "therefor": [0, 7, 8, 98], "evenli": 0, "divis": 0, "simualt": [0, 36, 37, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 56], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 8, 22, 36, 99], "integ": [0, 3, 7, 8], "phenomenon": 2, "rate": [2, 16, 27, 28, 30, 31, 45, 46, 55, 64, 67, 68, 70, 71, 137, 138, 139, 140], "quantiti": 2, "decreas": [2, 138], "proport": [2, 27, 137, 138, 139], "current": [2, 3, 7, 8, 20, 26, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 56, 57, 62, 65, 72, 73, 74, 75, 76, 77, 78, 79, 83, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 101, 102, 104, 107, 108, 109, 114, 135, 137, 139, 140], "valu": [2, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 27, 28, 29, 30, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 69, 72, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 102, 104, 108, 109, 112, 113, 114, 115, 116, 125, 138, 139, 140, 142], "It": [2, 8, 49, 140], "describ": [2, 135], "differenti": 2, "equat": 2, "tau": [2, 21, 28, 72, 73, 74, 75, 95, 96, 102, 108, 109], "frac": [2, 14, 15, 16, 21, 22, 27, 36, 37, 40, 43, 45, 47, 48, 56, 62, 63, 67, 68, 72, 73, 74, 75, 77, 96, 137, 138, 139, 140], "dn": 2, "dt": [2, 8, 28, 36, 37, 39, 40, 43, 44, 45, 47, 48, 50, 51, 52, 53, 56, 57, 95, 98, 102, 108, 109, 137, 138, 139, 140], "n": [2, 14, 15, 16, 46, 50, 51, 52, 65, 66, 67, 68], "solut": [2, 137, 138, 139], "t": [2, 20, 21, 22, 23, 24, 27, 28, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 85, 95, 96, 102, 108, 109, 114, 117, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 142], "n_0": [2, 8, 27, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 89, 98], "e": [2, 6, 11, 14, 15, 16, 18, 30, 31, 55, 69, 70, 71, 140], "0": [2, 8, 16, 21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 62, 63, 64, 80, 81, 85, 94, 95, 96, 97, 102, 104, 108, 109, 126, 137, 140, 142], "oft": 2, "neural": [2, 49], "network": [2, 49], "simul": [2, 3, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 62, 63, 64, 76, 77, 78, 79, 95, 98, 102, 108, 109, 138, 139, 140, 142], "involv": 2, "discret": [2, 8, 16, 95, 98, 102, 108, 109, 140, 142], "timestep": [2, 36], "those": [2, 6, 36, 39, 40, 50, 51, 52], "thei": [2, 6, 69], "often": [2, 137, 140], "appear": 2, "form": [2, 9, 11], "exp": [2, 14, 15, 21, 27, 28, 36, 37, 43, 45, 48, 63, 72, 73, 74, 75, 76, 95, 96, 102, 108, 109, 137, 138, 139, 140], "left": [2, 14, 15, 21, 27, 36, 37, 40, 43, 45, 47, 48, 52, 56, 62, 63, 64, 72, 73, 74, 75, 76, 77, 79, 96, 98, 137, 138, 139, 140], "right": [2, 14, 15, 21, 27, 36, 37, 40, 43, 45, 47, 48, 52, 56, 62, 63, 64, 72, 73, 74, 75, 76, 77, 79, 96, 98, 137, 138, 139, 140], "underli": [2, 8, 40, 96, 98, 100, 101, 103, 105, 106, 110, 139, 140], "wa": [2, 9, 10, 25, 26, 29, 36, 37, 43, 45, 47, 48, 56, 62, 63, 64], "solv": 2, "analyt": 2, "approxim": [2, 37, 43, 47, 56, 62, 64, 69, 77, 138, 140], "via": [2, 6], "euler": [2, 37, 43, 47, 56, 62, 64, 77], "method": [2, 6, 8, 11, 26, 28, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 62, 64, 67, 68, 69, 77, 87, 89, 91, 98, 99, 116], "both": 2, "repres": [2, 6, 7, 39, 42, 53, 57, 81, 85, 140], "select": [2, 8, 23, 24, 57, 89, 98, 100, 103], "term": [2, 64, 137, 139], "long": [2, 137], "live": 2, "correspond": [2, 11, 29, 36, 37, 43, 44, 45, 47, 48, 49, 53, 56, 62, 63, 64, 78, 79, 85], "under": [2, 8, 137, 140], "relat": [2, 98, 135, 140], "ne": 2, "k": [2, 16, 27, 62, 63, 64, 65, 66, 73, 75, 108, 109, 118, 120, 122, 124], "That": [2, 137], "after": [2, 8, 9, 10, 12, 25, 26, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 56, 57, 59, 60, 61, 62, 63, 64, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 103, 105, 106, 110, 112, 138, 139, 140], "repeat": 2, "applic": [2, 95, 96, 97, 102, 104, 108, 109], "1": [2, 8, 14, 15, 16, 20, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 64, 65, 66, 67, 68, 69, 85, 94, 96, 111, 114, 135, 137, 138, 140, 142], "start": [2, 140], "To": [2, 13, 17, 19, 46, 67, 68, 93, 111, 125, 126, 138, 139], "outsid": [2, 98], "notion": 2, "life": 2, "we": [2, 11], "ln": 2, "b": [2, 20, 27, 39, 40, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 89, 110], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 16], "sometim": 2, "lambda": [2, 16, 27, 139], "context": [2, 138], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 8, 95, 96, 97, 98, 99, 102, 104, 108, 109], "activ": [2, 7], "formal": 2, "sum": [2, 27, 28, 36, 37, 45, 47, 82], "previou": [2, 8, 21, 22, 24, 27, 41, 42, 89, 99, 104], "occur": [2, 12, 13, 16, 27, 28, 38, 41, 42, 49, 54, 89, 138, 139, 140, 142], "howev": 2, "purpos": [2, 108, 109], "comparison": 2, "grow": 2, "complex": [2, 18, 19, 20, 54, 72, 73, 74, 75, 94, 95, 102, 108, 109, 113, 114, 115], "quadrat": [2, 47, 56, 77, 135], "respect": [2, 28, 40, 50, 51, 52, 59, 101], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 26, 27, 73, 75, 139], "than": [2, 12, 26, 27, 30, 67, 68, 69, 73, 75, 139, 140], "everi": [2, 7, 8, 46, 67, 68], "prior": [2, 8, 10, 12, 13, 21, 22, 23, 24, 36, 44, 45, 48, 53, 72, 73, 85, 89, 95, 96, 97, 98, 99, 102, 104, 108, 109], "leav": [2, 139], "sort": [2, 7], "simplest": 2, "dx": 2, "x": [2, 14, 15, 18, 25, 28, 32, 33, 47, 50, 51, 52, 72, 73, 74, 75, 95, 96, 102, 108, 109, 114, 115, 142], "sum_f": 2, "f": [2, 28, 36, 40, 44, 45, 46, 48, 55, 67, 68, 69, 72, 73, 74, 75, 85, 95, 102, 108, 109], "amplitud": [2, 25, 29, 30, 31, 32, 33, 34, 35, 72, 73, 74, 75, 95, 102, 108, 109], "construct": [2, 9, 17, 19, 41, 42, 57, 58, 93, 100, 101, 103, 105, 106, 110, 111, 125, 126], "evalu": [2, 9, 12, 36, 37, 45, 47], "otherwis": [2, 11, 23, 36, 39, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 55, 72, 73, 74, 75, 85, 95, 100, 102, 103, 108, 109], "interpret": 2, "follow": [2, 3, 8, 9, 55, 70, 71, 89, 96, 98, 137, 139], "whenev": 2, "add": [2, 11, 12, 26, 28, 72, 73, 75, 95, 108], "four": [2, 8, 9, 28], "variant": [2, 41, 42, 135], "discuss": 2, "below": [2, 138, 140], "featur": 2, "beyond": 2, "just": 2, "being": [2, 11, 27, 31, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 55, 56, 67, 68, 69, 70, 71, 81, 100, 101, 103, 105, 106, 110, 137], "previous": [2, 12, 13, 38, 54, 98], "come": 2, "fact": 2, "factor": [2, 20, 96, 114, 140], "x_": [2, 20, 28, 72, 73, 74, 75, 95, 96, 102, 108, 109, 114, 137], "begin": [2, 20, 23, 25, 28, 32, 33, 36, 37, 40, 41, 42, 44, 45, 47, 48, 72, 73, 74, 75, 85, 95, 96, 102, 108, 109, 114, 137, 138, 139, 140, 142], "x_t": [2, 72, 73, 74, 75, 95, 102, 108, 109], "lvert": [2, 72, 74, 95, 102], "f_": [2, 28, 36, 44, 45, 48, 72, 73, 74, 75, 85, 95, 102, 108, 109, 137], "rvert": [2, 72, 74, 95, 102], "leq": [2, 15, 16, 72, 74, 95, 102], "epsilon": [2, 72, 74, 94, 95, 102], "text": [2, 14, 15, 16, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 108, 109, 137, 138, 139, 140, 142], "here": [2, 12, 13, 135], "target": [2, 8, 11, 72, 74, 95, 100, 101, 102, 103, 105, 106, 110], "permiss": 2, "error": [2, 11], "For": [2, 10, 12, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 56, 62, 63, 64, 65, 66, 95, 96, 102, 108, 109, 110], "set": [2, 7, 8, 9, 17, 19, 36, 37, 40, 45, 46, 47, 50, 51, 55, 62, 63, 64, 67, 68, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 104, 108, 109, 111, 125, 126, 137, 139, 140], "unspecifi": [2, 7, 116], "test": [2, 7, 14, 15, 16, 73, 75, 95, 97, 102, 108, 109], "wherea": 2, "chang": [2, 6, 11, 28, 39, 40, 50, 51, 52, 80, 81, 96, 137, 138, 142], "addit": [2, 26, 40, 45, 46, 50, 51, 52, 67, 68, 73, 75, 79, 138, 139], "replac": [2, 41, 42, 49, 89], "modifi": [2, 7, 9, 17, 19, 25, 29, 30, 93, 100, 101, 103, 105, 106, 110, 111, 113, 125, 126], "onli": [2, 6, 7, 9, 11, 12, 13, 38, 40, 41, 54, 98, 100], "most": [2, 8, 10, 21, 22, 23, 24, 28, 39, 40, 46, 50, 51, 52, 67, 68, 95, 96, 97, 98, 99, 102, 104, 108, 109, 137, 138], "recent": [2, 8, 10, 21, 22, 23, 24, 28, 39, 40, 50, 51, 52, 95, 96, 97, 98, 99, 102, 104, 108, 109, 137], "event": [2, 16, 97], "chosen": 2, "depend": [2, 9, 25, 28, 29, 32, 33, 34, 35, 36, 39, 40, 49, 50, 51, 52, 63, 64, 66, 80, 81, 103, 135, 139], "desir": [2, 14, 54, 94], "properti": [2, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 98, 101, 102, 108, 109, 111, 113, 125, 126, 139], "formul": 2, "abov": [2, 37, 43, 138, 140], "ani": [2, 3, 6, 8, 9, 11, 12, 13, 39, 40, 42, 50, 51, 52, 59, 60, 98, 99, 101, 103, 105, 106, 116, 139, 140, 142], "exactli": 2, "toler": [2, 8, 72, 73, 74, 75, 89, 95, 98, 102], "meet": [2, 8], "criterion": [2, 97, 108, 109], "compon": [2, 73, 75, 138, 139], "ad": [2, 7, 8, 26, 28, 40, 46, 59, 60, 61, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98], "sf": [2, 73, 75, 108, 109], "hold": 2, "align": [2, 20, 36, 37, 40, 45, 47, 96, 114, 137, 138, 139, 140], "neq": [2, 28, 142], "int_": 2, "infti": [2, 36, 45, 66, 138, 139, 140], "theta": [2, 25, 32, 33, 36, 45, 78, 79, 137, 138, 139, 140], "neg": [2, 7], "argument": [2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 26, 27, 31, 39, 40, 49, 50, 51, 52, 98, 101, 105, 106], "posit": [2, 7, 8, 49], "geq": [2, 25, 32, 33, 78, 79], "deriv": [2, 14, 87, 89, 91, 140], "d": [2, 8, 89, 98, 138, 139], "And": [2, 40, 137], "integr": [2, 36, 37, 43, 44, 45, 48, 53, 56, 57, 73, 75, 76, 77, 135, 142], "kind": 3, "absolut": [3, 36, 37, 43, 44, 45, 47, 48, 56, 62, 63, 64, 72, 74, 76, 77, 78, 79, 85, 95, 102], "arp": [3, 36, 44, 45, 48, 85], "rel": [3, 10, 15, 21, 22, 23, 24, 95, 96, 97, 99, 102, 104, 108, 109], "rrp": 3, "cannot": [3, 7, 8, 11, 25, 29, 80, 81, 138], "presynapt": [3, 28, 36, 37, 41, 42, 43, 44, 45, 47, 48, 56, 65, 76, 77, 78, 79, 137, 138, 139, 142], "doe": [3, 7, 16, 49, 87, 91, 142], "affect": [3, 73, 75, 135], "depolar": [3, 140], "repolar": 3, "hyperpolar": 3, "mean": [3, 14, 15, 16, 28, 36, 37, 45, 82, 100, 101, 103, 105, 106, 110], "while": [3, 36, 37, 43, 44, 45, 47, 48, 56, 78, 79], "difficult": 3, "fire": [3, 36, 37, 43, 44, 45, 48, 56, 66, 135, 138], "imposs": 3, "time": [3, 8, 10, 16, 20, 21, 22, 23, 24, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 135, 138, 139, 140, 142], "voltag": [3, 36, 37, 43, 44, 45, 47, 48, 53, 56, 62, 63, 64, 66, 76, 77, 78, 79, 86, 135, 139, 140], "reset": [3, 8, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 64, 78, 79, 98, 138, 139, 140], "determin": [3, 17, 19, 40, 50, 51, 52, 70, 93, 95, 102, 111, 113, 116, 125, 126], "strongli": 3, "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "map": [6, 49, 98, 100, 103, 105, 106], "unpack": [6, 100], "function": [6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 28, 31, 36, 37, 41, 42, 45, 47, 57, 62, 63, 64, 73, 75, 78, 79, 82, 89, 93, 97, 98, 101, 105, 106, 108, 109, 115, 125, 137, 142], "conjunct": 6, "attr": [6, 110], "librari": [6, 8], "wrap": 6, "_asadict_": 6, "dict": [6, 7, 9, 11, 12, 14, 15, 16, 49, 101], "str": [6, 7, 8, 9, 11, 12, 14, 15, 16, 26, 38, 49, 53, 54, 101, 110], "field": [6, 139, 140], "converet": 6, "dictionari": [6, 7, 11, 49], "flatten": 6, "nest": [6, 110], "object": [6, 9, 10, 11, 13, 14, 26, 49, 58, 61, 80, 82, 83, 84, 86, 88, 89, 92], "own": 6, "If": [6, 8, 9, 12, 26, 27, 29, 30, 36, 37, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 56, 59, 62, 63, 64, 67, 68, 82, 100, 103, 116], "conflict": [6, 49], "one": [6, 9, 28, 36, 37, 45, 47, 51, 52, 82, 100, 119, 120, 121, 122, 123, 124, 137, 138], "preserv": [6, 36, 37, 45, 47, 98], "overridden": [6, 26], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "packag": 6, "attribut": [6, 7, 8, 27, 38, 54, 81, 82, 85, 89, 110, 140], "were": [6, 26, 27, 28], "regist": [6, 7, 8, 9, 11, 12, 13, 26, 38, 39, 40, 50, 51, 54, 59, 60, 61, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 100, 101, 103, 105, 106, 110], "constraint": [7, 8, 80, 81, 98], "tupl": [7, 17, 19, 20, 26, 27, 28, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 78, 79, 81, 82, 93, 94, 100, 105, 106, 111, 112, 116, 125, 126], "int": [7, 8, 17, 18, 19, 20, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 68, 70, 71, 72, 73, 74, 75, 80, 81, 82, 93, 94, 95, 102, 108, 109, 111, 112, 113, 114, 115, 125, 126], "support": [7, 40, 41, 42, 50, 51, 52, 57, 58], "dimension": [7, 40], "constrain": [7, 8, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "buffer": [7, 8, 11, 80, 89], "dim": [7, 53, 54, 57, 58, 80, 81, 94, 112], "size": [7, 8, 17, 19, 27, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 80, 81, 89, 93, 111, 125, 126], "rais": [7, 8, 9, 11, 18, 25, 26, 29, 30, 39, 53, 57, 99, 138], "valueerror": [7, 8, 30], "must": [7, 8, 9, 11, 26, 29, 30, 39, 40, 42, 50, 51, 52, 53, 57, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 103, 108, 109], "number": [7, 8, 14, 15, 16, 18, 27, 39, 40, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 81, 89, 93, 98, 115, 117, 118, 119, 120, 121, 122, 125], "element": [7, 8, 27, 40, 50, 51, 52, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 94, 95, 97, 102, 108, 109, 116], "runtimeerror": [7, 8, 9, 25, 29], "2": [7, 14, 15, 16, 40, 45, 135, 140], "first": [7, 41, 42, 65, 66, 67, 69, 70, 139], "second": [7, 139], "assign": [7, 11, 27, 28, 29, 30, 36, 45, 52, 82], "invalid": [7, 11], "reconstrain": 7, "bool": [7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 26, 27, 28, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 59, 60, 61, 67, 68, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 125, 126], "torch": [7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 125, 126], "classmethod": [7, 14, 15, 16, 41, 42, 57], "compatible_": 7, "compatible_lik": 7, "like": [7, 11, 17, 19, 28, 36, 37, 39, 40, 45, 47, 50, 51, 52, 57, 82, 93, 111, 113, 125, 126, 135], "none": [7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 125, 126], "option": [7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 74, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 125, 126], "default": [7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 125, 126], "insuffici": 7, "contain": [7, 20, 49, 78, 79], "nonposit": 7, "compatibl": 7, "compatible_like_": 7, "against": 7, "result": [7, 8, 14, 15, 16, 27, 39, 40, 95, 96, 97, 98, 102, 104, 105, 106, 108, 109], "low": 7, "high": 7, "increas": [7, 36, 37, 43, 45, 47, 56, 62, 63, 77, 138, 140], "order": [7, 54, 94, 98, 137], "constraints_repr": 7, "string": [7, 11, 38, 54], "represent": 7, "underscor": 7, "deregister_constrain": [7, 8], "deregist": [7, 9, 26], "fulli": [7, 11, 38, 54], "qualifi": [7, 11, 38, 54], "mindim": 7, "requir": [7, 10, 17, 19, 25, 26, 28, 29, 30, 40, 59, 60, 61, 73, 75, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 98, 111, 113, 125, 126], "static": 7, "mindims_": 7, "edit": 7, "exist": [7, 11, 26, 27, 36, 49, 98], "reshap": [7, 39, 40, 50, 51, 52], "accordingli": [7, 16], "remov": [7, 12], "new": [7, 8, 27, 28, 29, 30, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 72, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 95, 98, 102, 108, 109], "had": 7, "extern": [7, 142], "longer": 7, "incompat": [7, 8], "register_constrain": [7, 8], "attributeerror": [7, 8, 11], "step_tim": [8, 21, 22, 23, 24, 28, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 95, 96, 97, 98, 99, 102, 104, 107, 108, 109, 140], "float": [8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 89, 94, 95, 96, 97, 98, 99, 102, 104, 108, 109, 112, 113, 114, 115], "history_len": [8, 95, 96, 97, 98, 99, 102, 104, 107, 108, 109], "dimensionalmodul": [8, 53, 80, 81, 83, 84, 85, 86], "keep": [8, 28, 36, 37, 45, 47, 82], "track": 8, "store": [8, 11, 26, 27, 28, 52, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110], "nonneg": [8, 67, 68, 69, 70, 71], "unconstrain": 8, "impli": [8, 138], "freed": 8, "other": [8, 11, 12, 27, 38, 54, 100, 103, 105, 106, 110, 139], "self": [8, 98], "hlen": [8, 98], "offset": [8, 39, 40, 50, 51, 52], "latest_first": 8, "true": [8, 9, 12, 13, 16, 26, 27, 36, 37, 38, 43, 44, 45, 46, 47, 48, 54, 55, 56, 67, 68, 100, 101, 103, 105, 106, 110], "retriev": [8, 26, 89, 98], "record": [8, 98, 100, 101, 103, 107, 110], "window": 8, "index": [8, 39, 40, 50, 51, 52, 98], "tick": 8, "back": [8, 139], "zeroth": 8, "fals": [8, 12, 13, 26, 27, 28, 38, 40, 41, 42, 46, 50, 51, 52, 54, 55, 59, 60, 61, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 100, 103, 105, 106, 110], "observ": [8, 10, 14, 15, 21, 22, 23, 24, 28, 41, 42, 72, 73, 74, 75, 89, 95, 96, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110], "hsize": 8, "slice": [8, 46, 55, 68, 71], "latest": [8, 20, 72, 73, 74, 75, 102, 109, 114], "By": [8, 12], "correct": 8, "configur": 8, "normal": [8, 12, 14, 27, 38, 112, 142], "circumst": 8, "pushto": 8, "insert": 8, "befor": [8, 9, 11, 26, 38, 40, 52, 54, 89, 98, 99, 100, 101, 103, 105, 106, 110, 112, 138, 140], "been": [8, 98], "sinc": [8, 12, 46, 67, 68, 97], "last": [8, 36, 39, 40, 44, 45, 48, 50, 51, 52, 53, 62, 63, 64, 85, 97, 98, 142], "data": [8, 10, 17, 19, 21, 22, 23, 24, 26, 28, 39, 40, 50, 51, 52, 82, 83, 86, 93, 94, 95, 96, 97, 98, 99, 102, 104, 108, 109, 111, 112, 113, 125, 126], "advanc": 8, "push": [8, 98, 107], "uniniti": [8, 17], "final": 8, "interpol": [8, 21, 22, 23, 24, 41, 42, 89, 95, 96, 97, 98, 99, 102, 104, 108, 109], "1e": [8, 94, 98], "07": [8, 98, 138], "maximum": [8, 27, 28, 29, 30, 40, 41, 42, 46, 50, 51, 52, 55, 57, 58, 69, 89, 98, 112], "onsid": 8, "7": [8, 98], "cdot": [8, 27, 40, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 89, 98, 137], "ldot": [8, 27, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 98], "enforc": [8, 49, 98], "gather": [8, 27, 98], "take": [8, 12, 49, 69, 87, 91, 100, 103, 115, 117, 118, 119, 120, 121, 122, 123, 124, 137], "nearest": [8, 23, 28, 41, 42, 102, 109], "produc": 8, "scalar": [8, 14, 15, 16, 17, 19, 93, 111, 116, 125, 126], "within": [8, 11], "without": [8, 26, 30, 31, 73, 75, 138, 139, 140], "ever": 8, "attempt": [8, 36, 45, 82], "regardless": [8, 13], "pass": [8, 9, 12, 13, 25, 26, 28, 29, 30, 36, 37, 39, 40, 45, 47, 49, 50, 51, 52, 82, 98, 100, 101, 105, 106, 142], "overwritten": 8, "exact": [8, 97], "manual": [8, 80, 81], "increment": 8, "specif": [8, 11, 14, 140], "prehook": [9, 13, 100, 101, 106, 110], "callabl": [9, 10, 12, 13, 28, 31, 36, 37, 45, 47, 82, 98, 101, 103, 105, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124], "posthook": [9, 101, 103, 105, 110], "prehook_kwarg": [9, 101], "posthook_kwarg": [9, 101], "train_upd": [9, 13, 38, 54, 100, 101, 103, 105, 106, 110], "eval_upd": [9, 13, 38, 54, 100, 101, 103, 105, 106, 110], "forward": [9, 12, 13, 26, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 98, 100, 101, 103, 105, 106, 107, 110], "itself": [9, 12, 13, 39, 40, 50, 51, 52], "nn": [9, 11, 12, 13, 38, 54], "register_forward_hook": [9, 101, 105], "manag": [9, 26, 78, 79, 80, 81, 89], "removablehandl": 9, "keyword": [9, 10, 12, 26, 31, 39, 40, 49, 50, 51, 52, 101, 105, 106], "register_forward_pre_hook": [9, 101, 106], "run": [9, 12, 13, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 56, 57], "train": [9, 12, 13, 26, 36, 37, 38, 45, 46, 47, 49, 54, 55, 67, 68, 69, 70, 71, 100, 101, 103, 105, 106, 110, 135], "mode": [9, 12, 13, 36, 37, 38, 41, 42, 45, 47, 53, 54, 100, 101, 103, 105, 106, 110], "eval": [9, 13, 26, 38, 54, 100, 101, 103, 105, 106, 110], "signatur": [9, 25, 29, 30, 41, 42, 57], "arg": [9, 10, 11, 12, 31, 57, 58, 101, 107, 117, 118, 119, 120, 121, 122, 123, 124], "Or": 9, "with_kwarg": [9, 105, 106], "kwarg": [9, 10, 11, 12, 26, 28, 31, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 98, 101, 107, 117, 118, 119, 120, 121, 122, 123, 124], "see": [9, 93, 101, 105, 106, 125, 139, 140], "further": 9, "least": 9, "typeerror": [9, 11, 29], "instanc": [9, 11, 110], "alreadi": [9, 28], "on_ev": 9, "on_train": 9, "three": 9, "init": [9, 72, 73, 74, 75], "pytorch": [9, 11, 16, 28, 36, 37, 45, 47, 82], "warn": 9, "runtimewarn": 9, "ignor": [9, 13], "registr": [9, 26], "protocol": [10, 31, 58, 117, 118, 119, 120, 121, 122, 123, 124], "prev_data": [10, 21, 22, 23, 24, 95, 96, 97, 99, 102, 104, 108, 109], "next_data": [10, 21, 22, 23, 24, 95, 96, 97, 99, 102, 104, 108, 109], "subsequ": [10, 21, 22, 23, 24, 42, 95, 96, 97, 99, 102, 104, 108, 109], "sample_at": [10, 21, 22, 23, 24, 95, 96, 97, 99, 102, 104, 108, 109], "step_data": [10, 21, 22, 23, 24, 95, 96, 97, 99, 102, 104, 108, 109], "measur": [10, 98], "interp_previ": 10, "interp_nearest": [10, 98], "interp_linear": 10, "interp_exp_decai": 10, "partial": [10, 31, 40, 41, 42, 50, 51, 52, 57], "fill": [10, 19, 31, 93, 95, 96, 97, 99, 102, 104, 108, 109, 111, 113, 125, 126], "extens": 11, "so": [11, 96, 142], "extra": [11, 53], "similar": [11, 28, 36, 37, 45, 47, 73, 75, 82], "regular": [11, 12], "g": [11, 30, 31], "enabl": 11, "simpl": [11, 65, 66, 114], "export": 11, "__init__": 11, "made": [11, 98], "parent": 11, "child": 11, "constructor": [11, 40, 41, 42, 50, 51, 52, 57, 58, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "get_extra": 11, "throw": 11, "similarli": 11, "get_submodul": 11, "look": 11, "referenc": 11, "refer": [11, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 56, 62, 63, 64, 116, 135, 137], "path": 11, "termin": 11, "resolv": 11, "someth": 11, "get_extra_st": 11, "state_dict": [11, 26], "set_extra_st": 11, "your": 11, "build": [11, 49], "note": [11, 139, 142], "picklabl": 11, "work": [11, 100, 103, 135], "serial": 11, "backward": 11, "guarante": [11, 49], "break": 11, "pickl": 11, "register_extra": 11, "manner": [11, 99], "register_buff": 11, "except": [11, 12, 13, 38, 54, 73, 75, 139], "limit": [11, 28, 36, 37, 41, 42, 45, 47, 82, 89], "access": 11, "load_state_dict": 11, "hook": [12, 13, 26, 38, 54, 101, 105, 106, 110], "inner_train_upd": 12, "inner_eval_upd": 12, "as_prehook": [12, 13, 38, 54, 110], "prepend": [12, 13, 28, 38, 54, 100, 103, 105, 106, 110], "always_cal": [12, 13, 38, 54], "statehook": [12, 38, 54], "act": [12, 13], "inner": [12, 40, 50, 51, 52], "associ": [12, 26, 28, 46, 55], "trigger": [12, 13, 138, 139, 140], "layer": [12, 26, 28], "__call__": [12, 13], "even": [12, 13, 38, 54, 110], "whether": 12, "alter": [12, 40, 50, 51, 98], "add_inn": 12, "innerhook": 12, "condition": 12, "on_eval_inn": 12, "on_train_inn": 12, "remove_inn": 12, "singl": [13, 49, 98, 100, 103], "log": [14, 15, 16], "distribut": [14, 15, 16, 46, 55, 67, 68, 69, 70, 71], "probabl": [14, 15, 16], "mu": [14, 15, 37, 47, 62, 138, 139, 140], "mathbb": [14, 15, 16], "r": [14, 15, 16, 139], "locat": [14, 15], "sigma": [14, 15], "_": [14, 15, 16], "scale": [14, 15, 27, 46, 54, 55, 70, 71, 73, 75, 94, 108, 109], "expect": [14, 15, 16, 40, 46, 49, 50, 51, 52, 55, 67, 68, 69, 70, 71, 100, 103], "mid": [14, 15, 16], "sim": [14, 15, 16], "mathcal": [14, 15], "loc": [14, 15], "random": [14, 15, 16, 40, 50, 51, 52, 93, 125], "variat": [14, 15, 16], "pseudorandom": [14, 15, 16, 46, 55, 67, 68, 70, 71, 93, 125], "sample_mv": 14, "varianc": [14, 15, 16], "stdev": 14, "mu_x": 14, "sqrt": [14, 15], "sigma_x": 14, "qquad": [14, 28], "valid": [14, 15, 16, 39, 40, 50, 51, 52], "dtype": [14, 15, 16, 17, 19, 93, 97, 108, 109, 111, 113, 125, 126], "non": [14, 15, 16, 116], "var": [14, 15, 16], "continuousdistribut": 15, "standard": 15, "deviat": 15, "cdf": [15, 16], "cumul": [15, 16, 28, 95, 108], "p": [15, 16, 54, 94], "erf": 15, "logcdf": [15, 16], "natur": [15, 16, 37, 43, 47, 56, 77], "logarithm": [15, 16], "logpdf": 15, "densiti": 15, "pi": 15, "likelihood": 15, "pdf": 15, "discretedistribut": 16, "_0": 16, "count": [16, 72, 74, 81, 95, 102], "sum_": 16, "j": 16, "lfloor": [16, 40], "rfloor": [16, 40], "gamma": 16, "logpmf": 16, "mass": 16, "point": [16, 46, 67, 68, 140], "pmf": 16, "metal": 16, "shader": 16, "compens": [16, 46, 67, 68, 70, 71], "although": [16, 140], "strictli": 16, "degener": 16, "layout": [17, 19, 26, 28, 93, 111, 113, 125, 126], "devic": [17, 19, 93, 111, 113, 125, 126], "requires_grad": [17, 19, 59, 60, 61, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 111, 113, 125, 126], "overrid": [17, 19, 27, 93, 111, 113, 125, 126], "gradient": [17, 19, 59, 60, 61, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 111, 113, 125, 126], "ndarrai": [18, 115], "agnost": [18, 115], "exponenti": [18, 20, 21, 28, 36, 37, 43, 45, 46, 47, 48, 56, 62, 63, 64, 67, 68, 72, 73, 74, 75, 76, 77, 95, 96, 102, 108, 109, 114, 135, 138], "y": [18, 50, 51, 52, 115, 139], "numpi": [18, 115], "ob": [20, 95, 96, 97, 99, 102, 104, 108, 109, 114], "level": [20, 114], "trend": 20, "alpha": [20, 96, 114], "beta": 20, "holt": 20, "linear": [20, 36, 50, 51, 52, 62, 63, 64, 65, 66, 76, 96, 135, 140], "smooth": [20, 96, 114], "s_0": [20, 96, 114], "x_0": [20, 96, 114], "b_0": 20, "x_1": 20, "s_": [20, 96, 114], "s_t": [20, 96, 114], "b_": 20, "b_t": 20, "revis": [20, 114], "time_const": [21, 43, 44, 48, 56, 62, 63, 76, 77, 95, 102, 108, 109], "decai": [21, 27, 28, 36, 37, 43, 45, 47, 48, 56, 62, 63, 64, 72, 73, 74, 75, 76, 77, 95, 102, 108, 109, 138, 139], "d_": [21, 22, 23, 24, 137], "constant": [21, 28, 36, 37, 43, 45, 47, 48, 56, 62, 63, 64, 76, 77, 95, 96, 102, 108, 109, 137, 138, 139, 140], "linearlli": 22, "wmin": [25, 29, 30], "wmax": [25, 29, 30], "weightdepend": [25, 29], "hard": [25, 28, 32, 33, 135], "lower": [25, 28, 29, 30, 32, 34, 38, 64, 137, 138], "w_": [25, 29, 40, 137], "min": [25, 29, 32, 34, 38, 112, 137], "upper": [25, 29, 30, 33, 35, 38, 137], "max": [25, 28, 29, 33, 35, 36, 37, 38, 45, 47, 64, 82, 112, 137, 138], "a_": [25, 28, 29, 32, 33, 34, 35, 137], "w": [25, 28, 29, 32, 33, 34, 35, 40, 50, 51, 52, 137], "eta_": [25, 28, 29, 32, 33, 34, 35, 137], "exclud": [25, 26, 27, 29, 32, 33, 34, 35, 39, 40, 50, 51, 52, 53, 57, 58, 81], "updatebound": [25, 28, 29, 30], "abc": [26, 30, 39, 53, 57, 99, 107], "interdepend": 26, "attach": 26, "detach": 26, "monitor": [26, 28, 100, 103, 105, 106, 110, 138], "_register_state_dict_hook": 26, "add_monitor": [26, 28], "trainabl": [26, 28], "identifi": 26, "successfulli": [26, 28], "abstract": [26, 30, 39, 53, 57, 99, 107], "notimplementederror": [26, 30, 39, 53, 57, 99], "add_train": 26, "clear": [26, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 98, 101, 107], "submodul": [26, 49], "delet": [26, 39, 40, 50, 51, 52], "well": [26, 29, 60, 135], "del_monitor": 26, "dentifi": 26, "del_train": 26, "get_monitor": 26, "yield": [26, 46, 55, 68, 71], "captur": 26, "num_class": 27, "classifi": 27, "per": [27, 40, 89], "intern": [27, 52, 81], "calcul": [27, 28, 99, 139], "learn": [27, 28, 30, 31, 36, 37, 39, 40, 45, 47, 50, 51, 52], "multipli": [27, 73, 75, 139], "them": [27, 85, 100, 101, 103, 105, 106, 110, 135], "b_k": [27, 37, 47, 62, 64, 138, 140], "group": [27, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 49, 53, 56, 57, 58, 62, 63, 64, 81], "total": [27, 138, 139, 140, 142], "possibl": [27, 98], "decay_r": 27, "logit": 27, "label": 27, "infer": 27, "truth": 27, "predict": 27, "averag": [27, 62, 63, 64, 96], "nclass": 27, "ndim": 27, "l_1": 27, "raw": 27, "recalcul": 27, "lr_post": 28, "lr_pre": 28, "tc_post": 28, "tc_pre": 28, "delai": [28, 39, 40, 41, 42, 50, 51, 52, 57, 58, 59, 89, 135], "interp_toler": 28, "trace_mod": 28, "liter": [28, 41, 42], "wd_lower": 28, "wd_upper": 28, "batch_reduct": [28, 36, 37, 45, 47, 82], "layerwiseupdat": 28, "plastic": [28, 135], "delta": [28, 36, 37, 41, 42, 43, 45, 46, 47, 48, 55, 56, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 95, 96, 102, 108, 109, 135, 137, 138, 139, 140], "bigl": 28, "post": [28, 39, 40, 50, 51, 52, 137], "bigr": 28, "trace": [28, 72, 73, 74, 75, 95, 102, 108, 109, 135], "vari": 28, "m": [28, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 84, 85, 89, 138, 139, 140, 142], "postsynapt": [28, 36, 39, 44, 45, 48, 53, 62, 63, 64, 85, 137, 138], "ltp": [28, 30, 137], "ltd": [28, 30, 137], "tau_": [28, 137], "assum": [28, 36, 39, 40, 45, 50, 51, 52, 82, 98], "co": [28, 41, 42, 89], "origin": [28, 36, 37, 45, 47, 82, 98], "visit": [28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 56, 62, 63, 64, 65, 66], "soft": [28, 29, 34, 35, 135], "zoo": [28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 56, 62, 63, 64, 65, 66], "spike_post": 28, "spike_pr": 28, "trace_post": 28, "trace_pr": 28, "fail": [28, 98], "lrpost": 28, "lrpre": 28, "depress": [28, 32, 34, 137, 138], "minpow": 29, "maxpow": 29, "expon": [29, 34, 35], "mu_": [29, 34, 35, 137], "power": [29, 34, 35, 137], "effect": [29, 30, 40, 50, 51, 138, 140], "magnitud": [30, 137, 138], "hasmax": 30, "hasmin": 30, "power_upper_bound": 31, "power_lower_bound": 31, "hard_upper_bound": 31, "hard_lower_bound": 31, "v_": [32, 33, 34, 35, 36, 37, 43, 45, 47, 48, 56, 62, 64, 76, 77, 78, 79, 138, 139, 140], "v": [32, 33, 34, 35], "rest_v": [36, 37, 43, 44, 45, 47, 48, 56, 62, 64, 76, 77, 79], "reset_v": [36, 37, 43, 44, 47, 48, 56, 78], "thresh_eq_v": [36, 45, 140], "refrac_t": [36, 37, 43, 44, 45, 47, 48, 56, 78, 79, 85], "tc_membran": [36, 37, 45, 47], "tc_adapt": [36, 37, 47], "spike_incr": [36, 37, 45, 47, 62, 63], "resist": [36, 37, 43, 44, 45, 47, 48, 56, 76, 77, 139], "batch_siz": [36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 56, 57, 58, 80, 81], "adaptationmixin": [36, 37, 45, 47], "voltagemixin": [36, 37, 43, 44, 45, 47, 48, 56], "spikerefractorymixin": [36, 37, 43, 44, 45, 47, 48, 56], "leaki": [36, 44, 45, 48, 135], "dynam": [36, 37, 41, 42, 43, 44, 45, 47, 48, 53, 56, 57, 76, 77, 78, 79, 138, 139, 140], "v_m": [36, 37, 43, 45, 47, 48, 56, 62, 64, 76, 77, 78, 79, 138, 139, 140], "rest": [36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 53, 56, 57, 62, 64, 76, 77, 79, 138, 139, 140], "r_mi": [36, 37, 43, 45, 47, 48, 56, 76, 77, 139, 140], "tau_m": [36, 37, 43, 45, 47, 48, 56, 76, 77, 139, 140], "theta_": [36, 45, 64, 66, 138, 139, 140], "sum_k": [36, 37, 45, 47, 138, 139, 140], "theta_k": [36, 45, 63, 64, 66, 138, 139], "tau_k": [36, 37, 47, 62, 63, 72, 73, 74, 75, 138, 139, 140], "leftarrow": [36, 37, 43, 45, 47, 48, 56, 62, 63, 64, 78, 79, 138, 139, 140], "d_k": [36, 45, 47, 138, 139, 140], "equilibrium": [36, 37, 43, 45, 47, 48, 56, 62, 64, 66, 76, 77, 79, 138, 139, 140], "mv": [36, 37, 43, 45, 47, 48, 56, 62, 63, 64, 66, 76, 77, 78, 79, 86, 138, 139, 140], "refractori": [36, 37, 43, 44, 45, 46, 47, 48, 53, 56, 62, 63, 64, 67, 68, 70, 71, 76, 77, 78, 79, 84, 85], "period": [36, 37, 43, 44, 45, 46, 47, 48, 53, 56, 62, 63, 64, 67, 68, 70, 71, 76, 77, 78, 79, 84, 85], "r_m": [36, 37, 43, 45, 47, 48, 56, 76, 77, 139], "omega": [36, 37, 43, 45, 47, 48, 56, 76, 77, 139], "keep_adapt": [36, 37, 45, 47], "refrac_lock": [36, 37, 43, 44, 45, 47, 48, 56], "na": [36, 37, 43, 44, 45, 47, 48, 56, 62, 65, 76, 77, 78, 79, 83, 87, 88, 90, 138, 139, 140, 142], "setter": [36, 45, 52, 82, 87, 91], "additon": [36, 45, 82], "lead": [36, 45, 82], "unreduc": [36, 45, 82], "bsize": [36, 39, 40, 44, 45, 48, 50, 51, 52, 53, 80, 81], "refrac": [36, 44, 45, 46, 48, 53, 62, 63, 64, 67, 68, 78, 79, 84, 85], "t_": [36, 44, 45, 48, 85, 137], "millivolt": [36, 44, 45, 48, 53, 86], "rheobase_v": [37, 43], "sharp": [37, 43, 140], "thresh_v": [37, 43, 44, 47, 48, 56, 78, 79, 140], "voltage_coupl": [37, 47, 62], "delta_t": [37, 43, 140], "v_t": [37, 43, 140], "i_x": [37, 42, 47, 138, 140, 142], "w_k": [37, 47, 62, 65, 138, 140], "a_k": [37, 62, 63, 64, 138, 140], "approach": [37, 43, 140], "rapidli": [37, 43], "steep": [37, 43, 140], "rheobas": [37, 43, 140], "strength": [37, 47, 56, 62, 77], "coupl": [37, 47, 62, 138, 140], "rang": [38, 98], "synaps": [39, 40, 41, 42, 49, 50, 51, 52, 58, 87, 88, 89, 90, 91, 92], "bia": [39, 40, 50, 51, 52, 59, 60], "learnabl": [39, 40, 50, 51, 52, 59, 60, 61], "binshap": [39, 40, 50, 51, 52], "boutshap": [39, 40, 50, 51, 52], "clearabl": [39, 40, 50, 51, 52], "delayedbi": [39, 40, 50, 51, 52], "maxmimum": [39, 40, 50, 51, 52], "compos": [39, 49], "py": [39, 40, 50, 51, 52], "meth": [39, 40, 50, 51, 52], "inshap": [39, 40, 50, 51, 52], "insiz": [39, 40, 50, 51, 52], "cach": [39, 40, 50, 51, 52], "refresh": [39, 40, 50, 51, 52], "like_input": [39, 40, 50, 51, 52], "syncurr": [39, 40, 50, 51, 52], "synspik": [39, 40, 50, 51, 52], "like_synapt": [39, 40, 50, 51, 52], "outshap": [39, 40, 50, 51, 52], "outsiz": [39, 40, 50, 51, 52], "postsyn_recept": [39, 40, 50, 51, 52], "l": 39, "presyn_recept": [39, 40, 50, 51, 52], "selector": [39, 40, 41, 42, 50, 51, 52, 57, 89], "synapt": [39, 40, 41, 42, 50, 51, 52, 57, 87, 88, 89, 90, 91], "height": 40, "width": 40, "channel": 40, "filter": [40, 49], "kernel": 40, "stride": 40, "pad": 40, "dilat": 40, "synapseconstructor": [40, 41, 42, 50, 51, 52, 57], "weight_init": [40, 50, 51, 52], "onetoon": [40, 50, 51, 52, 73, 75, 78, 79, 97, 98, 108, 109], "bias_init": [40, 50, 51, 52], "delay_init": [40, 50, 51, 52], "weightbiasdelaymixin": [40, 50, 51, 52], "connect": [40, 49, 50, 51, 52, 57, 58, 59, 60, 61, 137], "convolut": 40, "spatial": 40, "plane": 40, "c": 40, "h": 40, "kh": 40, "kw": 40, "delay_": [40, 50, 51, 59], "creat": [40, 50, 51, 59, 60, 61, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92], "unless": [40, 50, 51], "later": [40, 50, 51], "uniform": [40, 50, 51, 52], "interv": [40, 46, 50, 51, 52, 55, 67, 68, 70, 71], "rand": [40, 50, 51, 52, 125], "still": [40, 46, 67, 68, 72, 74, 95, 102], "anoth": [40, 89], "h_": 40, "formula": 40, "document": 40, "p_h": 40, "d_h": 40, "k_h": 40, "s_h": 40, "p_w": 40, "d_w": 40, "k_w": 40, "s_w": 40, "ph": 40, "pw": 40, "side": [40, 139], "dh": 40, "dw": [40, 137], "sh": 40, "sw": 40, "oper": [40, 99], "reli": 40, "upon": [40, 140], "expand": 40, "consequenti": 40, "memori": [40, 46, 55], "spike_q": [41, 42], "interp_mod": [41, 42], "interp_tol": [41, 42], "current_overbound": [41, 42], "spike_overbound": [41, 42], "delayedspikecurrentaccessormixin": [41, 42], "spikederivedcurrentmixin": 41, "memoryless": [41, 42], "respond": [41, 42, 138], "instantan": [41, 42], "q": [41, 42, 142], "charg": [41, 42, 142], "carri": [41, 42, 142], "pc": [41, 42, 142], "cuba": [41, 42, 135], "partialconstructor": [41, 42, 57], "spikecurrentmixin": 42, "passthrough": [42, 104], "inject": 42, "glif": [44, 45, 135, 138, 139], "alia": 44, "lif": [44, 135], "reset_v_add": 45, "reset_v_mul": 45, "rc_adapt": 45, "lambda_k": [45, 139], "m_v": [45, 79, 139], "b_v": [45, 79, 139], "unitless": [45, 47, 56, 72, 73, 74, 75, 77, 79, 140], "frequenc": [46, 55, 67, 68, 69, 70, 71, 138], "generatormixin": [46, 55], "refractorystepmixin": 46, "encod": [46, 55], "poisson": [46, 55, 67, 68, 69, 70, 71], "randomli": [46, 67, 68], "hz": [46, 55, 67, 68, 69, 70, 71], "inter": [46, 67, 68, 89], "distanc": [46, 67, 68], "th": [46, 62, 63, 64, 67, 68], "onlin": [46, 55], "iter": [46, 55, 68, 71], "intens": [46, 55], "hertz": [46, 55], "pin": 46, "crit_v": [47, 56, 77], "affin": [47, 56, 77], "crit": [47, 56, 77, 140], "drift": [47, 56, 77], "toward": [47, 56, 77, 139, 140], "awai": [47, 56, 77, 140], "connection_kwarg": 49, "neuron_kwarg": 49, "sequenti": 49, "block": 49, "kei": 49, "written": 49, "avoid": 49, "alwai": [49, 89], "uniqu": 49, "architectur": 49, "explicitli": 49, "go": 49, "unexpect": 49, "in_shap": 50, "out_shap": 50, "interc": [50, 52], "prod": [50, 51, 52], "m_0": 50, "unbatch": [50, 51, 52], "transform": [50, 51, 52], "odot": [51, 52], "inputoutput": [51, 52], "i_n": 52, "lineardens": 52, "creation": 52, "mask": [52, 73, 75, 76, 77], "shapemixin": [53, 57], "extra_repr": 53, "norm": [54, 94], "stepmixin": 55, "replic": [55, 70, 71, 81], "bindsnet": [55, 70, 71], "parameter": [55, 70, 71, 137], "invers": [55, 70, 71, 139, 142], "historymodul": [57, 87, 88, 89, 90, 91, 92, 107], "nanoamper": [57, 83, 88, 89, 91], "current_at": [57, 89], "spike_at": [57, 89], "boolean": 57, "newli": 58, "weightbiasmixin": 59, "mixin": [59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "inherit": [59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "weight_": [59, 60, 61], "bias_": [59, 60], "weightmixin": 60, "maintain": [62, 63, 64, 78, 79], "doesn": [62, 63, 64], "adapt_r": 64, "rebound_r": 64, "adapt_reset_min": 64, "permit": [64, 73, 75], "adap": [65, 66], "i_": 65, "optioon": [67, 68], "nonsens": [67, 68], "1000": [67, 68], "inhomogen": 69, "_description_": 69, "clamp": 69, "exce": 69, "never": [70, 71], "condit": [72, 73, 74, 75, 140], "incorpor": [72, 73, 74, 75, 95, 96, 97, 98, 99, 102, 104, 107, 108, 109, 139, 140], "matchfn": [73, 75], "trace_cumul": 73, "predic": [73, 75], "datatyp": [73, 75, 97, 108, 109], "trace_nearest": 75, "masked_input": [76, 77], "held": [78, 79], "v_slope": 79, "v_intercept": 79, "batchmixin": 81, "concept": 81, "_shape": 81, "bshape": 81, "adaptation_": 82, "adapt_batchreduc": 82, "current_": [83, 87, 88, 89, 90], "refrac_": [84, 85], "refractorymixin": 85, "driven": 86, "voltage_": 86, "currentmixin": [87, 90], "therefrom": [87, 91], "_to_spik": [87, 89], "noth": [87, 91], "primit": [88, 90, 92], "primitive_curr": 89, "primitive_spik": 89, "current_interp": 89, "spike_interp": 89, "current_overv": 89, "spike_overv": 89, "_to_curr": [89, 91], "spike_": [89, 90, 91, 92], "_current_interp": 89, "_spike_interp": 89, "_current_ob_v": 89, "_spike_ob_v": 89, "_primitive_curr": 89, "_primitive_spik": 89, "_interp_tol": 89, "spikemixin": [90, 91], "randn": 93, "12": [94, 138], "demonin": 94, "foldingreduc": [95, 96, 97, 102, 104, 108, 109], "fold": [95, 96, 97, 99, 102, 104, 108, 109], "entir": [95, 96, 97, 102, 104, 108, 109], "empti": [95, 96, 97, 99, 102, 104, 108, 109], "move": 96, "decoupl": 96, "infin": 97, "fold_fn": 98, "math": 98, "map_fn": 98, "keepshap": 98, "reiniti": [98, 101, 107], "storag": 98, "equival": [98, 139], "histor": 98, "dump": [98, 101, 107], "tempor": 98, "oldest": 98, "peek": [98, 101, 107], "view": [98, 101, 107], "fall": 98, "foldreduc": 99, "manytoon": 100, "receiv": 100, "sent": 100, "directli": 104, "content": [105, 106], "multiplicit": [108, 109], "dot": 110, "notat": 110, "turn": 110, "ti": 110, "resmin": 112, "resmax": 112, "srcmin": 112, "srcmax": 112, "unchang": 112, "amin": 112, "amax": 112, "shortcut": 113, "full": 113, "squar": 115, "root": 115, "convers": 116, "convert": 116, "leftmost": 116, "arbitrari": [117, 118, 119, 120, 121, 122], "uniformli": 125, "depth": 135, "academ": 135, "plan": 135, "futur": 135, "alif": 135, "3": [135, 140], "4": [135, 138, 140], "5": [135, 140], "nonlinear": 135, "qif": 135, "izhikevich": 135, "eif": 135, "adex": 135, "conduct": [135, 139], "coba": 135, "stdp": 135, "anti": 135, "hebbian": 135, "astdp": 135, "mstdp": 135, "elig": 135, "mstdpet": 135, "resum": 135, "tbd": 136, "categori": 137, "With": [137, 138, 139, 140], "w_t": 137, "dirac": [137, 142], "pp": 137, "adjust": 137, "neighbor": 137, "flip": 137, "sign": 137, "postsynpat": 137, "place": 137, "penal": 137, "penalti": 137, "law": 137, "heavisid": 137, "impos": 138, "regard": 138, "steadi": 138, "give": 138, "degre": 138, "freedom": 138, "modif": 138, "dampen": 138, "amplifi": 138, "addition": 138, "said": 138, "goe": 138, "dw_k": [138, 140], "approx": [138, 140], "subthreshold": [138, 140], "doi": [138, 139, 140], "10": [138, 139, 140], "1017": [138, 139, 140], "cbo9781107447615": [138, 139, 140], "6": [138, 140], "1152": 138, "jn": 138, "00686": 138, "2005": 138, "Be": [138, 139], "1038": [138, 139], "s41467": [138, 139], "017": [138, 139], "02717": [138, 139], "allen": [138, 139], "institut": [138, 139], "whitepap": [138, 139], "rebound": 138, "1162": 138, "neco": 138, "2008": 138, "680": 138, "neco_a_00196": 138, "1803": 138, "09574": 138, "021": 138, "24427": 138, "8": [138, 140], "00234": 138, "2019": 138, "dv_m": [139, 140], "basic": 139, "rule": 139, "slope": [139, 140], "show": [139, 140], "v_r": [139, 140], "60": [139, 140], "plot": [139, 140], "c_m": 139, "g_l": 139, "capacit": 139, "nf": 139, "phrase": 139, "leak": 139, "expos": 139, "isbn": [139, 140, 142], "9780262548083": [139, 140, 142], "020": 139, "17236": 139, "fraction": 139, "intercept": 139, "convent": 139, "conting": 139, "reach": 139, "critic": 140, "tendenc": 140, "stabl": 140, "unstabl": 140, "attract": 140, "repel": 140, "v_c": 140, "50": 140, "depeend": 140, "3390": 140, "brainsci12070863": 140, "7551": 140, "mitpress": 140, "2526": 140, "001": 140, "0001": 140, "close": 140, "rapid": 140, "upsw": 140, "rightarrow": 140, "easi": 140, "confus": 140, "unrel": 140, "occasion": 140, "denot": 140, "vartheta_": 140, "rh": 140, "thresh": 140, "usual": 140, "simuat": 140, "illustr": 140, "4249": 140, "scholarpedia": 140, "8427": 140, "1523": 140, "jneurosci": 140, "23": 140, "37": 140, "11628": 140, "2003": 140, "t_f": 142, "veri": 142, "role": 142, "deliv": 142, "dramat": 142}, "objects": {"inferno": [[6, 0, 1, "", "Configuration"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "HistoryModule"], [9, 0, 1, "", "Hook"], [10, 0, 1, "", "Interpolation"], [11, 0, 1, "", "Module"], [12, 0, 1, "", "RemoteHook"], [13, 0, 1, "", "StateHook"], [5, 3, 0, "-", "dists"], [17, 4, 1, "", "empty"], [18, 4, 1, "", "exp"], [19, 4, 1, "", "full"], [20, 4, 1, "", "holt_linear_smoothing"], [21, 4, 1, "", "interp_exp_decay"], [22, 4, 1, "", "interp_linear"], [23, 4, 1, "", "interp_nearest"], [24, 4, 1, "", "interp_previous"], [129, 3, 0, "-", "learn"], [131, 3, 0, "-", "neural"], [93, 4, 1, "", "normal"], [94, 4, 1, "", "normalize"], [111, 4, 1, "", "ones"], [112, 4, 1, "", "rescale"], [113, 4, 1, "", "scalar"], [114, 4, 1, "", "simple_exponential_smoothing"], [115, 4, 1, "", "sqrt"], [116, 4, 1, "", "tensorize"], [125, 4, 1, "", "uniform"], [126, 4, 1, "", "zeros"]], "inferno.Configuration": [[6, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 2, 1, "", "constraints_repr"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "mindims"], [7, 1, 1, "", "mindims_"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[8, 1, 1, "", "deregister_constrained"], [8, 2, 1, "", "dt"], [8, 1, 1, "", "history"], [8, 2, 1, "", "hlen"], [8, 2, 1, "", "hsize"], [8, 1, 1, "", "latest"], [8, 1, 1, "", "pushto"], [8, 1, 1, "", "register_constrained"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "select"], [8, 1, 1, "", "tick"], [8, 1, 1, "", "update"]], "inferno.Hook": [[9, 1, 1, "", "deregister"], [9, 2, 1, "", "on_eval"], [9, 2, 1, "", "on_train"], [9, 1, 1, "", "posthook"], [9, 1, 1, "", "prehook"], [9, 1, 1, "", "register"], [9, 2, 1, "", "registered"]], "inferno.Module": [[11, 1, 1, "", "get_extra"], [11, 1, 1, "", "get_extra_state"], [11, 1, 1, "", "register_extra"], [11, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[12, 1, 1, "", "add_inner"], [12, 1, 1, "", "innerhook"], [12, 2, 1, "", "on_eval_inner"], [12, 2, 1, "", "on_train_inner"], [12, 1, 1, "", "remove_inner"]], "inferno.StateHook": [[13, 2, 1, "", "module"], [13, 1, 1, "", "register"]], "inferno.dists": [[14, 0, 1, "", "LogNormal"], [15, 0, 1, "", "Normal"], [16, 0, 1, "", "Poisson"]], "inferno.dists.LogNormal": [[14, 1, 1, "", "mean"], [14, 1, 1, "", "sample"], [14, 1, 1, "", "sample_mv"], [14, 1, 1, "", "validate"], [14, 1, 1, "", "variance"]], "inferno.dists.Normal": [[15, 1, 1, "", "cdf"], [15, 1, 1, "", "logcdf"], [15, 1, 1, "", "logpdf"], [15, 1, 1, "", "mean"], [15, 1, 1, "", "pdf"], [15, 1, 1, "", "sample"], [15, 1, 1, "", "validate"], [15, 1, 1, "", "variance"]], "inferno.dists.Poisson": [[16, 1, 1, "", "cdf"], [16, 1, 1, "", "logcdf"], [16, 1, 1, "", "logpmf"], [16, 1, 1, "", "mean"], [16, 1, 1, "", "pmf"], [16, 1, 1, "", "sample"], [16, 1, 1, "", "validate"], [16, 1, 1, "", "variance"]], "inferno.learn": [[25, 0, 1, "", "HardWeightDependence"], [26, 0, 1, "", "LayerwiseUpdater"], [27, 0, 1, "", "MaxRateClassifier"], [28, 0, 1, "", "STDP"], [29, 0, 1, "", "SoftWeightDependence"], [30, 0, 1, "", "WeightDependence"], [130, 3, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[25, 1, 1, "", "lower"], [25, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[26, 1, 1, "", "add_monitor"], [26, 1, 1, "", "add_monitors"], [26, 1, 1, "", "add_trainable"], [26, 1, 1, "", "attach"], [26, 1, 1, "", "clear"], [26, 1, 1, "", "del_monitor"], [26, 1, 1, "", "del_monitors"], [26, 1, 1, "", "del_trainable"], [26, 1, 1, "", "detach"], [26, 1, 1, "", "forward"], [26, 1, 1, "", "get_monitor"], [26, 1, 1, "", "get_monitors"], [26, 2, 1, "", "monitors"], [26, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[27, 2, 1, "", "assignments"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "infer"], [27, 1, 1, "", "learn"], [27, 2, 1, "", "nclass"], [27, 2, 1, "", "ndim"], [27, 2, 1, "", "occurances"], [27, 2, 1, "", "proportional"], [27, 2, 1, "", "proportions"], [27, 2, 1, "", "rates"], [27, 2, 1, "", "shape"]], "inferno.learn.STDP": [[28, 1, 1, "", "add_monitors"], [28, 2, 1, "", "dt"], [28, 1, 1, "", "forward"], [28, 2, 1, "", "lrpost"], [28, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[29, 1, 1, "", "lower"], [29, 2, 1, "", "maxpow"], [29, 2, 1, "", "minpow"], [29, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[30, 2, 1, "", "hasmax"], [30, 2, 1, "", "hasmin"], [30, 1, 1, "", "lower"], [30, 1, 1, "", "upper"], [30, 2, 1, "", "wmax"], [30, 2, 1, "", "wmin"]], "inferno.learn.functional": [[31, 0, 1, "", "UpdateBounding"], [32, 4, 1, "", "hard_lower_bounding"], [33, 4, 1, "", "hard_upper_bounding"], [34, 4, 1, "", "power_lower_bounding"], [35, 4, 1, "", "power_upper_bounding"]], "inferno.neural": [[36, 0, 1, "", "ALIF"], [37, 0, 1, "", "AdEx"], [38, 0, 1, "", "Clamping"], [39, 0, 1, "", "Connection"], [40, 0, 1, "", "Conv2D"], [41, 0, 1, "", "DeltaCurrent"], [42, 0, 1, "", "DeltaPlusCurrent"], [43, 0, 1, "", "EIF"], [44, 0, 1, "", "GLIF1"], [45, 0, 1, "", "GLIF2"], [46, 0, 1, "", "HomogeneousPoissonEncoder"], [47, 0, 1, "", "Izhikevich"], [48, 0, 1, "", "LIF"], [49, 0, 1, "", "Layer"], [50, 0, 1, "", "LinearDense"], [51, 0, 1, "", "LinearDirect"], [52, 0, 1, "", "LinearLateral"], [53, 0, 1, "", "Neuron"], [54, 0, 1, "", "Normalization"], [55, 0, 1, "", "PoissonIntervalEncoder"], [56, 0, 1, "", "QIF"], [57, 0, 1, "", "Synapse"], [58, 0, 1, "", "SynapseConstructor"], [132, 3, 0, "-", "functional"]], "inferno.neural.ALIF": [[36, 2, 1, "", "adaptation"], [36, 2, 1, "", "bsize"], [36, 1, 1, "", "clear"], [36, 2, 1, "", "dt"], [36, 1, 1, "", "forward"], [36, 2, 1, "", "refrac"], [36, 2, 1, "", "spike"], [36, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[37, 1, 1, "", "clear"], [37, 2, 1, "", "dt"], [37, 1, 1, "", "forward"]], "inferno.neural.Connection": [[39, 2, 1, "", "bias"], [39, 2, 1, "", "biased"], [39, 2, 1, "", "binshape"], [39, 2, 1, "", "boutshape"], [39, 2, 1, "", "bsize"], [39, 1, 1, "", "clear"], [39, 2, 1, "", "delay"], [39, 2, 1, "", "delayedby"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"], [39, 2, 1, "", "inshape"], [39, 2, 1, "", "insize"], [39, 1, 1, "", "like_input"], [39, 1, 1, "", "like_synaptic"], [39, 2, 1, "", "outshape"], [39, 2, 1, "", "outsize"], [39, 1, 1, "", "postsyn_receptive"], [39, 1, 1, "", "presyn_receptive"], [39, 2, 1, "", "selector"], [39, 2, 1, "", "synapse"], [39, 2, 1, "", "syncurrent"], [39, 2, 1, "", "synspike"], [39, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[40, 2, 1, "", "bias"], [40, 2, 1, "", "biased"], [40, 2, 1, "", "binshape"], [40, 2, 1, "", "boutshape"], [40, 2, 1, "", "bsize"], [40, 1, 1, "", "clear"], [40, 2, 1, "", "delay"], [40, 2, 1, "", "delayedby"], [40, 2, 1, "", "dt"], [40, 1, 1, "", "forward"], [40, 2, 1, "", "inshape"], [40, 2, 1, "", "insize"], [40, 1, 1, "", "like_input"], [40, 1, 1, "", "like_synaptic"], [40, 2, 1, "", "outshape"], [40, 2, 1, "", "outsize"], [40, 1, 1, "", "postsyn_receptive"], [40, 1, 1, "", "presyn_receptive"], [40, 2, 1, "", "selector"], [40, 2, 1, "", "syncurrent"], [40, 2, 1, "", "synspike"], [40, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[41, 1, 1, "", "clear"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[42, 1, 1, "", "clear"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[43, 1, 1, "", "clear"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[44, 2, 1, "", "bsize"], [44, 1, 1, "", "clear"], [44, 2, 1, "", "dt"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "refrac"], [44, 2, 1, "", "spike"], [44, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[45, 2, 1, "", "adaptation"], [45, 2, 1, "", "bsize"], [45, 1, 1, "", "clear"], [45, 2, 1, "", "dt"], [45, 1, 1, "", "forward"], [45, 2, 1, "", "refrac"], [45, 2, 1, "", "spike"], [45, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[46, 2, 1, "", "compensated"], [46, 1, 1, "", "forward"], [46, 2, 1, "", "frequency"], [46, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[47, 1, 1, "", "clear"], [47, 2, 1, "", "dt"], [47, 1, 1, "", "forward"]], "inferno.neural.LIF": [[48, 2, 1, "", "bsize"], [48, 1, 1, "", "clear"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"], [48, 2, 1, "", "refrac"], [48, 2, 1, "", "spike"], [48, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[49, 1, 1, "", "clear"], [49, 2, 1, "", "connection"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "neuron"], [49, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[50, 2, 1, "", "bias"], [50, 2, 1, "", "biased"], [50, 2, 1, "", "binshape"], [50, 2, 1, "", "boutshape"], [50, 2, 1, "", "bsize"], [50, 1, 1, "", "clear"], [50, 2, 1, "", "delay"], [50, 2, 1, "", "delayedby"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "inshape"], [50, 2, 1, "", "insize"], [50, 1, 1, "", "like_input"], [50, 1, 1, "", "like_synaptic"], [50, 2, 1, "", "outshape"], [50, 2, 1, "", "outsize"], [50, 1, 1, "", "postsyn_receptive"], [50, 1, 1, "", "presyn_receptive"], [50, 2, 1, "", "selector"], [50, 2, 1, "", "syncurrent"], [50, 2, 1, "", "synspike"], [50, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[51, 2, 1, "", "bias"], [51, 2, 1, "", "biased"], [51, 2, 1, "", "binshape"], [51, 2, 1, "", "boutshape"], [51, 2, 1, "", "bsize"], [51, 1, 1, "", "clear"], [51, 2, 1, "", "delay"], [51, 2, 1, "", "delayedby"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "inshape"], [51, 2, 1, "", "insize"], [51, 1, 1, "", "like_input"], [51, 1, 1, "", "like_synaptic"], [51, 2, 1, "", "outshape"], [51, 2, 1, "", "outsize"], [51, 1, 1, "", "postsyn_receptive"], [51, 1, 1, "", "presyn_receptive"], [51, 2, 1, "", "selector"], [51, 2, 1, "", "syncurrent"], [51, 2, 1, "", "synspike"], [51, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[52, 2, 1, "", "bias"], [52, 2, 1, "", "biased"], [52, 2, 1, "", "binshape"], [52, 2, 1, "", "boutshape"], [52, 2, 1, "", "bsize"], [52, 1, 1, "", "clear"], [52, 2, 1, "", "delay"], [52, 2, 1, "", "delayedby"], [52, 2, 1, "", "dt"], [52, 1, 1, "", "forward"], [52, 2, 1, "", "inshape"], [52, 2, 1, "", "insize"], [52, 1, 1, "", "like_input"], [52, 1, 1, "", "like_synaptic"], [52, 2, 1, "", "outshape"], [52, 2, 1, "", "outsize"], [52, 1, 1, "", "postsyn_receptive"], [52, 1, 1, "", "presyn_receptive"], [52, 2, 1, "", "selector"], [52, 2, 1, "", "syncurrent"], [52, 2, 1, "", "synspike"], [52, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[53, 2, 1, "", "bsize"], [53, 1, 1, "", "clear"], [53, 2, 1, "", "dt"], [53, 1, 1, "", "extra_repr"], [53, 1, 1, "", "forward"], [53, 2, 1, "", "refrac"], [53, 2, 1, "", "spike"], [53, 2, 1, "", "voltage"]], "inferno.neural.PoissonIntervalEncoder": [[55, 1, 1, "", "forward"], [55, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[56, 1, 1, "", "clear"], [56, 2, 1, "", "dt"], [56, 1, 1, "", "forward"]], "inferno.neural.Synapse": [[57, 1, 1, "", "clear"], [57, 2, 1, "", "current"], [57, 1, 1, "", "current_at"], [57, 2, 1, "", "delay"], [57, 2, 1, "", "dt"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "partialconstructor"], [57, 2, 1, "", "spike"], [57, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[59, 0, 1, "", "WeightBiasDelayMixin"], [60, 0, 1, "", "WeightBiasMixin"], [61, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[59, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[60, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[61, 2, 1, "", "weight"]], "inferno.neural.functional": [[62, 4, 1, "", "adaptive_currents_linear"], [63, 4, 1, "", "adaptive_thresholds_linear_spike"], [64, 4, 1, "", "adaptive_thresholds_linear_voltage"], [65, 4, 1, "", "apply_adaptive_currents"], [66, 4, 1, "", "apply_adaptive_thresholds"], [67, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [68, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [69, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [70, 4, 1, "", "enc_poisson_interval"], [71, 4, 1, "", "enc_poisson_interval_online"], [72, 4, 1, "", "trace_cumulative"], [73, 4, 1, "", "trace_cumulative_scaled"], [74, 4, 1, "", "trace_nearest"], [75, 4, 1, "", "trace_nearest_scaled"], [76, 4, 1, "", "voltage_integration_linear"], [77, 4, 1, "", "voltage_integration_quadratic"], [78, 4, 1, "", "voltage_thresholding"], [79, 4, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[80, 0, 1, "", "BatchMixin"], [81, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[80, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[81, 2, 1, "", "bshape"], [81, 2, 1, "", "bsize"], [81, 2, 1, "", "count"], [81, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[82, 0, 1, "", "AdaptationMixin"], [83, 0, 1, "", "CurrentMixin"], [84, 0, 1, "", "RefractoryMixin"], [85, 0, 1, "", "SpikeRefractoryMixin"], [86, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[82, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[83, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[84, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[85, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[86, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[87, 0, 1, "", "CurrentDerivedSpikeMixin"], [88, 0, 1, "", "CurrentMixin"], [89, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [90, 0, 1, "", "SpikeCurrentMixin"], [91, 0, 1, "", "SpikeDerivedCurrentMixin"], [92, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[87, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[88, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[89, 1, 1, "", "current_at"], [89, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[91, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[92, 2, 1, "", "spike"]], "inferno.observe": [[95, 0, 1, "", "CumulativeTraceReducer"], [96, 0, 1, "", "EMAReducer"], [97, 0, 1, "", "EventReducer"], [98, 0, 1, "", "FoldReducer"], [99, 0, 1, "", "FoldingReducer"], [100, 0, 1, "", "InputMonitor"], [101, 0, 1, "", "Monitor"], [102, 0, 1, "", "NearestTraceReducer"], [103, 0, 1, "", "OutputMonitor"], [104, 0, 1, "", "PassthroughReducer"], [105, 0, 1, "", "PostMonitor"], [106, 0, 1, "", "PreMonitor"], [107, 0, 1, "", "Reducer"], [108, 0, 1, "", "ScaledCumulativeTraceReducer"], [109, 0, 1, "", "ScaledNearestTraceReducer"], [110, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[95, 2, 1, "", "dt"], [95, 1, 1, "", "fold"], [95, 1, 1, "", "initialize"], [95, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[96, 1, 1, "", "fold"], [96, 1, 1, "", "initialize"], [96, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[97, 1, 1, "", "fold"], [97, 1, 1, "", "initialize"], [97, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[98, 1, 1, "", "clear"], [98, 2, 1, "", "data"], [98, 2, 1, "", "dt"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "forward"], [98, 2, 1, "", "hlen"], [98, 1, 1, "", "peek"], [98, 1, 1, "", "push"], [98, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[99, 1, 1, "", "fold"], [99, 1, 1, "", "initialize"], [99, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[101, 1, 1, "", "clear"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "peek"], [101, 2, 1, "", "reducer"], [101, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[102, 2, 1, "", "dt"], [102, 1, 1, "", "fold"], [102, 1, 1, "", "initialize"], [102, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[104, 1, 1, "", "fold"], [104, 1, 1, "", "initialize"], [104, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[107, 1, 1, "", "clear"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "forward"], [107, 1, 1, "", "peek"], [107, 1, 1, "", "push"], [107, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[108, 2, 1, "", "dt"], [108, 1, 1, "", "fold"], [108, 1, 1, "", "initialize"], [108, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[109, 2, 1, "", "dt"], [109, 1, 1, "", "fold"], [109, 1, 1, "", "initialize"], [109, 1, 1, "", "interpolate"]], "inferno.typing": [[117, 0, 1, "", "ManyToMany"], [118, 0, 1, "", "ManyToManyMethod"], [119, 0, 1, "", "ManyToOne"], [120, 0, 1, "", "ManyToOneMethod"], [121, 0, 1, "", "OneToMany"], [122, 0, 1, "", "OneToManyMethod"], [123, 0, 1, "", "OneToOne"], [124, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 130, 132], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 129, 137], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 140], "decai": 2, "constant": 2, "trace": [2, 132, 137], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 141, 142], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 53, 131, 132, 135, 138, 139, 140], "system": 3, "dynam": [3, 132], "welcom": 4, "inferno": [4, 5, 128, 129, 130, 131, 132, 133, 134], "": 4, "document": 4, "dist": 5, "distribut": 5, "configur": 6, "dimensionalmodul": 7, "historymodul": 8, "shape": [8, 27, 39, 40, 46, 50, 51, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 89, 98], "hook": [9, 131], "interpol": [10, 128], "modul": [11, 137], "remotehook": 12, "statehook": 13, "lognorm": 14, "paramet": [14, 15, 16, 129, 130], "support": [14, 15, 16], "normal": [15, 54, 93, 94], "poisson": 16, "empti": 17, "exp": 18, "full": 19, "holt_linear_smooth": 20, "interp_exp_decai": 21, "interp_linear": 22, "interp_nearest": 23, "interp_previ": 24, "hardweightdepend": 25, "layerwiseupdat": 26, "maxrateclassifi": 27, "stdp": [28, 137], "softweightdepend": 29, "weightdepend": 30, "updatebound": 31, "hard_lower_bound": 32, "hard_upper_bound": 33, "power_lower_bound": 34, "power_upper_bound": 35, "alif": [36, 139], "adex": [37, 140], "clamp": 38, "connect": [39, 131], "conv2d": 40, "deltacurr": 41, "deltapluscurr": 42, "eif": [43, 140], "glif1": [44, 139], "glif2": [45, 139], "homogeneouspoissonencod": 46, "izhikevich": [47, 140], "lif": [48, 139], "layer": 49, "lineardens": 50, "lineardirect": 51, "linearlater": 52, "poissonintervalencod": 55, "qif": [56, 140], "synaps": [57, 131, 135, 141, 142], "synapseconstructor": 58, "weightbiasdelaymixin": 59, "weightbiasmixin": 60, "weightmixin": 61, "adaptive_currents_linear": 62, "adaptive_thresholds_linear_spik": 63, "adaptive_thresholds_linear_voltag": 64, "apply_adaptive_curr": 65, "apply_adaptive_threshold": 66, "enc_homogeneous_poisson_exp_interv": 67, "enc_homogeneous_poisson_exp_interval_onlin": 68, "enc_inhomogenous_poisson_bernoulli_approx": 69, "enc_poisson_interv": 70, "enc_poisson_interval_onlin": 71, "trace_cumul": 72, "trace_cumulative_sc": 73, "trace_nearest": 74, "trace_nearest_sc": 75, "voltage_integration_linear": 76, "voltage_integration_quadrat": 77, "voltage_threshold": 78, "voltage_thresholding_slope_intercept": 79, "batchmixin": 80, "shapemixin": 81, "adaptationmixin": 82, "currentmixin": [83, 88], "refractorymixin": 84, "spikerefractorymixin": 85, "voltagemixin": 86, "currentderivedspikemixin": 87, "delayedspikecurrentaccessormixin": 89, "spikecurrentmixin": 90, "spikederivedcurrentmixin": 91, "spikemixin": 92, "cumulativetracereduc": 95, "emareduc": 96, "eventreduc": 97, "foldreduc": 98, "foldingreduc": 99, "inputmonitor": 100, "monitor": [101, 133], "nearesttracereduc": 102, "outputmonitor": 103, "passthroughreduc": 104, "postmonitor": 105, "premonitor": 106, "reduc": [107, 133], "scaledcumulativetracereduc": 108, "scalednearesttracereduc": 109, "statemonitor": 110, "ones": 111, "rescal": 112, "scalar": 113, "simple_exponential_smooth": 114, "sqrt": 115, "tensor": [116, 128], "manytomani": 117, "manytomanymethod": 118, "manytoon": 119, "manytoonemethod": 120, "onetomani": 121, "onetomanymethod": 122, "onetoon": 123, "onetoonemethod": 124, "uniform": 125, "zero": 126, "api": 127, "refer": [127, 138, 139, 140, 142], "infrastructur": 128, "gener": [128, 139], "math": 128, "learn": [129, 130, 135, 136, 137], "compon": [129, 131, 133], "updat": 129, "spike": [129, 132, 137, 138], "depend": [129, 130, 137, 138], "plastic": [129, 137], "bound": [129, 137], "classifi": 129, "neural": [131, 132], "encod": [131, 132], "type": [131, 134], "mixin": 131, "observ": 133, "callabl": 134, "model": [135, 139, 140, 141, 142], "method": [135, 136, 137], "zoo": 135, "overview": [135, 136, 137, 138], "resum": 136, "like": [136, 137], "formul": [137, 138, 139, 140, 141, 142], "delai": 137, "anti": 137, "hebbian": 137, "astdp": 137, "descript": [137, 139, 140, 142], "mstdp": 137, "elig": 137, "mstdpet": 137, "weight": 137, "soft": 137, "hard": 137, "adapt": [138, 139, 140], "current": [138, 142], "linear": [138, 139], "threshold": 138, "voltag": 138, "leaki": 139, "integr": [139, 140], "fire": [139, 140], "altern": 139, "1": 139, "2": 139, "3": 139, "glif3": 139, "4": 139, "glif4": 139, "5": 139, "glif5": 139, "nonlinear": 140, "quadrat": 140, "conduct": 141, "base": [141, 142], "coba": 141, "variant": [141, 142], "cuba": 142}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.dists": [[5, "module-inferno.dists"]], "Distributions": [[5, "distributions"]], "Configuration": [[6, "configuration"]], "DimensionalModule": [[7, "dimensionalmodule"]], "HistoryModule": [[8, "historymodule"]], "Shape": [[8, null], [27, null], [27, null], [27, null], [27, null], [27, null], [27, null], [27, null], [39, null], [39, null], [39, null], [39, null], [40, null], [40, null], [40, null], [40, null], [40, null], [40, null], [40, null], [46, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [52, null], [52, null], [52, null], [52, null], [52, null], [52, null], [52, null], [55, null], [62, null], [63, null], [64, null], [67, null], [68, null], [69, null], [70, null], [71, null], [89, null], [89, null], [98, null]], "Hook": [[9, "hook"]], "Interpolation": [[10, "interpolation"], [128, "interpolation"]], "Module": [[11, "module"]], "RemoteHook": [[12, "remotehook"]], "StateHook": [[13, "statehook"]], "LogNormal": [[14, "lognormal"]], "Parameters": [[14, null], [15, null], [16, null]], "Support": [[14, null], [15, null], [16, null]], "Normal": [[15, "normal"]], "Poisson": [[16, "poisson"]], "empty": [[17, "empty"]], "exp": [[18, "exp"]], "full": [[19, "full"]], "holt_linear_smoothing": [[20, "holt-linear-smoothing"]], "interp_exp_decay": [[21, "interp-exp-decay"]], "interp_linear": [[22, "interp-linear"]], "interp_nearest": [[23, "interp-nearest"]], "interp_previous": [[24, "interp-previous"]], "HardWeightDependence": [[25, "hardweightdependence"]], "LayerwiseUpdater": [[26, "layerwiseupdater"]], "MaxRateClassifier": [[27, "maxrateclassifier"]], "STDP": [[28, "stdp"]], "SoftWeightDependence": [[29, "softweightdependence"]], "WeightDependence": [[30, "weightdependence"]], "UpdateBounding": [[31, "updatebounding"]], "hard_lower_bounding": [[32, "hard-lower-bounding"]], "hard_upper_bounding": [[33, "hard-upper-bounding"]], "power_lower_bounding": [[34, "power-lower-bounding"]], "power_upper_bounding": [[35, "power-upper-bounding"]], "ALIF": [[36, "alif"]], "AdEx": [[37, "adex"]], "Clamping": [[38, "clamping"]], "Connection": [[39, "connection"]], "Conv2D": [[40, "conv2d"]], "DeltaCurrent": [[41, "deltacurrent"]], "DeltaPlusCurrent": [[42, "deltapluscurrent"]], "EIF": [[43, "eif"]], "GLIF1": [[44, "glif1"]], "GLIF2": [[45, "glif2"]], "HomogeneousPoissonEncoder": [[46, "homogeneouspoissonencoder"]], "Izhikevich": [[47, "izhikevich"]], "LIF": [[48, "lif"]], "Layer": [[49, "layer"]], "LinearDense": [[50, "lineardense"]], "LinearDirect": [[51, "lineardirect"]], "LinearLateral": [[52, "linearlateral"]], "Neuron": [[53, "neuron"]], "Normalization": [[54, "normalization"]], "PoissonIntervalEncoder": [[55, "poissonintervalencoder"]], "QIF": [[56, "qif"]], "Synapse": [[57, "synapse"]], "SynapseConstructor": [[58, "synapseconstructor"]], "WeightBiasDelayMixin": [[59, "weightbiasdelaymixin"]], "WeightBiasMixin": [[60, "weightbiasmixin"]], "WeightMixin": [[61, "weightmixin"]], "adaptive_currents_linear": [[62, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[63, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[64, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[65, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[66, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[67, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[68, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[69, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[70, "enc-poisson-interval"]], "enc_poisson_interval_online": [[71, "enc-poisson-interval-online"]], "trace_cumulative": [[72, "trace-cumulative"]], "trace_cumulative_scaled": [[73, "trace-cumulative-scaled"]], "trace_nearest": [[74, "trace-nearest"]], "trace_nearest_scaled": [[75, "trace-nearest-scaled"]], "voltage_integration_linear": [[76, "voltage-integration-linear"]], "voltage_integration_quadratic": [[77, "voltage-integration-quadratic"]], "voltage_thresholding": [[78, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[79, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[80, "batchmixin"]], "ShapeMixin": [[81, "shapemixin"]], "AdaptationMixin": [[82, "adaptationmixin"]], "CurrentMixin": [[83, "currentmixin"], [88, "currentmixin"]], "RefractoryMixin": [[84, "refractorymixin"]], "SpikeRefractoryMixin": [[85, "spikerefractorymixin"]], "VoltageMixin": [[86, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[87, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[89, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[90, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[91, "spikederivedcurrentmixin"]], "SpikeMixin": [[92, "spikemixin"]], "normal": [[93, "normal"]], "normalize": [[94, "normalize"]], "CumulativeTraceReducer": [[95, "cumulativetracereducer"]], "EMAReducer": [[96, "emareducer"]], "EventReducer": [[97, "eventreducer"]], "FoldReducer": [[98, "foldreducer"]], "FoldingReducer": [[99, "foldingreducer"]], "InputMonitor": [[100, "inputmonitor"]], "Monitor": [[101, "monitor"]], "NearestTraceReducer": [[102, "nearesttracereducer"]], "OutputMonitor": [[103, "outputmonitor"]], "PassthroughReducer": [[104, "passthroughreducer"]], "PostMonitor": [[105, "postmonitor"]], "PreMonitor": [[106, "premonitor"]], "Reducer": [[107, "reducer"]], "ScaledCumulativeTraceReducer": [[108, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[109, "scalednearesttracereducer"]], "StateMonitor": [[110, "statemonitor"]], "ones": [[111, "ones"]], "rescale": [[112, "rescale"]], "scalar": [[113, "scalar"]], "simple_exponential_smoothing": [[114, "simple-exponential-smoothing"]], "sqrt": [[115, "sqrt"]], "tensorize": [[116, "tensorize"]], "ManyToMany": [[117, "manytomany"]], "ManyToManyMethod": [[118, "manytomanymethod"]], "ManyToOne": [[119, "manytoone"]], "ManyToOneMethod": [[120, "manytoonemethod"]], "OneToMany": [[121, "onetomany"]], "OneToManyMethod": [[122, "onetomanymethod"]], "OneToOne": [[123, "onetoone"]], "OneToOneMethod": [[124, "onetoonemethod"]], "uniform": [[125, "uniform"]], "zeros": [[126, "zeros"]], "API Reference": [[127, "api-reference"]], "inferno": [[128, "inferno"]], "Infrastructure": [[128, "infrastructure"]], "General Math": [[128, "general-math"]], "Tensors": [[128, "tensors"]], "inferno.learn": [[129, "module-inferno.learn"]], "Components": [[129, "components"], [131, "components"], [133, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[129, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[129, "parameter-update-bounding"]], "Classifiers": [[129, "classifiers"]], "inferno.learn.functional": [[130, "module-inferno.learn.functional"]], "Parameter Dependence": [[130, "parameter-dependence"]], "inferno.neural": [[131, "module-inferno.neural"]], "Neurons": [[131, "neurons"], [135, "neurons"]], "Synapses": [[131, "synapses"], [135, "synapses"]], "Connections": [[131, "connections"]], "Encoders": [[131, "encoders"]], "Hooks": [[131, "hooks"]], "Types": [[131, "types"]], "Mixins": [[131, "mixins"]], "inferno.neural.functional": [[132, "module-inferno.neural.functional"]], "Encodings": [[132, "encodings"]], "Neuronal Dynamics": [[132, "neuronal-dynamics"]], "Spike Trace": [[132, "spike-trace"]], "inferno.observe": [[133, "inferno-observe"]], "Monitors": [[133, "monitors"]], "Reducers": [[133, "reducers"]], "inferno.typing": [[134, "inferno-typing"]], "Callable Types": [[134, "callable-types"]], "Model and Method Zoo": [[135, "model-and-method-zoo"]], "Overview": [[135, "overview"], [136, "overview"], [137, "overview"], [138, "overview"]], "Learning Methods": [[135, "learning-methods"]], "ReSuMe-Like Learning Methods": [[136, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[137, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[137, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[137, "formulation"], [137, "id1"], [137, "id2"], [137, "id3"], [137, "id5"], [138, "formulation"], [138, "id1"], [138, "id3"], [138, "id5"], [139, "formulation"], [139, "id1"], [139, "id4"], [140, "formulation"], [140, "id1"], [140, "id4"], [140, "id7"], [141, "formulation"], [142, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[137, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[137, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[137, "description"], [137, "id4"], [139, "description"], [139, "id2"], [139, "id5"], [140, "description"], [140, "id2"], [140, "id5"], [140, "id8"], [142, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[137, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[137, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[137, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[137, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[138, "neuronal-adaptation"]], "Adaptive Current, Linear": [[138, "adaptive-current-linear"]], "References": [[138, "references"], [138, "id2"], [138, "id4"], [138, "id6"], [139, "references"], [139, "id3"], [139, "id6"], [140, "references"], [140, "id3"], [140, "id6"], [140, "id9"], [142, "references"]], "Adaptive Current, Linear Spike-Dependent": [[138, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[138, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[138, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[139, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[139, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[139, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[139, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[139, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[139, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[139, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[139, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[139, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[140, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[140, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[140, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[140, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[140, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[141, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[141, "delta-coba-variant"]], "Synapse Models, Current-Based": [[142, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[142, "delta-cuba-variant"]]}, "indexentries": {"inferno.dists": [[5, "module-inferno.dists"]], "module": [[5, "module-inferno.dists"], [129, "module-inferno.learn"], [130, "module-inferno.learn.functional"], [131, "module-inferno.neural"], [132, "module-inferno.neural.functional"]], "configuration (class in inferno)": [[6, "inferno.Configuration"]], "_asadict_() (configuration method)": [[6, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[7, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[8, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[8, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[8, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[8, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[8, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[8, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[8, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[8, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[8, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[8, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[8, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[8, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[8, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[9, "inferno.Hook"]], "deregister() (hook method)": [[9, "inferno.Hook.deregister"]], "on_eval (hook property)": [[9, "inferno.Hook.on_eval"]], "on_train (hook property)": [[9, "inferno.Hook.on_train"]], "posthook() (hook method)": [[9, "inferno.Hook.posthook"]], "prehook() (hook method)": [[9, "inferno.Hook.prehook"]], "register() (hook method)": [[9, "inferno.Hook.register"]], "registered (hook property)": [[9, "inferno.Hook.registered"]], "interpolation (class in inferno)": [[10, "inferno.Interpolation"]], "module (class in inferno)": [[11, "inferno.Module"]], "get_extra() (module method)": [[11, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[11, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[11, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[11, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[12, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[12, "inferno.RemoteHook.add_inner"]], "innerhook() (remotehook method)": [[12, "inferno.RemoteHook.innerhook"]], "on_eval_inner (remotehook property)": [[12, "inferno.RemoteHook.on_eval_inner"]], "on_train_inner (remotehook property)": [[12, "inferno.RemoteHook.on_train_inner"]], "remove_inner() (remotehook method)": [[12, "inferno.RemoteHook.remove_inner"]], "statehook (class in inferno)": [[13, "inferno.StateHook"]], "module (statehook property)": [[13, "inferno.StateHook.module"]], "register() (statehook method)": [[13, "inferno.StateHook.register"]], "lognormal (class in inferno.dists)": [[14, "inferno.dists.LogNormal"]], "mean() (lognormal class method)": [[14, "inferno.dists.LogNormal.mean"]], "sample() (lognormal class method)": [[14, "inferno.dists.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[14, "inferno.dists.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[14, "inferno.dists.LogNormal.validate"]], "variance() (lognormal class method)": [[14, "inferno.dists.LogNormal.variance"]], "normal (class in inferno.dists)": [[15, "inferno.dists.Normal"]], "cdf() (normal class method)": [[15, "inferno.dists.Normal.cdf"]], "logcdf() (normal class method)": [[15, "inferno.dists.Normal.logcdf"]], "logpdf() (normal class method)": [[15, "inferno.dists.Normal.logpdf"]], "mean() (normal class method)": [[15, "inferno.dists.Normal.mean"]], "pdf() (normal class method)": [[15, "inferno.dists.Normal.pdf"]], "sample() (normal class method)": [[15, "inferno.dists.Normal.sample"]], "validate() (normal class method)": [[15, "inferno.dists.Normal.validate"]], "variance() (normal class method)": [[15, "inferno.dists.Normal.variance"]], "poisson (class in inferno.dists)": [[16, "inferno.dists.Poisson"]], "cdf() (poisson class method)": [[16, "inferno.dists.Poisson.cdf"]], "logcdf() (poisson class method)": [[16, "inferno.dists.Poisson.logcdf"]], "logpmf() (poisson class method)": [[16, "inferno.dists.Poisson.logpmf"]], "mean() (poisson class method)": [[16, "inferno.dists.Poisson.mean"]], "pmf() (poisson class method)": [[16, "inferno.dists.Poisson.pmf"]], "sample() (poisson class method)": [[16, "inferno.dists.Poisson.sample"]], "validate() (poisson class method)": [[16, "inferno.dists.Poisson.validate"]], "variance() (poisson class method)": [[16, "inferno.dists.Poisson.variance"]], "empty() (in module inferno)": [[17, "inferno.empty"]], "exp() (in module inferno)": [[18, "inferno.exp"]], "full() (in module inferno)": [[19, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[20, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[21, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[22, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[23, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[24, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[25, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[25, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[25, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[26, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[26, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[26, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[26, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[27, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[27, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[27, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[27, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[27, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[28, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[28, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[28, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[28, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[28, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[28, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[29, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[29, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[29, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[29, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[29, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[30, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[30, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[30, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[30, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[30, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[30, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[30, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[31, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[32, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[33, "inferno.learn.functional.hard_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[34, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[35, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[36, "inferno.neural.ALIF"]], "adaptation (alif property)": [[36, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[36, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[36, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[36, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[36, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[36, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[36, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[36, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[37, "inferno.neural.AdEx"]], "clear() (adex method)": [[37, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[37, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[37, "inferno.neural.AdEx.forward"]], "clamping (class in inferno.neural)": [[38, "inferno.neural.Clamping"]], "connection (class in inferno.neural)": [[39, "inferno.neural.Connection"]], "bias (connection property)": [[39, "inferno.neural.Connection.bias"]], "biased (connection property)": [[39, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[39, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[39, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[39, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[39, "inferno.neural.Connection.clear"]], "delay (connection property)": [[39, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[39, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[39, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[39, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[39, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[39, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[39, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[39, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[39, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[39, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[39, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[39, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[39, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[39, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[39, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[39, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[39, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[40, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[40, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[40, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[40, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[40, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[40, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[40, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[40, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[40, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[40, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[40, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[40, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[40, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[40, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[40, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[40, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[40, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[40, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[40, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[40, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[40, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[40, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[40, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[41, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[41, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[41, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[41, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[42, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[42, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[42, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[42, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[43, "inferno.neural.EIF"]], "clear() (eif method)": [[43, "inferno.neural.EIF.clear"]], "dt (eif property)": [[43, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[43, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[44, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[44, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[44, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[44, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[44, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[44, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[44, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[44, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[45, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[45, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[45, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[45, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[45, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[45, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[45, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[45, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[45, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[46, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[46, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[46, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[46, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[46, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[47, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[47, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[47, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[47, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[48, "inferno.neural.LIF"]], "bsize (lif property)": [[48, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[48, "inferno.neural.LIF.clear"]], "dt (lif property)": [[48, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[48, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[48, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[48, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[48, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[49, "inferno.neural.Layer"]], "clear() (layer method)": [[49, "inferno.neural.Layer.clear"]], "connection (layer property)": [[49, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[49, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[49, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[49, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[50, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[50, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[50, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[50, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[50, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[50, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[50, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[50, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[50, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[50, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[50, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[50, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[50, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[50, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[50, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[50, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[50, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[50, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[50, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[50, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[50, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[50, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[50, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[51, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[51, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[51, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[51, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[51, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[51, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[51, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[51, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[51, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[51, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[51, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[51, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[51, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[51, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[51, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[51, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[51, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[51, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[51, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[51, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[51, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[51, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[51, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[52, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[52, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[52, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[52, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[52, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[52, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[52, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[52, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[52, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[52, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[52, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[52, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[52, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[52, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[52, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[52, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[52, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[52, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[52, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[52, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[52, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[52, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[52, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[53, "inferno.neural.Neuron"]], "bsize (neuron property)": [[53, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[53, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[53, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[53, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[53, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[53, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[53, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[53, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[54, "inferno.neural.Normalization"]], "poissonintervalencoder (class in inferno.neural)": [[55, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[55, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[55, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[56, "inferno.neural.QIF"]], "clear() (qif method)": [[56, "inferno.neural.QIF.clear"]], "dt (qif property)": [[56, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[56, "inferno.neural.QIF.forward"]], "synapse (class in inferno.neural)": [[57, "inferno.neural.Synapse"]], "clear() (synapse method)": [[57, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[57, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[57, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[57, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[57, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[57, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[57, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[57, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[57, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[58, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[59, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[59, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[60, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[60, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[61, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[61, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[62, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[78, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[79, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[80, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[80, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[81, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[81, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[81, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[81, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[81, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[82, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[82, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[83, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[83, "inferno.neural.neurons.mixins.CurrentMixin.current"], [88, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[84, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[84, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[85, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[85, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[86, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[86, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[87, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[87, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[88, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[89, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[89, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[89, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[90, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[91, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[91, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[92, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[92, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[93, "inferno.normal"]], "normalize() (in module inferno)": [[94, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[95, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[95, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[95, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[95, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[95, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[96, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[96, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[96, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[96, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[97, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[97, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[97, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[97, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[98, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[98, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[98, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[98, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[98, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[98, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[98, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[98, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[98, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[98, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[99, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[99, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[99, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[99, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[100, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[101, "inferno.observe.Monitor"]], "clear() (monitor method)": [[101, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[101, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[101, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[101, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[101, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[102, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[102, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[102, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[102, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[102, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[103, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[104, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[104, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[104, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[104, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[105, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[106, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[107, "inferno.observe.Reducer"]], "clear() (reducer method)": [[107, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[107, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[107, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[107, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[107, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[107, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[108, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[108, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[108, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[108, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[108, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[109, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[109, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[109, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[109, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[109, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[110, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[111, "inferno.ones"]], "rescale() (in module inferno)": [[112, "inferno.rescale"]], "scalar() (in module inferno)": [[113, "inferno.scalar"]], "simple_exponential_smoothing() (in module inferno)": [[114, "inferno.simple_exponential_smoothing"]], "sqrt() (in module inferno)": [[115, "inferno.sqrt"]], "tensorize() (in module inferno)": [[116, "inferno.tensorize"]], "manytomany (class in inferno.typing)": [[117, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[118, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[119, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[120, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[121, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[122, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[123, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[124, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[125, "inferno.uniform"]], "zeros() (in module inferno)": [[126, "inferno.zeros"]], "inferno.learn": [[129, "module-inferno.learn"]], "inferno.learn.functional": [[130, "module-inferno.learn.functional"]], "inferno.neural": [[131, "module-inferno.neural"]], "inferno.neural.functional": [[132, "module-inferno.neural.functional"]]}})