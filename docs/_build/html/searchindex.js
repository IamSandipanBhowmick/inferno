Search.setIndex({"docnames": ["guide/considerations", "guide/extending", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.mult_lower_bounding", "reference/generated/inferno.learn.functional.mult_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.RemoteClamping", "reference/generated/inferno.neural.RemoteNormalization", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.tensorize", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/extending.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.mult_lower_bounding.rst", "reference/generated/inferno.learn.functional.mult_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.RemoteClamping.rst", "reference/generated/inferno.neural.RemoteNormalization.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.tensorize.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Extending Inferno", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "mult_lower_bounding", "mult_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "RemoteClamping", "RemoteNormalization", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "simple_exponential_smoothing", "sqrt", "LogNormal", "Normal", "Poisson", "tensorize", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 3, 48, 99, 140, 144, 145], "provid": [0, 6, 9, 10, 11, 12, 28, 113], "two": [0, 4, 7, 8, 10, 38, 39, 143, 145], "main": 0, "wai": [0, 3, 11], "interact": [0, 12, 13], "through": [0, 4, 38, 39, 49, 50, 51, 81, 82, 147], "its": [0, 3, 6, 7, 8, 11, 12, 23, 38, 45, 68, 69, 145, 147], "interfac": 0, "The": [0, 1, 3, 4, 7, 8, 12, 13, 23, 24, 39, 41, 48, 54, 56, 57, 66, 67, 68, 69, 71, 72, 74, 76, 88, 92, 98, 99, 101, 104, 109, 110, 111, 117, 119, 142, 143, 145], "latter": [0, 48, 143, 145], "can": [0, 3, 4, 6, 7, 9, 11, 12, 22, 25, 26, 27, 35, 36, 44, 46, 83, 101, 102, 104, 106, 107, 111, 144, 145], "distinguish": 0, "have": [0, 4, 8, 23, 26, 27, 39, 48, 49, 50, 74, 76, 98, 99, 109, 110], "modul": [0, 7, 8, 9, 12, 13, 23, 24, 37, 38, 45, 48, 52, 53, 54, 56, 57, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 102, 104, 106, 107, 111, 122, 124, 126, 128, 140], "name": [0, 6, 7, 8, 11, 23, 25, 37, 48, 53, 56, 57, 86, 88, 90, 92, 117, 118, 119], "which": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 25, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 109, 110, 111, 113, 116, 119, 129, 142, 143, 144, 145, 147], "end": [0, 3, 17, 20, 22, 25, 29, 30, 35, 36, 39, 40, 41, 43, 44, 46, 47, 73, 74, 75, 76, 86, 96, 97, 103, 109, 110, 115, 142, 143, 144, 145, 147], "In": [0, 3, 8, 11, 45, 54, 99, 144, 147], "gener": [0, 3, 4, 7, 12, 23, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 63, 64, 65, 68, 69, 70, 71, 72, 79, 80, 86, 94, 117, 118, 119, 129, 140, 143, 145], "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 90, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 117, 118, 119, 120, 142, 143, 144, 145, 147], "great": 0, "get": [0, 23, 45, 68, 69], "off": [0, 86], "ground": [0, 24], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 11], "tensor": [0, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 129, 130], "shape": [0, 7, 14, 16, 35, 36, 40, 41, 42, 43, 44, 46, 47, 52, 55, 58, 59, 82, 83, 94, 112, 114, 129, 130], "compat": [0, 7, 11], "automat": [0, 11, 24, 63, 64, 65], "reduct": 0, "batch": [0, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 81, 82, 83, 90, 99], "axi": 0, "done": [0, 63, 64, 65], "you": [0, 11], "meanwhil": [0, 4], "more": [0, 4, 25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 63, 64, 65, 106, 107, 140, 143], "control": [0, 6, 12, 44, 46, 55, 78, 80, 142, 145], "over": [0, 3, 8, 24, 25, 35, 36, 39, 44, 49, 50, 51, 83, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 142, 143, 144, 145, 147], "flow": 0, "logic": [0, 8, 74, 76, 79, 80, 99], "allow": [0, 45, 68, 69, 73, 75, 96, 99, 103, 143], "greater": [0, 27, 70], "custom": [0, 25, 35, 36, 44, 46, 83], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140], "class": [0, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128], "extend": [0, 11, 94, 129], "implement": [0, 3, 8, 11, 12, 13, 23, 27, 35, 36, 38, 42, 46, 52, 55, 58, 63, 65, 78, 79, 80, 99, 100, 140, 142, 143, 144], "subclass": [0, 6, 9, 12, 13, 23, 27, 38, 39, 49, 50, 51, 52, 58, 100], "us": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25, 26, 28, 35, 36, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 55, 57, 59, 63, 65, 68, 74, 76, 77, 78, 90, 99, 102, 117, 118, 119, 120, 144, 145], "from": [0, 3, 7, 8, 9, 11, 12, 14, 16, 18, 23, 24, 25, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 68, 69, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 109, 110, 112, 114, 117, 118, 119, 129, 130, 145, 147], "balanc": 0, "dedic": 0, "thi": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 22, 23, 25, 26, 27, 35, 36, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 102, 104, 106, 107, 111, 119, 129, 142, 143, 144, 145, 147], "certain": 0, "case": [0, 3, 12, 20, 22, 25, 29, 30, 35, 40, 41, 43, 44, 47, 53, 57, 73, 74, 75, 76, 86, 95, 96, 103, 109, 110, 142, 147], "mai": [0, 3, 7, 10, 11, 25, 39, 48], "faster": [0, 45, 54], "less": [0, 27, 68, 69], "type": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "check": [0, 7, 74, 76], "need": [0, 1, 11, 45, 48, 68, 69], "paramet": [0, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 120, 129, 130, 142, 143, 145], "remain": [0, 35, 43, 44, 47, 52, 63, 64, 65, 79, 80, 85, 86, 97, 143], "same": [0, 3, 6, 8, 11, 12, 35, 39, 44, 48, 83, 96, 97, 98, 99, 103, 105, 109, 110, 121, 122, 123, 124, 125, 126, 127, 128, 145], "multipl": [0, 3, 4, 12, 31, 32, 39, 44, 48, 80, 99, 109, 110, 142], "call": [0, 8, 9, 11, 12, 13, 23, 37, 38, 39, 49, 50, 51, 53, 56, 57, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 101, 102, 104, 106, 107, 111, 119, 144, 145], "pre": [0, 25, 38, 39, 49, 50, 51, 142], "comput": [0, 3, 7, 24, 38, 39, 45, 49, 50, 51, 54, 113, 117, 118, 119], "initi": [0, 23, 39, 49, 50, 51, 52, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 103, 105, 108, 109, 110], "unlik": [0, 12, 13], "artifici": 0, "neuron": [0, 24, 35, 36, 38, 42, 43, 44, 46, 47, 48, 55, 63, 64, 65, 77, 78, 79, 80, 83, 84, 85, 86, 87, 142, 147], "typic": [0, 11, 143, 145], "found": [0, 11], "ann": 0, "snn": 0, "ar": [0, 1, 3, 6, 7, 8, 12, 23, 24, 25, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 79, 80, 86, 88, 90, 92, 99, 100, 101, 113, 117, 118, 119, 120, 140, 142, 143, 144, 145], "fundament": 0, "state": [0, 1, 8, 11, 12, 13, 17, 18, 19, 20, 21, 23, 24, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 58, 73, 74, 75, 76, 79, 80, 96, 97, 98, 99, 100, 102, 103, 105, 108, 109, 110, 111, 115], "biolog": [0, 3, 4, 144], "electr": [0, 143, 144, 145, 147], "potenti": [0, 3, 4, 25, 30, 32, 34, 35, 36, 42, 43, 44, 46, 47, 52, 55, 63, 64, 65, 77, 78, 79, 80, 86, 142, 143, 144, 145, 147], "differ": [0, 8, 12, 24, 25, 35, 36, 40, 41, 42, 44, 46, 47, 55, 63, 65, 73, 75, 77, 78, 80, 90, 96, 99, 103, 143, 144, 145], "between": [0, 8, 10, 18, 19, 20, 21, 38, 40, 41, 45, 48, 54, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 103, 105, 109, 110, 142, 145], "interior": 0, "exterior": 0, "cell": [0, 35, 36, 42, 44, 46, 47, 55, 77, 78, 143, 144, 145], "drive": 0, "forc": [0, 12, 13], "behind": [0, 3], "action": [0, 3, 4, 35, 36, 42, 43, 44, 46, 47, 52, 55, 63, 64, 65, 79, 80, 86, 143, 144, 145, 147], "simplifi": [0, 147], "model": [0, 3, 4, 22, 26, 27, 29, 30, 31, 32, 33, 34, 48, 143], "when": [0, 1, 3, 6, 8, 9, 11, 12, 13, 24, 25, 35, 36, 37, 38, 39, 44, 46, 48, 49, 50, 51, 53, 56, 57, 63, 64, 65, 79, 80, 83, 90, 96, 99, 101, 102, 103, 104, 106, 107, 111, 120, 142, 143, 144], "": [0, 3, 7, 9, 11, 12, 13, 17, 18, 19, 20, 21, 23, 36, 37, 42, 45, 46, 53, 54, 55, 56, 57, 63, 65, 68, 69, 70, 71, 72, 74, 76, 78, 95, 97, 99, 102, 108, 109, 110, 111, 113, 115, 143, 144, 145], "import": [0, 3, 11], "treat": [0, 3, 25, 40, 41, 90], "variabl": [0, 3, 11], "separ": [0, 39, 45, 54], "each": [0, 3, 7, 8, 9, 24, 40, 41, 45, 54, 99, 143, 144, 145, 147], "sampl": [0, 8, 10, 18, 19, 20, 21, 24, 45, 54, 68, 69, 71, 72, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 117, 118, 119, 129], "present": [0, 7, 8, 24, 25, 26, 27, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 99, 143], "dure": [0, 4, 35, 43, 44, 47, 52, 86], "fix": [0, 4, 35, 36, 42, 43, 44, 46, 47, 55, 119, 145], "hyperparamet": [0, 3, 140], "do": [0, 81, 82], "duplic": 0, "instead": [0, 3, 144], "broadcast": [0, 38, 41, 63, 64, 65, 66, 67], "some": [0, 3, 8, 10, 48, 74, 76, 97], "includ": [0, 1, 8, 10, 11, 25, 28, 35, 36, 38, 39, 44, 46, 48, 49, 50, 51, 54, 71, 72, 82, 83, 99, 106, 107, 140], "adapt": [0, 4, 35, 36, 44, 46, 63, 64, 65, 66, 67, 73, 74, 75, 76, 83, 140], "behavior": [0, 1, 6, 24, 25, 35, 36, 44, 45, 46, 48, 68, 69, 83, 140, 143, 144], "input": [0, 3, 7, 9, 14, 15, 16, 23, 24, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 63, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 112, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 142, 143, 144, 145, 147], "A": [0, 3, 25, 35, 36, 44, 46, 83, 119], "common": [0, 3, 40, 41, 52, 58, 59], "exampl": [0, 66, 67, 145], "an": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 80, 82, 83, 86, 90, 96, 98, 100, 103, 111, 119, 121, 122, 123, 124, 125, 126, 143, 144, 145, 147], "threshold": [0, 35, 36, 44, 46, 64, 65, 67, 79, 80, 140, 144, 145], "where": [0, 3, 7, 8, 12, 22, 24, 25, 26, 27, 30, 35, 38, 39, 43, 44, 45, 47, 48, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 86, 90, 97, 99, 142, 143, 144, 145, 147], "defin": [0, 3, 6, 26, 27, 56, 57, 144], "minimum": [0, 7, 26, 27, 45, 68, 69, 113], "membran": [0, 4, 35, 36, 42, 43, 44, 46, 47, 52, 55, 63, 64, 65, 77, 78, 79, 80, 83, 84, 87, 143, 144, 145], "spike": [0, 3, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 79, 80, 86, 88, 90, 91, 92, 93, 140, 144, 145, 147], "These": [0, 24, 41, 143, 144], "should": [0, 1, 7, 8, 9, 11, 12, 13, 23, 24, 25, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 63, 64, 65, 68, 69, 83, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111], "share": [0, 7, 12], "across": [0, 1, 35, 36, 42, 44, 46, 47, 49, 50, 51, 55, 77, 78, 143, 144, 145], "all": [0, 1, 3, 12, 23, 48, 49, 51, 53, 57, 68, 69, 70, 71, 72, 73, 74, 95, 96, 99, 102, 108, 109, 113, 120, 144], "contribut": [0, 3, 109, 110], "portion": 0, "updat": [0, 3, 8, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 46, 63, 64, 65, 73, 74, 75, 76, 79, 80, 83, 142], "also": [0, 4, 7, 8, 25, 35, 36, 38, 39, 44, 46, 49, 50, 51, 70, 74, 76, 83, 144, 145], "appli": [0, 4, 7, 12, 13, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 49, 50, 51, 53, 63, 64, 65, 66, 67, 99, 106, 107, 142, 143, 144, 145, 147], "weight": [0, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 38, 39, 49, 50, 51, 56, 57, 60, 61, 62, 140], "bias": [0, 38, 39, 49, 50, 51, 60, 61], "handl": [0, 11], "either": [0, 3, 8, 24, 60, 65, 90, 143], "reduc": [0, 3, 24, 25, 35, 36, 44, 63, 64, 65, 83, 99, 100, 101, 102, 104, 106, 107, 111], "output": [0, 9, 13, 14, 16, 17, 24, 38, 39, 45, 48, 49, 50, 51, 54, 68, 69, 70, 71, 72, 74, 76, 79, 80, 94, 98, 102, 104, 106, 107, 109, 110, 112, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 142, 145], "along": [0, 39, 53, 57, 63, 64, 65, 82, 95, 99, 113], "dimens": [0, 7, 8, 24, 25, 35, 36, 38, 39, 44, 45, 46, 49, 50, 51, 53, 54, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 95, 99, 113], "former": [0, 48, 143], "effici": 0, "make": [0, 7], "assumpt": 0, "about": [0, 3], "how": [0, 3, 4, 6, 140], "perform": [0, 3, 9, 17, 24, 37, 39, 53, 56, 57, 73, 74, 75, 76, 99, 100, 115, 119], "But": 0, "might": 0, "necessari": 0, "hand": [0, 99], "detail": [0, 25, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 55, 63, 64, 65, 140], "inform": [0, 9, 52, 106, 107, 143], "process": [0, 23, 25, 45, 68, 69], "arxiv": [0, 143], "1909": 0, "02549": 0, "becaus": [0, 8], "unit": [0, 1, 8, 96, 97, 98, 99, 103, 105, 109, 110, 147], "relev": [0, 12, 13], "match": [0, 3, 7, 49, 50, 51, 73, 74, 75, 76, 96, 98, 103, 109, 110], "theoret": 0, "continu": [0, 117], "descript": [0, 140], "specifi": [0, 7, 8, 9, 14, 16, 23, 24, 26, 53, 56, 57, 58, 94, 95, 101, 104, 111, 112, 114, 129, 130, 142], "length": [0, 3, 8, 10, 18, 19, 20, 21, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 86, 96, 97, 98, 99, 100, 103, 105, 109, 110, 142, 143, 144, 145, 147], "given": [0, 11, 12, 22, 23, 24, 25, 26, 54, 56, 57, 58, 71, 72, 79, 80, 99, 100, 102, 108, 117, 118, 119, 140, 143, 144, 147], "millisecond": [0, 25, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 58, 85, 96, 99, 103, 109, 110], "On": 0, "step": [0, 4, 8, 17, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 96, 97, 98, 99, 100, 103, 105, 109, 110, 115, 142, 143, 144, 145, 147], "amount": [0, 10, 24, 35, 36, 39, 44, 46, 63, 64, 119, 142], "ha": [0, 6, 8, 11, 22, 23, 26, 27, 35, 38, 39, 44, 49, 50, 51, 83, 86, 88, 90, 92, 99, 111, 145, 147], "elaps": 0, "subtract": 0, "inclus": [0, 37, 56], "bound": [0, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 56, 65, 90, 140], "zero": [0, 39, 49, 50, 51, 53, 57, 95, 96, 97, 99, 103, 105, 109, 110, 119], "equal": [0, 3, 68, 69], "consid": [0, 3, 17, 73, 74, 75, 76, 96, 98, 99, 103, 109, 110, 115, 119, 144], "out": [0, 39, 40, 41, 90, 142], "therefor": [0, 7, 8, 99], "evenli": 0, "divis": 0, "simualt": [0, 35, 36, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 55], "practic": [0, 3], "round": 0, "up": 0, "next": [0, 8, 19, 35, 100], "integ": [0, 4, 7, 8], "design": 1, "take": [1, 8, 48, 70, 88, 92, 101, 104, 116, 121, 122, 123, 124, 125, 126, 127, 128, 142], "layer": [1, 23, 25, 56, 57], "object": [1, 6, 9, 10, 11, 13, 23, 48, 59, 62, 81, 83, 84, 85, 87, 89, 90, 93], "sequenc": 1, "thereof": 1, "basic": [1, 144], "trainabl": [1, 23, 25], "util": 1, "monitor": [1, 23, 25, 101, 104, 106, 107, 111, 143], "observ": [1, 8, 10, 18, 19, 20, 21, 25, 40, 41, 73, 74, 75, 76, 90, 96, 97, 98, 99, 100, 102, 103, 105, 108, 109, 110, 111, 117, 118], "maintain": [1, 63, 64, 65, 79, 80], "record": [1, 8, 99, 101, 102, 104, 108, 111], "virtuallay": 1, "produc": [1, 8], "compositelay": 1, "mean": [1, 4, 25, 35, 36, 44, 83, 101, 102, 104, 106, 107, 111, 117, 118, 119], "eagerli": 1, "clear": [1, 23, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 58, 99, 102, 108], "onli": [1, 3, 6, 7, 9, 11, 12, 13, 37, 39, 40, 53, 56, 57, 99, 101], "longer": [1, 7], "safe": 1, "ani": [1, 3, 4, 6, 8, 9, 11, 12, 13, 38, 39, 41, 49, 50, 51, 56, 57, 60, 61, 99, 100, 102, 104, 106, 107, 120, 144, 145, 147], "phenomenon": 3, "rate": [3, 24, 25, 27, 28, 44, 45, 54, 65, 68, 69, 71, 72, 119, 142, 143, 144, 145], "quantiti": 3, "decreas": [3, 143], "proport": [3, 24, 142, 143, 144], "current": [3, 4, 7, 8, 12, 17, 23, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 55, 58, 63, 66, 73, 74, 75, 76, 77, 78, 79, 80, 84, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 102, 103, 105, 108, 109, 110, 115, 140, 142, 144, 145], "valu": [3, 7, 8, 9, 11, 12, 15, 16, 17, 18, 24, 25, 26, 27, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 70, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 103, 105, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 129, 143, 144, 145, 147], "It": [3, 8, 48, 145], "describ": [3, 140], "differenti": 3, "equat": 3, "tau": [3, 18, 25, 73, 74, 75, 76, 96, 97, 103, 109, 110], "frac": [3, 18, 19, 24, 35, 36, 39, 42, 44, 46, 47, 55, 63, 64, 68, 69, 73, 74, 75, 76, 78, 97, 117, 118, 119, 142, 143, 144, 145], "dn": 3, "dt": [3, 8, 25, 35, 36, 38, 39, 42, 43, 44, 46, 47, 49, 50, 51, 52, 55, 58, 96, 99, 103, 109, 110, 142, 143, 144, 145], "n": [3, 45, 49, 50, 51, 66, 67, 68, 69, 117, 118, 119], "solut": [3, 142, 143, 144], "t": [3, 17, 18, 19, 20, 21, 24, 25, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 63, 64, 65, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 86, 96, 97, 103, 109, 110, 115, 121, 122, 123, 124, 125, 126, 127, 128, 142, 143, 144, 145, 147], "n_0": [3, 8, 24, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 90, 99], "e": [3, 6, 11, 15, 27, 28, 54, 70, 71, 72, 117, 118, 119, 145], "0": [3, 8, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 63, 64, 65, 81, 82, 86, 95, 96, 97, 98, 103, 105, 109, 110, 130, 142, 145, 147], "oft": 3, "neural": [3, 48], "network": [3, 48], "simul": [3, 4, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 58, 59, 63, 64, 65, 77, 78, 79, 80, 96, 99, 103, 109, 110, 143, 144, 145, 147], "involv": 3, "discret": [3, 8, 96, 99, 103, 109, 110, 119, 145, 147], "timestep": [3, 35], "those": [3, 6, 35, 38, 39, 49, 50, 51, 56, 57], "thei": [3, 6, 56, 57, 70], "often": [3, 142, 145], "appear": 3, "form": [3, 9, 11], "exp": [3, 18, 24, 25, 35, 36, 42, 44, 47, 64, 73, 74, 75, 76, 77, 96, 97, 103, 109, 110, 117, 118, 142, 143, 144, 145], "left": [3, 18, 24, 35, 36, 39, 42, 44, 46, 47, 51, 55, 63, 64, 65, 73, 74, 75, 76, 77, 78, 80, 97, 99, 117, 118, 142, 143, 144, 145], "right": [3, 18, 24, 35, 36, 39, 42, 44, 46, 47, 51, 55, 63, 64, 65, 73, 74, 75, 76, 77, 78, 80, 97, 99, 117, 118, 142, 143, 144, 145], "underli": [3, 8, 39, 97, 99, 101, 102, 104, 106, 107, 111, 144, 145], "wa": [3, 10, 22, 23, 26, 35, 36, 42, 44, 46, 47, 55, 63, 64, 65], "solv": 3, "analyt": 3, "approxim": [3, 36, 42, 46, 55, 63, 65, 70, 78, 143, 145], "via": [3, 6], "euler": [3, 36, 42, 46, 55, 63, 65, 78], "method": [3, 6, 8, 11, 23, 25, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 68, 69, 70, 78, 88, 90, 92, 99, 100, 120], "both": 3, "repres": [3, 6, 7, 38, 41, 52, 58, 82, 86, 145], "select": [3, 8, 20, 21, 58, 90, 99, 101, 104], "term": [3, 65, 142, 144], "long": [3, 142], "live": 3, "correspond": [3, 11, 26, 35, 36, 42, 43, 44, 46, 47, 48, 52, 55, 63, 64, 65, 79, 80, 86, 117, 118], "under": [3, 8, 142, 145], "relat": [3, 99, 140, 145], "ne": 3, "k": [3, 24, 63, 64, 65, 66, 67, 74, 76, 109, 110, 119, 122, 124, 126, 128], "That": [3, 142], "after": [3, 8, 9, 10, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 55, 57, 58, 60, 61, 62, 63, 64, 65, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 102, 104, 106, 107, 111, 113, 143, 144, 145], "repeat": 3, "applic": [3, 96, 97, 98, 103, 105, 109, 110], "1": [3, 8, 17, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 65, 66, 67, 68, 69, 70, 86, 95, 97, 112, 115, 117, 118, 119, 140, 142, 143, 145, 147], "start": [3, 145], "To": [3, 13, 14, 16, 45, 68, 69, 94, 112, 129, 130, 143, 144], "outsid": [3, 99], "notion": 3, "life": 3, "we": [3, 11], "ln": 3, "b": [3, 17, 24, 38, 39, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 90, 111], "want": 3, "think": 3, "let": 3, "tau_b": 3, "Then": 3, "nb": 3, "express": [3, 119], "sometim": 3, "lambda": [3, 24, 119, 144], "context": [3, 143], "frequent": 3, "aris": 3, "care": 3, "histori": [3, 8, 96, 97, 98, 99, 100, 103, 105, 109, 110], "activ": [3, 7], "formal": 3, "sum": [3, 24, 25, 35, 36, 44, 46, 83], "previou": [3, 8, 18, 19, 21, 24, 40, 41, 90, 100, 105], "occur": [3, 12, 13, 24, 25, 37, 40, 41, 48, 53, 56, 57, 90, 119, 143, 144, 145, 147], "howev": 3, "purpos": [3, 109, 110], "comparison": 3, "grow": 3, "complex": [3, 15, 16, 17, 53, 57, 73, 74, 75, 76, 95, 96, 103, 109, 110, 114, 115, 116], "quadrat": [3, 46, 55, 78, 140], "respect": [3, 12, 13, 25, 39, 49, 50, 51, 60, 102], "interest": 3, "plausibl": 3, "benefit": 3, "feasibl": 3, "rather": [3, 23, 24, 74, 76, 144], "than": [3, 12, 23, 24, 27, 68, 69, 70, 74, 76, 144, 145], "everi": [3, 7, 8, 45, 56, 57, 68, 69], "prior": [3, 8, 10, 12, 13, 18, 19, 20, 21, 35, 43, 44, 47, 52, 56, 57, 73, 74, 86, 90, 96, 97, 98, 99, 100, 103, 105, 109, 110], "leav": [3, 144], "sort": [3, 7], "simplest": 3, "dx": 3, "x": [3, 15, 22, 25, 29, 30, 46, 49, 50, 51, 73, 74, 75, 76, 96, 97, 103, 109, 110, 115, 116, 117, 118, 147], "sum_f": 3, "f": [3, 25, 35, 39, 43, 44, 45, 47, 54, 68, 69, 70, 73, 74, 75, 76, 86, 96, 103, 109, 110], "amplitud": [3, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 73, 74, 75, 76, 96, 103, 109, 110], "construct": [3, 14, 16, 40, 41, 56, 57, 58, 59, 94, 101, 102, 104, 106, 107, 111, 112, 129, 130], "evalu": [3, 9, 12, 13, 35, 36, 44, 46], "otherwis": [3, 11, 20, 35, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 54, 73, 74, 75, 76, 86, 96, 101, 103, 104, 109, 110], "interpret": 3, "follow": [3, 4, 8, 9, 54, 71, 72, 90, 97, 99, 117, 118, 142, 144], "whenev": 3, "add": [3, 11, 12, 23, 25, 56, 57, 73, 74, 76, 96, 109], "four": [3, 8, 25], "variant": [3, 40, 41, 140], "discuss": 3, "below": [3, 143, 145], "featur": 3, "beyond": 3, "just": 3, "being": [3, 11, 24, 28, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 54, 55, 68, 69, 70, 71, 72, 82, 101, 102, 104, 106, 107, 111, 142], "previous": [3, 12, 13, 37, 53, 99], "come": 3, "fact": 3, "factor": [3, 17, 97, 115, 145], "x_": [3, 17, 25, 73, 74, 75, 76, 96, 97, 103, 109, 110, 115, 142], "begin": [3, 17, 20, 22, 25, 29, 30, 35, 36, 39, 40, 41, 43, 44, 46, 47, 73, 74, 75, 76, 86, 96, 97, 103, 109, 110, 115, 142, 143, 144, 145, 147], "x_t": [3, 73, 74, 75, 76, 96, 103, 109, 110], "lvert": [3, 73, 75, 96, 103], "f_": [3, 25, 35, 43, 44, 47, 73, 74, 75, 76, 86, 96, 103, 109, 110, 142], "rvert": [3, 73, 75, 96, 103], "leq": [3, 73, 75, 96, 103, 117, 118, 119], "epsilon": [3, 53, 57, 73, 75, 95, 96, 103], "text": [3, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 96, 103, 109, 110, 117, 118, 119, 142, 143, 144, 145, 147], "here": [3, 13, 56, 57, 140], "target": [3, 8, 11, 12, 73, 75, 96, 101, 102, 103, 104, 106, 107, 111, 117, 118], "permiss": 3, "error": [3, 11], "For": [3, 10, 25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 46, 47, 55, 63, 64, 65, 66, 67, 96, 97, 103, 109, 110, 111], "set": [3, 7, 8, 12, 14, 16, 35, 36, 39, 44, 45, 46, 49, 50, 54, 63, 64, 65, 68, 69, 73, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 103, 105, 109, 110, 112, 129, 130, 142, 144, 145], "unspecifi": [3, 7, 120], "test": [3, 7, 74, 76, 96, 98, 103, 109, 110, 117, 118, 119], "wherea": 3, "chang": [3, 6, 11, 25, 38, 39, 49, 50, 51, 81, 82, 97, 142, 143, 147], "addit": [3, 23, 39, 44, 45, 49, 50, 51, 56, 57, 68, 69, 74, 76, 80, 143, 144], "replac": [3, 40, 41, 48, 90], "modifi": [3, 7, 9, 14, 16, 22, 26, 27, 94, 101, 102, 104, 106, 107, 111, 112, 114, 129, 130], "most": [3, 8, 10, 18, 19, 20, 21, 25, 38, 39, 45, 49, 50, 51, 68, 69, 96, 97, 98, 99, 100, 103, 105, 109, 110, 142, 143], "recent": [3, 8, 10, 18, 19, 20, 21, 25, 38, 39, 49, 50, 51, 96, 97, 98, 99, 100, 103, 105, 109, 110, 142], "event": [3, 12, 98, 119], "chosen": 3, "depend": [3, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 48, 49, 50, 51, 64, 65, 67, 81, 82, 104, 140, 144], "desir": [3, 53, 57, 95, 117, 118], "properti": [3, 7, 8, 9, 12, 13, 14, 16, 23, 24, 25, 26, 27, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 99, 102, 103, 109, 110, 112, 114, 117, 118, 119, 129, 130, 144], "formul": 3, "abov": [3, 36, 42, 56, 57, 143, 145], "exactli": 3, "toler": [3, 8, 73, 74, 75, 76, 90, 96, 99, 103], "meet": [3, 8], "criterion": [3, 98, 109, 110], "compon": [3, 74, 76, 143, 144], "ad": [3, 7, 8, 12, 23, 25, 39, 45, 53, 56, 57, 60, 61, 62, 68, 69, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 99], "sf": [3, 74, 76, 109, 110], "hold": 3, "align": [3, 17, 35, 36, 39, 44, 46, 97, 115, 142, 143, 144, 145], "neq": [3, 25, 147], "int_": 3, "infti": [3, 35, 44, 67, 143, 144, 145], "theta": [3, 22, 29, 30, 35, 44, 79, 80, 142, 143, 144, 145], "neg": [3, 7], "argument": [3, 7, 8, 9, 10, 12, 13, 23, 24, 28, 38, 39, 48, 49, 50, 51, 56, 57, 99, 102, 106, 107, 117, 118, 119], "posit": [3, 7, 8, 12, 48], "geq": [3, 22, 29, 30, 79, 80], "deriv": [3, 88, 90, 92, 117, 145], "d": [3, 8, 90, 99, 143, 144], "And": [3, 39, 142], "integr": [3, 35, 36, 42, 43, 44, 47, 52, 55, 58, 74, 76, 77, 78, 140, 147], "kind": 4, "absolut": [4, 35, 36, 42, 43, 44, 46, 47, 55, 63, 64, 65, 73, 75, 77, 78, 79, 80, 86, 96, 103], "arp": [4, 35, 43, 44, 47, 86], "rel": [4, 10, 18, 19, 20, 21, 96, 97, 98, 100, 103, 105, 109, 110, 117, 118], "rrp": 4, "cannot": [4, 7, 8, 11, 22, 26, 81, 82, 143], "presynapt": [4, 25, 35, 36, 40, 41, 42, 43, 44, 46, 47, 55, 66, 77, 78, 79, 80, 142, 143, 144, 147], "doe": [4, 7, 48, 88, 92, 119, 147], "affect": [4, 74, 76, 140], "depolar": [4, 145], "repolar": 4, "hyperpolar": 4, "while": [4, 35, 36, 42, 43, 44, 46, 47, 55, 79, 80], "difficult": 4, "fire": [4, 35, 36, 42, 43, 44, 47, 55, 67, 140, 143], "imposs": 4, "time": [4, 8, 10, 12, 13, 17, 18, 19, 20, 21, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 119, 140, 143, 144, 145, 147], "voltag": [4, 35, 36, 42, 43, 44, 46, 47, 52, 55, 63, 64, 65, 67, 77, 78, 79, 80, 87, 140, 144, 145], "reset": [4, 8, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 58, 65, 79, 80, 99, 143, 144, 145], "determin": [4, 14, 16, 39, 49, 50, 51, 71, 94, 96, 103, 112, 114, 120, 129, 130], "strongli": 4, "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "map": [6, 48, 99, 101, 104, 106, 107], "unpack": [6, 101], "function": [6, 8, 9, 10, 11, 12, 13, 15, 25, 28, 35, 36, 37, 40, 41, 44, 46, 53, 56, 57, 58, 63, 64, 65, 74, 76, 79, 80, 83, 90, 94, 98, 99, 102, 106, 107, 109, 110, 116, 117, 118, 119, 129, 142, 147], "conjunct": 6, "attr": [6, 37, 53, 56, 57, 111], "librari": [6, 8], "wrap": 6, "_asadict_": 6, "dict": [6, 7, 9, 11, 12, 48, 102, 117, 118, 119], "str": [6, 7, 8, 9, 11, 12, 23, 37, 48, 52, 53, 56, 57, 102, 111, 117, 118, 119], "field": [6, 144, 145], "converet": 6, "dictionari": [6, 7, 11, 48], "flatten": 6, "nest": [6, 111], "own": 6, "If": [6, 8, 9, 12, 23, 24, 26, 27, 35, 36, 38, 39, 42, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 60, 63, 64, 65, 68, 69, 83, 101, 104, 120], "conflict": [6, 48], "one": [6, 9, 12, 25, 35, 36, 44, 46, 50, 51, 83, 101, 123, 124, 125, 126, 127, 128, 142, 143], "preserv": [6, 35, 36, 44, 46, 99], "overridden": [6, 23], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "packag": 6, "attribut": [6, 7, 8, 24, 37, 53, 56, 57, 82, 83, 86, 90, 111, 145], "were": [6, 23, 24, 25, 56, 57], "regist": [6, 7, 8, 9, 11, 12, 13, 23, 37, 38, 39, 49, 50, 53, 56, 57, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 101, 102, 104, 106, 107, 111], "constraint": [7, 8, 81, 82, 99], "tupl": [7, 12, 14, 16, 17, 23, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 79, 80, 82, 83, 94, 95, 101, 106, 107, 112, 113, 117, 118, 120, 129, 130], "int": [7, 8, 14, 15, 16, 17, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 94, 95, 96, 103, 109, 110, 112, 113, 114, 115, 116, 129, 130], "support": [7, 39, 40, 41, 49, 50, 51, 58, 59], "dimension": [7, 39], "constrain": [7, 8, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "buffer": [7, 8, 11, 81, 90], "dim": [7, 52, 53, 57, 58, 59, 81, 82, 95, 113], "size": [7, 8, 14, 16, 24, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 81, 82, 90, 94, 112, 129, 130], "rais": [7, 8, 9, 11, 12, 13, 15, 22, 23, 26, 27, 38, 52, 58, 100, 143], "valueerror": [7, 8, 27], "must": [7, 8, 9, 11, 12, 13, 23, 26, 27, 38, 39, 41, 49, 50, 51, 52, 56, 57, 58, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 104, 109, 110], "number": [7, 8, 15, 24, 38, 39, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 82, 90, 94, 99, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129], "element": [7, 8, 24, 39, 49, 50, 51, 53, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 95, 96, 98, 103, 109, 110, 120], "runtimeerror": [7, 8, 9, 12, 22, 26], "2": [7, 39, 44, 117, 118, 119, 140, 145], "first": [7, 40, 41, 66, 67, 68, 70, 71, 144], "second": [7, 144], "assign": [7, 11, 24, 25, 26, 27, 35, 44, 51, 83], "invalid": [7, 11], "reconstrain": 7, "bool": [7, 8, 9, 12, 13, 14, 16, 23, 24, 25, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 68, 69, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 117, 118, 119, 129, 130], "torch": [7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 129, 130], "classmethod": [7, 40, 41, 58, 117, 118, 119], "compatible_": 7, "compatible_lik": 7, "like": [7, 11, 14, 16, 25, 35, 36, 38, 39, 44, 46, 49, 50, 51, 58, 83, 94, 112, 114, 129, 130, 140], "none": [7, 8, 9, 12, 13, 14, 16, 17, 22, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 129, 130], "option": [7, 8, 9, 12, 13, 14, 16, 23, 24, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 75, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 129, 130], "default": [7, 8, 9, 12, 13, 14, 16, 23, 24, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 129, 130], "insuffici": 7, "contain": [7, 11, 17, 48, 79, 80], "nonposit": 7, "compatibl": 7, "compatible_like_": 7, "against": 7, "result": [7, 8, 24, 38, 39, 96, 97, 98, 99, 103, 105, 106, 107, 109, 110, 117, 118, 119], "low": 7, "high": 7, "increas": [7, 35, 36, 42, 44, 46, 55, 63, 64, 78, 143, 145], "order": [7, 11, 53, 57, 95, 99, 142], "constraints_repr": 7, "string": [7, 11, 37, 53, 56, 57], "represent": 7, "underscor": 7, "deregister_constrain": [7, 8], "deregist": [7, 9, 23], "fulli": [7, 11, 37, 53, 56, 57], "qualifi": [7, 11, 37, 53, 56, 57], "mindim": 7, "requir": [7, 10, 12, 14, 16, 22, 23, 25, 26, 27, 39, 60, 61, 62, 74, 76, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 99, 112, 114, 129, 130], "static": 7, "mindims_": 7, "edit": 7, "exist": [7, 11, 23, 24, 35, 48, 99], "reshap": [7, 38, 39, 49, 50, 51], "accordingli": [7, 119], "remov": [7, 12, 56, 57], "new": [7, 8, 12, 24, 25, 26, 27, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 96, 99, 103, 109, 110], "had": 7, "extern": [7, 147], "incompat": [7, 8], "register_constrain": [7, 8], "attributeerror": [7, 8, 11], "step_tim": [8, 18, 19, 20, 21, 25, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 96, 97, 98, 99, 100, 103, 105, 108, 109, 110, 145], "float": [8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 95, 96, 97, 98, 99, 100, 103, 105, 109, 110, 113, 114, 115, 116, 117, 118, 119], "history_len": [8, 96, 97, 98, 99, 100, 103, 105, 108, 109, 110], "dimensionalmodul": [8, 52, 81, 82, 84, 85, 86, 87], "keep": [8, 25, 35, 36, 44, 46, 83], "track": 8, "store": [8, 11, 23, 24, 25, 51, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111], "nonneg": [8, 68, 69, 70, 71, 72], "unconstrain": 8, "impli": [8, 143], "freed": 8, "other": [8, 11, 12, 24, 37, 53, 56, 57, 101, 104, 106, 107, 111, 144], "self": [8, 99], "hlen": [8, 99], "offset": [8, 38, 39, 49, 50, 51], "latest_first": 8, "true": [8, 9, 12, 13, 23, 24, 35, 36, 37, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 68, 69, 101, 102, 104, 106, 107, 111, 119], "retriev": [8, 12, 23, 90, 99], "window": 8, "index": [8, 38, 39, 49, 50, 51, 99], "tick": 8, "back": [8, 144], "zeroth": 8, "fals": [8, 12, 13, 23, 24, 25, 37, 39, 40, 41, 45, 49, 50, 51, 53, 54, 56, 57, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 99, 101, 104, 106, 107, 111], "hsize": 8, "slice": [8, 45, 54, 69, 72], "latest": [8, 17, 73, 74, 75, 76, 103, 110, 115], "By": [8, 12], "correct": 8, "configur": [8, 12, 13], "normal": [8, 24, 37, 56, 57, 113, 117, 147], "circumst": 8, "pushto": 8, "insert": 8, "befor": [8, 9, 11, 23, 37, 39, 51, 53, 56, 57, 90, 99, 100, 101, 102, 104, 106, 107, 111, 113, 143, 145], "been": [8, 99], "sinc": [8, 12, 45, 68, 69, 98], "last": [8, 35, 38, 39, 43, 44, 47, 49, 50, 51, 52, 63, 64, 65, 86, 98, 99, 147], "data": [8, 10, 14, 16, 18, 19, 20, 21, 23, 25, 38, 39, 49, 50, 51, 83, 84, 87, 94, 95, 96, 97, 98, 99, 100, 103, 105, 109, 110, 112, 113, 114, 129, 130], "advanc": 8, "push": [8, 99, 108], "uniniti": [8, 14], "final": 8, "interpol": [8, 18, 19, 20, 21, 40, 41, 90, 96, 97, 98, 99, 100, 103, 105, 109, 110], "1e": [8, 53, 57, 95, 99], "07": [8, 99, 143], "maximum": [8, 24, 25, 26, 27, 39, 40, 41, 45, 49, 50, 51, 54, 58, 59, 70, 90, 99, 113], "onsid": 8, "7": [8, 99], "cdot": [8, 24, 39, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 90, 99, 142], "ldot": [8, 24, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 99], "enforc": [8, 48, 99], "gather": [8, 24, 99], "nearest": [8, 20, 25, 40, 41, 103, 110], "scalar": [8, 14, 16, 94, 112, 117, 118, 119, 120, 129, 130], "within": [8, 11], "without": [8, 23, 27, 28, 74, 76, 143, 144, 145], "ever": 8, "attempt": [8, 35, 44, 83], "regardless": [8, 13], "pass": [8, 9, 12, 13, 22, 23, 25, 26, 27, 35, 36, 38, 39, 44, 46, 48, 49, 50, 51, 83, 99, 101, 102, 106, 107, 147], "overwritten": 8, "exact": [8, 98], "manual": [8, 12, 13, 81, 82], "increment": 8, "specif": [8, 11, 117, 145], "prehook": [9, 13, 101, 102, 107, 111], "callabl": [9, 10, 25, 28, 35, 36, 44, 46, 83, 99, 102, 104, 106, 107, 120, 121, 122, 123, 124, 125, 126, 127, 128], "posthook": [9, 102, 104, 106, 111], "prehook_kwarg": [9, 102], "posthook_kwarg": [9, 102], "train_upd": [9, 13, 37, 53, 56, 57, 101, 102, 104, 106, 107, 111], "eval_upd": [9, 13, 37, 53, 56, 57, 101, 102, 104, 106, 107, 111], "forward": [9, 12, 13, 23, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 99, 101, 102, 104, 106, 107, 108, 111], "itself": [9, 13, 38, 39, 49, 50, 51], "nn": [9, 11, 12, 13, 37, 53, 56, 57], "register_forward_hook": [9, 102, 106], "manag": [9, 23, 79, 80, 81, 82, 90], "removablehandl": 9, "keyword": [9, 10, 12, 23, 28, 38, 39, 48, 49, 50, 51, 56, 57, 102, 106, 107], "register_forward_pre_hook": [9, 102, 107], "run": [9, 12, 13, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 55, 56, 57, 58], "train": [9, 12, 13, 23, 35, 36, 37, 44, 45, 46, 48, 53, 54, 56, 57, 68, 69, 70, 71, 72, 101, 102, 104, 106, 107, 111, 140], "mode": [9, 12, 13, 35, 36, 37, 40, 41, 44, 46, 52, 53, 56, 57, 101, 102, 104, 106, 107, 111], "eval": [9, 13, 23, 37, 53, 56, 57, 101, 102, 104, 106, 107, 111], "inherit": [9, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "overrid": [9, 14, 16, 24, 56, 57, 94, 112, 114, 129, 130], "__del__": 9, "signatur": [9, 22, 26, 27, 40, 41, 58], "arg": [9, 10, 11, 12, 28, 58, 59, 102, 108, 121, 122, 123, 124, 125, 126, 127, 128], "Or": 9, "with_kwarg": [9, 106, 107], "kwarg": [9, 10, 11, 12, 23, 25, 28, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 99, 102, 108, 121, 122, 123, 124, 125, 126, 127, 128], "see": [9, 94, 102, 106, 107, 129, 144, 145], "further": 9, "least": 9, "alreadi": [9, 25], "evalexec": 9, "pytorch": [9, 11, 25, 35, 36, 44, 46, 83, 119], "typeerror": [9, 11, 26], "instanc": [9, 11, 111], "warn": 9, "runtimewarn": 9, "ignor": [9, 13], "registr": [9, 23], "trainexec": 9, "protocol": [10, 28, 59, 121, 122, 123, 124, 125, 126, 127, 128], "prev_data": [10, 18, 19, 20, 21, 96, 97, 98, 100, 103, 105, 109, 110], "next_data": [10, 18, 19, 20, 21, 96, 97, 98, 100, 103, 105, 109, 110], "subsequ": [10, 18, 19, 20, 21, 41, 96, 97, 98, 100, 103, 105, 109, 110], "sample_at": [10, 18, 19, 20, 21, 96, 97, 98, 100, 103, 105, 109, 110], "step_data": [10, 18, 19, 20, 21, 96, 97, 98, 100, 103, 105, 109, 110], "measur": [10, 99], "interp_previ": 10, "interp_nearest": [10, 99], "interp_linear": 10, "interp_exp_decai": 10, "partial": [10, 28, 39, 40, 41, 49, 50, 51, 58], "fill": [10, 16, 28, 94, 96, 97, 98, 100, 103, 105, 109, 110, 112, 114, 129, 130], "extens": 11, "so": [11, 97, 147], "extra": [11, 52], "similar": [11, 25, 35, 36, 44, 46, 74, 76, 83], "regular": 11, "g": [11, 27, 28], "enabl": 11, "simpl": [11, 66, 67, 115], "export": 11, "__init__": 11, "made": [11, 99], "parent": 11, "child": 11, "constructor": [11, 39, 40, 41, 49, 50, 51, 58, 59, 60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "get_extra": 11, "throw": 11, "similarli": 11, "get_submodul": 11, "look": 11, "referenc": 11, "refer": [11, 25, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 55, 63, 64, 65, 120, 140, 142], "path": 11, "termin": 11, "resolv": 11, "someth": 11, "get_extra_st": 11, "state_dict": [11, 23], "set_extra_st": 11, "your": 11, "build": [11, 48], "note": [11, 144, 147], "picklabl": 11, "work": [11, 101, 104, 140], "serial": 11, "backward": 11, "guarante": [11, 48], "break": 11, "pickl": 11, "register_extra": 11, "manner": [11, 100], "register_buff": 11, "except": [11, 12, 13, 37, 53, 56, 57, 74, 76, 144], "limit": [11, 25, 35, 36, 40, 41, 44, 46, 83, 90], "access": 11, "keyerror": 11, "empti": [11, 96, 97, 98, 100, 103, 105, 109, 110], "dot": [11, 111], "notat": [11, 111], "valid": [11, 38, 39, 49, 50, 51, 117, 118, 119], "python": 11, "identifi": [11, 23], "load_state_dict": 11, "inner_train_upd": 12, "inner_eval_upd": 12, "as_prehook": [12, 13, 37, 53, 56, 57, 111], "prepend": [12, 13, 25, 37, 53, 56, 57, 101, 104, 106, 107, 111], "always_cal": [12, 13, 37, 53, 56, 57], "hook": [12, 13, 23, 37, 53, 56, 57, 102, 106, 107, 111], "abc": [12, 13, 23, 27, 38, 52, 58, 100, 108], "act": [12, 13], "inner": [12, 39, 49, 50, 51, 56, 57], "statehook": [12, 37, 53], "trigger": [12, 13, 56, 57, 143, 144, 145], "even": [12, 13, 37, 53, 56, 57, 111], "whether": 12, "alter": [12, 39, 49, 50, 99], "add_inn": [12, 56, 57], "amongst": 12, "evalexec_inn": 12, "yield": [12, 23, 45, 54, 69, 72], "innerarg": 12, "abstract": [12, 13, 23, 27, 38, 52, 58, 100, 108], "innerhook": [12, 56, 57], "notimplementederror": [12, 13, 23, 27, 38, 52, 58, 100], "innerkwarg": 12, "remove_inn": [12, 56, 57], "execut": [12, 13], "unregist": [12, 13], "trainexec_inn": 12, "singl": [13, 48, 99, 101, 104], "dtype": [14, 16, 94, 98, 109, 110, 112, 114, 117, 118, 119, 129, 130], "layout": [14, 16, 23, 25, 94, 112, 114, 129, 130], "devic": [14, 16, 94, 112, 114, 129, 130], "requires_grad": [14, 16, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 112, 114, 129, 130], "gradient": [14, 16, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 112, 114, 129, 130], "ndarrai": [15, 116], "agnost": [15, 116], "exponenti": [15, 17, 18, 25, 35, 36, 42, 44, 45, 46, 47, 55, 63, 64, 65, 68, 69, 73, 74, 75, 76, 77, 78, 96, 97, 103, 109, 110, 115, 140, 143], "y": [15, 49, 50, 51, 116, 144], "numpi": [15, 116], "ob": [17, 96, 97, 98, 100, 103, 105, 109, 110, 115], "level": [17, 115], "trend": 17, "alpha": [17, 97, 115], "beta": 17, "holt": 17, "linear": [17, 35, 49, 50, 51, 63, 64, 65, 66, 67, 77, 97, 140, 145], "smooth": [17, 97, 115], "s_0": [17, 97, 115], "x_0": [17, 97, 115], "b_0": 17, "x_1": 17, "s_": [17, 97, 115], "s_t": [17, 97, 115], "b_": 17, "b_t": 17, "revis": [17, 115], "time_const": [18, 42, 43, 47, 55, 63, 64, 77, 78, 96, 103, 109, 110], "decai": [18, 24, 25, 35, 36, 42, 44, 46, 47, 55, 63, 64, 65, 73, 74, 75, 76, 77, 78, 96, 103, 109, 110, 143, 144], "d_": [18, 19, 20, 21, 142], "constant": [18, 25, 35, 36, 42, 44, 46, 47, 55, 63, 64, 65, 77, 78, 96, 97, 103, 109, 110, 142, 143, 144, 145], "linearlli": 19, "wmin": [22, 26, 27], "wmax": [22, 26, 27], "weightdepend": [22, 26], "hard": [22, 25, 29, 30, 140], "lower": [22, 25, 26, 27, 29, 31, 33, 37, 56, 65, 142, 143], "w_": [22, 26, 39, 142], "min": [22, 26, 29, 31, 33, 37, 56, 113, 142], "upper": [22, 26, 27, 30, 32, 34, 37, 56, 142], "max": [22, 25, 26, 30, 32, 34, 35, 36, 37, 44, 46, 56, 65, 83, 113, 142, 143], "a_": [22, 25, 26, 29, 30, 31, 32, 33, 34, 142], "w": [22, 25, 26, 29, 30, 31, 32, 33, 34, 39, 49, 50, 51, 142], "eta_": [22, 25, 26, 29, 30, 31, 32, 33, 34, 142], "exclud": [22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 38, 39, 49, 50, 51, 52, 58, 59, 82], "updatebound": [22, 25, 26, 27], "interdepend": 23, "attach": 23, "detach": 23, "_register_state_dict_hook": 23, "add_monitor": [23, 25], "associ": [23, 25, 45, 54], "successfulli": [23, 25], "add_train": 23, "submodul": [23, 48], "delet": [23, 38, 39, 49, 50, 51], "well": [23, 26, 61, 140], "del_monitor": 23, "dentifi": 23, "del_train": 23, "get_monitor": 23, "captur": 23, "num_class": 24, "classifi": 24, "per": [24, 39, 90], "intern": [24, 51, 82], "calcul": [24, 25, 100, 144], "learn": [24, 25, 27, 28, 35, 36, 38, 39, 44, 46, 49, 50, 51], "multipli": [24, 74, 76, 144], "them": [24, 86, 101, 102, 104, 106, 107, 111, 140], "b_k": [24, 36, 46, 63, 65, 143, 145], "group": [24, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 55, 58, 59, 63, 64, 65, 82], "total": [24, 143, 144, 145, 147], "possibl": [24, 99], "decay_r": 24, "scale": [24, 45, 53, 54, 57, 71, 72, 74, 76, 95, 109, 110, 117, 118], "logit": 24, "label": 24, "infer": 24, "truth": 24, "predict": 24, "averag": [24, 63, 64, 65, 97], "nclass": 24, "ndim": 24, "l_1": 24, "raw": 24, "recalcul": 24, "lr_post": 25, "lr_pre": 25, "tc_post": 25, "tc_pre": 25, "delai": [25, 38, 39, 40, 41, 49, 50, 51, 58, 59, 60, 90, 140], "interp_toler": 25, "trace_mod": 25, "liter": [25, 40, 41], "cumul": [25, 96, 109, 117, 118, 119], "wd_lower": 25, "wd_upper": 25, "batch_reduct": [25, 35, 36, 44, 46, 83], "layerwiseupdat": 25, "plastic": [25, 140], "delta": [25, 35, 36, 40, 41, 42, 44, 45, 46, 47, 54, 55, 63, 64, 65, 68, 69, 70, 73, 74, 75, 76, 77, 78, 96, 97, 103, 109, 110, 140, 142, 143, 144, 145], "bigl": 25, "post": [25, 38, 39, 49, 50, 51, 142], "bigr": 25, "trace": [25, 73, 74, 75, 76, 96, 103, 109, 110, 140], "vari": 25, "qquad": [25, 117, 118], "m": [25, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 85, 86, 90, 143, 144, 145, 147], "postsynapt": [25, 35, 38, 43, 44, 47, 52, 63, 64, 65, 86, 142, 143], "ltp": [25, 27, 142], "ltd": [25, 27, 142], "tau_": [25, 142], "assum": [25, 35, 38, 39, 44, 49, 50, 51, 83, 99], "co": [25, 40, 41, 90], "origin": [25, 35, 36, 44, 46, 83, 99], "visit": [25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 46, 47, 55, 63, 64, 65, 66, 67], "soft": [25, 26, 31, 32, 33, 34, 140], "zoo": [25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 46, 47, 55, 63, 64, 65, 66, 67], "spike_post": 25, "spike_pr": 25, "trace_post": 25, "trace_pr": 25, "fail": [25, 99], "lrpost": 25, "lrpre": 25, "depress": [25, 29, 31, 33, 142, 143], "minpow": 26, "maxpow": 26, "expon": [26, 33, 34], "mu_": [26, 33, 34, 142], "power": [26, 31, 32, 33, 34, 142], "effect": [26, 27, 39, 49, 50, 143, 145], "magnitud": [27, 142, 143], "hasmax": 27, "hasmin": 27, "power_upper_bound": [28, 32], "power_lower_bound": [28, 31], "hard_upper_bound": 28, "hard_lower_bound": 28, "v_": [29, 30, 31, 32, 33, 34, 35, 36, 42, 44, 46, 47, 55, 63, 65, 77, 78, 79, 80, 143, 144, 145], "v": [29, 30, 31, 32, 33, 34], "equival": [31, 32, 99, 144], "law": [33, 34, 142], "rest_v": [35, 36, 42, 43, 44, 46, 47, 55, 63, 65, 77, 78, 80], "reset_v": [35, 36, 42, 43, 46, 47, 55, 79], "thresh_eq_v": [35, 44, 145], "refrac_t": [35, 36, 42, 43, 44, 46, 47, 55, 79, 80, 86], "tc_membran": [35, 36, 44, 46], "tc_adapt": [35, 36, 46], "spike_incr": [35, 36, 44, 46, 63, 64], "resist": [35, 36, 42, 43, 44, 46, 47, 55, 77, 78, 144], "batch_siz": [35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 55, 58, 59, 81, 82], "adaptationmixin": [35, 36, 44, 46], "voltagemixin": [35, 36, 42, 43, 44, 46, 47, 55], "spikerefractorymixin": [35, 36, 42, 43, 44, 46, 47, 55], "leaki": [35, 43, 44, 47, 140], "dynam": [35, 36, 40, 41, 42, 43, 44, 46, 47, 52, 55, 58, 77, 78, 79, 80, 143, 144, 145], "v_m": [35, 36, 42, 44, 46, 47, 55, 63, 65, 77, 78, 79, 80, 143, 144, 145], "rest": [35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 52, 55, 58, 63, 65, 77, 78, 80, 143, 144, 145], "r_mi": [35, 36, 42, 44, 46, 47, 55, 77, 78, 144, 145], "tau_m": [35, 36, 42, 44, 46, 47, 55, 77, 78, 144, 145], "theta_": [35, 44, 65, 67, 143, 144, 145], "sum_k": [35, 36, 44, 46, 143, 144, 145], "theta_k": [35, 44, 64, 65, 67, 143, 144], "tau_k": [35, 36, 46, 63, 64, 73, 74, 75, 76, 143, 144, 145], "leftarrow": [35, 36, 42, 44, 46, 47, 55, 63, 64, 65, 79, 80, 143, 144, 145], "d_k": [35, 44, 46, 143, 144, 145], "equilibrium": [35, 36, 42, 44, 46, 47, 55, 63, 65, 67, 77, 78, 80, 143, 144, 145], "mv": [35, 36, 42, 44, 46, 47, 55, 63, 64, 65, 67, 77, 78, 79, 80, 87, 143, 144, 145], "refractori": [35, 36, 42, 43, 44, 45, 46, 47, 52, 55, 63, 64, 65, 68, 69, 71, 72, 77, 78, 79, 80, 85, 86], "period": [35, 36, 42, 43, 44, 45, 46, 47, 52, 55, 63, 64, 65, 68, 69, 71, 72, 77, 78, 79, 80, 85, 86], "r_m": [35, 36, 42, 44, 46, 47, 55, 77, 78, 144], "omega": [35, 36, 42, 44, 46, 47, 55, 77, 78, 144], "keep_adapt": [35, 36, 44, 46], "refrac_lock": [35, 36, 42, 43, 44, 46, 47, 55], "na": [35, 36, 42, 43, 44, 46, 47, 55, 63, 66, 77, 78, 79, 80, 84, 88, 89, 91, 143, 144, 145, 147], "setter": [35, 44, 51, 83, 88, 92], "additon": [35, 44, 83], "lead": [35, 44, 83], "unreduc": [35, 44, 83], "bsize": [35, 38, 39, 43, 44, 47, 49, 50, 51, 52, 81, 82], "refrac": [35, 43, 44, 45, 47, 52, 63, 64, 65, 68, 69, 79, 80, 85, 86], "t_": [35, 43, 44, 47, 86, 142], "millivolt": [35, 43, 44, 47, 52, 87], "rheobase_v": [36, 42], "sharp": [36, 42, 145], "thresh_v": [36, 42, 43, 46, 47, 55, 79, 80, 145], "voltage_coupl": [36, 46, 63], "delta_t": [36, 42, 145], "v_t": [36, 42, 145], "i_x": [36, 41, 46, 143, 145, 147], "w_k": [36, 46, 63, 66, 143, 145], "a_k": [36, 63, 64, 65, 143, 145], "approach": [36, 42, 145], "rapidli": [36, 42], "steep": [36, 42, 145], "natur": [36, 42, 46, 55, 78, 117, 118, 119], "rheobas": [36, 42, 145], "strength": [36, 46, 55, 63, 78], "coupl": [36, 46, 63, 143, 145], "mu": [36, 46, 63, 117, 118, 143, 144, 145], "rang": [37, 56, 99], "synaps": [38, 39, 40, 41, 48, 49, 50, 51, 59, 88, 89, 90, 91, 92, 93], "bia": [38, 39, 49, 50, 51, 60, 61], "learnabl": [38, 39, 49, 50, 51, 60, 61, 62], "binshap": [38, 39, 49, 50, 51], "boutshap": [38, 39, 49, 50, 51], "clearabl": [38, 39, 49, 50, 51], "delayedbi": [38, 39, 49, 50, 51], "maxmimum": [38, 39, 49, 50, 51], "compos": [38, 48], "py": [38, 39, 49, 50, 51], "meth": [38, 39, 49, 50, 51], "inshap": [38, 39, 49, 50, 51], "insiz": [38, 39, 49, 50, 51], "cach": [38, 39, 49, 50, 51], "refresh": [38, 39, 49, 50, 51], "like_input": [38, 39, 49, 50, 51], "syncurr": [38, 39, 49, 50, 51], "synspik": [38, 39, 49, 50, 51], "like_synapt": [38, 39, 49, 50, 51], "outshap": [38, 39, 49, 50, 51], "outsiz": [38, 39, 49, 50, 51], "postsyn_recept": [38, 39, 49, 50, 51], "l": 38, "presyn_recept": [38, 39, 49, 50, 51], "selector": [38, 39, 40, 41, 49, 50, 51, 58, 90], "synapt": [38, 39, 40, 41, 49, 50, 51, 58, 88, 89, 90, 91, 92], "height": 39, "width": 39, "channel": 39, "filter": [39, 48], "kernel": 39, "stride": 39, "pad": 39, "dilat": 39, "synapseconstructor": [39, 40, 41, 49, 50, 51, 58], "weight_init": [39, 49, 50, 51], "onetoon": [39, 49, 50, 51, 74, 76, 79, 80, 98, 99, 109, 110], "bias_init": [39, 49, 50, 51], "delay_init": [39, 49, 50, 51], "weightbiasdelaymixin": [39, 49, 50, 51], "connect": [39, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 142], "convolut": 39, "spatial": 39, "plane": 39, "expect": [39, 45, 48, 49, 50, 51, 54, 68, 69, 70, 71, 72, 101, 104, 117, 118, 119], "c": 39, "h": 39, "kh": 39, "kw": 39, "delay_": [39, 49, 50, 60], "creat": [39, 49, 50, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93], "unless": [39, 49, 50], "later": [39, 49, 50], "uniform": [39, 49, 50, 51], "random": [39, 49, 50, 51, 94, 117, 118, 119, 129], "interv": [39, 45, 49, 50, 51, 54, 68, 69, 71, 72], "rand": [39, 49, 50, 51, 129], "still": [39, 45, 68, 69, 73, 75, 96, 103], "anoth": [39, 56, 57, 90], "h_": 39, "formula": 39, "document": 39, "lfloor": [39, 119], "p_h": 39, "d_h": 39, "k_h": 39, "s_h": 39, "rfloor": [39, 119], "p_w": 39, "d_w": 39, "k_w": 39, "s_w": 39, "ph": 39, "pw": 39, "side": [39, 144], "dh": 39, "dw": [39, 142], "sh": 39, "sw": 39, "oper": [39, 100], "reli": 39, "upon": [39, 145], "expand": 39, "consequenti": 39, "memori": [39, 45, 54], "spike_q": [40, 41], "interp_mod": [40, 41], "interp_tol": [40, 41], "current_overbound": [40, 41], "spike_overbound": [40, 41], "delayedspikecurrentaccessormixin": [40, 41], "spikederivedcurrentmixin": 40, "memoryless": [40, 41], "respond": [40, 41, 143], "instantan": [40, 41], "q": [40, 41, 147], "charg": [40, 41, 147], "carri": [40, 41, 147], "pc": [40, 41, 147], "cuba": [40, 41, 140], "partialconstructor": [40, 41, 58], "spikecurrentmixin": 41, "passthrough": [41, 105], "inject": 41, "glif": [43, 44, 140, 143, 144], "alia": 43, "lif": [43, 140], "reset_v_add": 44, "reset_v_mul": 44, "rc_adapt": 44, "lambda_k": [44, 144], "m_v": [44, 80, 144], "b_v": [44, 80, 144], "unitless": [44, 46, 55, 73, 74, 75, 76, 78, 80, 145], "frequenc": [45, 54, 68, 69, 70, 71, 72, 143], "compens": [45, 68, 69, 71, 72, 119], "generatormixin": [45, 54], "refractorystepmixin": 45, "encod": [45, 54], "poisson": [45, 54, 68, 69, 70, 71, 72], "distribut": [45, 54, 68, 69, 70, 71, 72, 117, 118, 119], "randomli": [45, 68, 69], "point": [45, 68, 69, 119, 145], "hz": [45, 54, 68, 69, 70, 71, 72], "inter": [45, 68, 69, 90], "pseudorandom": [45, 54, 68, 69, 71, 72, 94, 117, 118, 119, 129], "distanc": [45, 68, 69], "th": [45, 63, 64, 65, 68, 69], "onlin": [45, 54], "iter": [45, 54, 69, 72], "intens": [45, 54], "hertz": [45, 54], "pin": 45, "crit_v": [46, 55, 78], "affin": [46, 55, 78], "crit": [46, 55, 78, 145], "drift": [46, 55, 78], "toward": [46, 55, 78, 144, 145], "awai": [46, 55, 78, 145], "connection_kwarg": 48, "neuron_kwarg": 48, "sequenti": 48, "block": 48, "kei": 48, "written": 48, "avoid": 48, "alwai": [48, 90], "uniqu": 48, "architectur": 48, "explicitli": 48, "go": 48, "unexpect": 48, "in_shap": 49, "out_shap": 49, "interc": [49, 51], "prod": [49, 50, 51], "m_0": 49, "unbatch": [49, 50, 51], "transform": [49, 50, 51], "odot": [50, 51], "inputoutput": [50, 51], "i_n": 51, "lineardens": 51, "creation": 51, "mask": [51, 74, 76, 77, 78], "shapemixin": [52, 58], "extra_repr": 52, "12": [53, 57, 95, 143], "p": [53, 57, 95, 117, 118, 119], "norm": [53, 57, 95], "demonin": [53, 57, 95], "stepmixin": 54, "replic": [54, 71, 72, 82], "bindsnet": [54, 71, 72], "parameter": [54, 71, 72, 142], "invers": [54, 71, 72, 144, 147], "remotehook": [56, 57], "clamp": [56, 70], "ep": 57, "historymodul": [58, 88, 89, 90, 91, 92, 93, 108], "nanoamper": [58, 84, 89, 90, 92], "current_at": [58, 90], "spike_at": [58, 90], "boolean": 58, "newli": 59, "weightbiasmixin": 60, "mixin": [60, 61, 62, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "weight_": [60, 61, 62], "bias_": [60, 61], "weightmixin": 61, "doesn": [63, 64, 65], "adapt_r": 65, "rebound_r": 65, "adapt_reset_min": 65, "permit": [65, 74, 76], "adap": [66, 67], "i_": 66, "optioon": [68, 69], "nonsens": [68, 69], "1000": [68, 69], "inhomogen": 70, "_description_": 70, "exce": 70, "never": [71, 72], "init": [73, 74, 75, 76], "condit": [73, 74, 75, 76, 145], "count": [73, 75, 82, 96, 103, 119], "incorpor": [73, 74, 75, 76, 96, 97, 98, 99, 100, 103, 105, 108, 109, 110, 144, 145], "matchfn": [74, 76], "trace_cumul": 74, "predic": [74, 76], "datatyp": [74, 76, 98, 109, 110], "trace_nearest": 76, "masked_input": [77, 78], "held": [79, 80], "v_slope": 80, "v_intercept": 80, "batchmixin": 82, "concept": 82, "_shape": 82, "bshape": 82, "adaptation_": 83, "adapt_batchreduc": 83, "current_": [84, 88, 89, 90, 91], "refrac_": [85, 86], "refractorymixin": 86, "driven": 87, "voltage_": 87, "currentmixin": [88, 91], "therefrom": [88, 92], "_to_spik": [88, 90], "noth": [88, 92], "primit": [89, 91, 93], "primitive_curr": 90, "primitive_spik": 90, "current_interp": 90, "spike_interp": 90, "current_overv": 90, "spike_overv": 90, "_to_curr": [90, 92], "spike_": [90, 91, 92, 93], "_current_interp": 90, "_spike_interp": 90, "_current_ob_v": 90, "_spike_ob_v": 90, "_primitive_curr": 90, "_primitive_spik": 90, "_interp_tol": 90, "spikemixin": [91, 92], "randn": 94, "foldingreduc": [96, 97, 98, 103, 105, 109, 110], "fold": [96, 97, 98, 100, 103, 105, 109, 110], "entir": [96, 97, 98, 103, 105, 109, 110], "move": 97, "decoupl": 97, "infin": 98, "fold_fn": 99, "math": 99, "map_fn": 99, "keepshap": 99, "reiniti": [99, 102, 108], "storag": 99, "histor": 99, "dump": [99, 102, 108], "tempor": 99, "oldest": 99, "peek": [99, 102, 108], "view": [99, 102, 108], "fall": 99, "foldreduc": 100, "manytoon": 101, "receiv": 101, "sent": 101, "directli": 105, "content": [106, 107], "turn": 111, "ti": 111, "resmin": 113, "resmax": 113, "srcmin": 113, "srcmax": 113, "unchang": 113, "amin": 113, "amax": 113, "shortcut": 114, "full": 114, "squar": 116, "root": 116, "continuousdistribut": [117, 118], "log": [117, 118, 119], "probabl": [117, 118, 119], "mathbb": [117, 118, 119], "r": [117, 118, 119, 144], "locat": [117, 118], "sigma": [117, 118], "_": [117, 118, 119], "cdf": [117, 118, 119], "loc": [117, 118], "erf": [117, 118], "sqrt": [117, 118], "standard": [117, 118], "deviat": [117, 118], "logcdf": [117, 118, 119], "logarithm": [117, 118, 119], "logpdf": [117, 118], "densiti": [117, 118], "pi": [117, 118], "likelihood": [117, 118], "mid": [117, 118, 119], "sim": [117, 118, 119], "params_mv": [117, 118], "varianc": [117, 118, 119], "mu_x": [117, 118], "sigma_x": [117, 118], "pdf": [117, 118], "variat": [117, 118, 119], "mathcal": [117, 118], "sample_mv": [117, 118], "non": [117, 118, 119, 120], "var": [117, 118, 119], "lnormal": 118, "discretedistribut": 119, "_0": 119, "gamma": 119, "logpmf": 119, "mass": 119, "pmf": 119, "metal": 119, "shader": 119, "although": [119, 145], "strictli": 119, "degener": 119, "convers": 120, "convert": 120, "leftmost": 120, "arbitrari": [121, 122, 123, 124, 125, 126], "uniformli": 129, "depth": 140, "academ": 140, "plan": 140, "futur": 140, "alif": 140, "3": [140, 145], "4": [140, 143, 145], "5": [140, 145], "nonlinear": 140, "qif": 140, "izhikevich": 140, "eif": 140, "adex": 140, "conduct": [140, 144], "coba": 140, "stdp": 140, "anti": 140, "hebbian": 140, "astdp": 140, "mstdp": 140, "elig": 140, "mstdpet": 140, "resum": 140, "tbd": 141, "categori": 142, "With": [142, 143, 144, 145], "w_t": 142, "dirac": [142, 147], "pp": 142, "adjust": 142, "neighbor": 142, "flip": 142, "sign": 142, "postsynpat": 142, "place": 142, "penal": 142, "penalti": 142, "heavisid": 142, "impos": 143, "regard": 143, "steadi": 143, "give": 143, "degre": 143, "freedom": 143, "modif": 143, "dampen": 143, "amplifi": 143, "addition": 143, "said": 143, "goe": 143, "dw_k": [143, 145], "approx": [143, 145], "subthreshold": [143, 145], "doi": [143, 144, 145], "10": [143, 144, 145], "1017": [143, 144, 145], "cbo9781107447615": [143, 144, 145], "6": [143, 145], "1152": 143, "jn": 143, "00686": 143, "2005": 143, "Be": [143, 144], "1038": [143, 144], "s41467": [143, 144], "017": [143, 144], "02717": [143, 144], "allen": [143, 144], "institut": [143, 144], "whitepap": [143, 144], "rebound": 143, "1162": 143, "neco": 143, "2008": 143, "680": 143, "neco_a_00196": 143, "1803": 143, "09574": 143, "021": 143, "24427": 143, "8": [143, 145], "00234": 143, "2019": 143, "dv_m": [144, 145], "rule": 144, "slope": [144, 145], "show": [144, 145], "v_r": [144, 145], "60": [144, 145], "plot": [144, 145], "c_m": 144, "g_l": 144, "capacit": 144, "nf": 144, "phrase": 144, "leak": 144, "expos": 144, "isbn": [144, 145, 147], "9780262548083": [144, 145, 147], "020": 144, "17236": 144, "fraction": 144, "intercept": 144, "convent": 144, "conting": 144, "reach": 144, "critic": 145, "tendenc": 145, "stabl": 145, "unstabl": 145, "attract": 145, "repel": 145, "v_c": 145, "50": 145, "depeend": 145, "3390": 145, "brainsci12070863": 145, "7551": 145, "mitpress": 145, "2526": 145, "001": 145, "0001": 145, "close": 145, "rapid": 145, "upsw": 145, "rightarrow": 145, "easi": 145, "confus": 145, "unrel": 145, "occasion": 145, "denot": 145, "vartheta_": 145, "rh": 145, "thresh": 145, "usual": 145, "simuat": 145, "illustr": 145, "4249": 145, "scholarpedia": 145, "8427": 145, "1523": 145, "jneurosci": 145, "23": 145, "37": 145, "11628": 145, "2003": 145, "t_f": 147, "veri": 147, "role": 147, "deliv": 147, "dramat": 147}, "objects": {"inferno": [[6, 0, 1, "", "Configuration"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "HistoryModule"], [9, 0, 1, "", "Hook"], [10, 0, 1, "", "Interpolation"], [11, 0, 1, "", "Module"], [12, 0, 1, "", "RemoteHook"], [13, 0, 1, "", "StateHook"], [14, 3, 1, "", "empty"], [15, 3, 1, "", "exp"], [16, 3, 1, "", "full"], [17, 3, 1, "", "holt_linear_smoothing"], [18, 3, 1, "", "interp_exp_decay"], [19, 3, 1, "", "interp_linear"], [20, 3, 1, "", "interp_nearest"], [21, 3, 1, "", "interp_previous"], [133, 4, 0, "-", "learn"], [135, 4, 0, "-", "neural"], [94, 3, 1, "", "normal"], [95, 3, 1, "", "normalize"], [112, 3, 1, "", "ones"], [113, 3, 1, "", "rescale"], [114, 3, 1, "", "scalar"], [115, 3, 1, "", "simple_exponential_smoothing"], [116, 3, 1, "", "sqrt"], [138, 4, 0, "-", "stats"], [120, 3, 1, "", "tensorize"], [129, 3, 1, "", "uniform"], [130, 3, 1, "", "zeros"]], "inferno.Configuration": [[6, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 2, 1, "", "constraints_repr"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "mindims"], [7, 1, 1, "", "mindims_"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[8, 1, 1, "", "deregister_constrained"], [8, 2, 1, "", "dt"], [8, 1, 1, "", "history"], [8, 2, 1, "", "hlen"], [8, 2, 1, "", "hsize"], [8, 1, 1, "", "latest"], [8, 1, 1, "", "pushto"], [8, 1, 1, "", "register_constrained"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "select"], [8, 1, 1, "", "tick"], [8, 1, 1, "", "update"]], "inferno.Hook": [[9, 1, 1, "", "deregister"], [9, 2, 1, "", "evalexec"], [9, 1, 1, "", "register"], [9, 2, 1, "", "registered"], [9, 2, 1, "", "trainexec"]], "inferno.Module": [[11, 1, 1, "", "get_extra"], [11, 1, 1, "", "get_extra_state"], [11, 1, 1, "", "register_extra"], [11, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[12, 1, 1, "", "add_inner"], [12, 2, 1, "", "evalexec_inner"], [12, 2, 1, "", "inner"], [12, 1, 1, "", "innerargs"], [12, 1, 1, "", "innerhook"], [12, 1, 1, "", "innerkwargs"], [12, 1, 1, "", "remove_inner"], [12, 1, 1, "", "run"], [12, 2, 1, "", "trainexec_inner"]], "inferno.StateHook": [[13, 1, 1, "", "hook"], [13, 2, 1, "", "module"], [13, 1, 1, "", "register"], [13, 1, 1, "", "run"]], "inferno.learn": [[22, 0, 1, "", "HardWeightDependence"], [23, 0, 1, "", "LayerwiseUpdater"], [24, 0, 1, "", "MaxRateClassifier"], [25, 0, 1, "", "STDP"], [26, 0, 1, "", "SoftWeightDependence"], [27, 0, 1, "", "WeightDependence"], [134, 4, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[22, 1, 1, "", "lower"], [22, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[23, 1, 1, "", "add_monitor"], [23, 1, 1, "", "add_monitors"], [23, 1, 1, "", "add_trainable"], [23, 1, 1, "", "attach"], [23, 1, 1, "", "clear"], [23, 1, 1, "", "del_monitor"], [23, 1, 1, "", "del_monitors"], [23, 1, 1, "", "del_trainable"], [23, 1, 1, "", "detach"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "get_monitor"], [23, 1, 1, "", "get_monitors"], [23, 2, 1, "", "monitors"], [23, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[24, 2, 1, "", "assignments"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "infer"], [24, 1, 1, "", "learn"], [24, 2, 1, "", "nclass"], [24, 2, 1, "", "ndim"], [24, 2, 1, "", "occurances"], [24, 2, 1, "", "proportional"], [24, 2, 1, "", "proportions"], [24, 2, 1, "", "rates"], [24, 2, 1, "", "shape"]], "inferno.learn.STDP": [[25, 1, 1, "", "add_monitors"], [25, 2, 1, "", "dt"], [25, 1, 1, "", "forward"], [25, 2, 1, "", "lrpost"], [25, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[26, 1, 1, "", "lower"], [26, 2, 1, "", "maxpow"], [26, 2, 1, "", "minpow"], [26, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[27, 2, 1, "", "hasmax"], [27, 2, 1, "", "hasmin"], [27, 1, 1, "", "lower"], [27, 1, 1, "", "upper"], [27, 2, 1, "", "wmax"], [27, 2, 1, "", "wmin"]], "inferno.learn.functional": [[28, 0, 1, "", "UpdateBounding"], [29, 3, 1, "", "hard_lower_bounding"], [30, 3, 1, "", "hard_upper_bounding"], [31, 3, 1, "", "mult_lower_bounding"], [32, 3, 1, "", "mult_upper_bounding"], [33, 3, 1, "", "power_lower_bounding"], [34, 3, 1, "", "power_upper_bounding"]], "inferno.neural": [[35, 0, 1, "", "ALIF"], [36, 0, 1, "", "AdEx"], [37, 0, 1, "", "Clamping"], [38, 0, 1, "", "Connection"], [39, 0, 1, "", "Conv2D"], [40, 0, 1, "", "DeltaCurrent"], [41, 0, 1, "", "DeltaPlusCurrent"], [42, 0, 1, "", "EIF"], [43, 0, 1, "", "GLIF1"], [44, 0, 1, "", "GLIF2"], [45, 0, 1, "", "HomogeneousPoissonEncoder"], [46, 0, 1, "", "Izhikevich"], [47, 0, 1, "", "LIF"], [48, 0, 1, "", "Layer"], [49, 0, 1, "", "LinearDense"], [50, 0, 1, "", "LinearDirect"], [51, 0, 1, "", "LinearLateral"], [52, 0, 1, "", "Neuron"], [53, 0, 1, "", "Normalization"], [54, 0, 1, "", "PoissonIntervalEncoder"], [55, 0, 1, "", "QIF"], [56, 0, 1, "", "RemoteClamping"], [57, 0, 1, "", "RemoteNormalization"], [58, 0, 1, "", "Synapse"], [59, 0, 1, "", "SynapseConstructor"], [136, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[35, 2, 1, "", "adaptation"], [35, 2, 1, "", "bsize"], [35, 1, 1, "", "clear"], [35, 2, 1, "", "dt"], [35, 1, 1, "", "forward"], [35, 2, 1, "", "refrac"], [35, 2, 1, "", "spike"], [35, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[36, 1, 1, "", "clear"], [36, 2, 1, "", "dt"], [36, 1, 1, "", "forward"]], "inferno.neural.Clamping": [[37, 1, 1, "", "hook"]], "inferno.neural.Connection": [[38, 2, 1, "", "bias"], [38, 2, 1, "", "biased"], [38, 2, 1, "", "binshape"], [38, 2, 1, "", "boutshape"], [38, 2, 1, "", "bsize"], [38, 1, 1, "", "clear"], [38, 2, 1, "", "delay"], [38, 2, 1, "", "delayedby"], [38, 2, 1, "", "dt"], [38, 1, 1, "", "forward"], [38, 2, 1, "", "inshape"], [38, 2, 1, "", "insize"], [38, 1, 1, "", "like_input"], [38, 1, 1, "", "like_synaptic"], [38, 2, 1, "", "outshape"], [38, 2, 1, "", "outsize"], [38, 1, 1, "", "postsyn_receptive"], [38, 1, 1, "", "presyn_receptive"], [38, 2, 1, "", "selector"], [38, 2, 1, "", "synapse"], [38, 2, 1, "", "syncurrent"], [38, 2, 1, "", "synspike"], [38, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[39, 2, 1, "", "bias"], [39, 2, 1, "", "biased"], [39, 2, 1, "", "binshape"], [39, 2, 1, "", "boutshape"], [39, 2, 1, "", "bsize"], [39, 1, 1, "", "clear"], [39, 2, 1, "", "delay"], [39, 2, 1, "", "delayedby"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"], [39, 2, 1, "", "inshape"], [39, 2, 1, "", "insize"], [39, 1, 1, "", "like_input"], [39, 1, 1, "", "like_synaptic"], [39, 2, 1, "", "outshape"], [39, 2, 1, "", "outsize"], [39, 1, 1, "", "postsyn_receptive"], [39, 1, 1, "", "presyn_receptive"], [39, 2, 1, "", "selector"], [39, 2, 1, "", "syncurrent"], [39, 2, 1, "", "synspike"], [39, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[40, 1, 1, "", "clear"], [40, 1, 1, "", "forward"], [40, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[41, 1, 1, "", "clear"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[42, 1, 1, "", "clear"], [42, 2, 1, "", "dt"], [42, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[43, 2, 1, "", "bsize"], [43, 1, 1, "", "clear"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"], [43, 2, 1, "", "refrac"], [43, 2, 1, "", "spike"], [43, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[44, 2, 1, "", "adaptation"], [44, 2, 1, "", "bsize"], [44, 1, 1, "", "clear"], [44, 2, 1, "", "dt"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "refrac"], [44, 2, 1, "", "spike"], [44, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[45, 2, 1, "", "compensated"], [45, 1, 1, "", "forward"], [45, 2, 1, "", "frequency"], [45, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[46, 1, 1, "", "clear"], [46, 2, 1, "", "dt"], [46, 1, 1, "", "forward"]], "inferno.neural.LIF": [[47, 2, 1, "", "bsize"], [47, 1, 1, "", "clear"], [47, 2, 1, "", "dt"], [47, 1, 1, "", "forward"], [47, 2, 1, "", "refrac"], [47, 2, 1, "", "spike"], [47, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[48, 1, 1, "", "clear"], [48, 2, 1, "", "connection"], [48, 1, 1, "", "forward"], [48, 2, 1, "", "neuron"], [48, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[49, 2, 1, "", "bias"], [49, 2, 1, "", "biased"], [49, 2, 1, "", "binshape"], [49, 2, 1, "", "boutshape"], [49, 2, 1, "", "bsize"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "delay"], [49, 2, 1, "", "delayedby"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "inshape"], [49, 2, 1, "", "insize"], [49, 1, 1, "", "like_input"], [49, 1, 1, "", "like_synaptic"], [49, 2, 1, "", "outshape"], [49, 2, 1, "", "outsize"], [49, 1, 1, "", "postsyn_receptive"], [49, 1, 1, "", "presyn_receptive"], [49, 2, 1, "", "selector"], [49, 2, 1, "", "syncurrent"], [49, 2, 1, "", "synspike"], [49, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[50, 2, 1, "", "bias"], [50, 2, 1, "", "biased"], [50, 2, 1, "", "binshape"], [50, 2, 1, "", "boutshape"], [50, 2, 1, "", "bsize"], [50, 1, 1, "", "clear"], [50, 2, 1, "", "delay"], [50, 2, 1, "", "delayedby"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "inshape"], [50, 2, 1, "", "insize"], [50, 1, 1, "", "like_input"], [50, 1, 1, "", "like_synaptic"], [50, 2, 1, "", "outshape"], [50, 2, 1, "", "outsize"], [50, 1, 1, "", "postsyn_receptive"], [50, 1, 1, "", "presyn_receptive"], [50, 2, 1, "", "selector"], [50, 2, 1, "", "syncurrent"], [50, 2, 1, "", "synspike"], [50, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[51, 2, 1, "", "bias"], [51, 2, 1, "", "biased"], [51, 2, 1, "", "binshape"], [51, 2, 1, "", "boutshape"], [51, 2, 1, "", "bsize"], [51, 1, 1, "", "clear"], [51, 2, 1, "", "delay"], [51, 2, 1, "", "delayedby"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "inshape"], [51, 2, 1, "", "insize"], [51, 1, 1, "", "like_input"], [51, 1, 1, "", "like_synaptic"], [51, 2, 1, "", "outshape"], [51, 2, 1, "", "outsize"], [51, 1, 1, "", "postsyn_receptive"], [51, 1, 1, "", "presyn_receptive"], [51, 2, 1, "", "selector"], [51, 2, 1, "", "syncurrent"], [51, 2, 1, "", "synspike"], [51, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[52, 2, 1, "", "bsize"], [52, 1, 1, "", "clear"], [52, 2, 1, "", "dt"], [52, 1, 1, "", "extra_repr"], [52, 1, 1, "", "forward"], [52, 2, 1, "", "refrac"], [52, 2, 1, "", "spike"], [52, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[53, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[54, 1, 1, "", "forward"], [54, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[55, 1, 1, "", "clear"], [55, 2, 1, "", "dt"], [55, 1, 1, "", "forward"]], "inferno.neural.RemoteClamping": [[56, 1, 1, "", "add_inner"], [56, 1, 1, "", "innerhook"], [56, 1, 1, "", "remove_inner"]], "inferno.neural.RemoteNormalization": [[57, 1, 1, "", "add_inner"], [57, 1, 1, "", "innerhook"], [57, 1, 1, "", "remove_inner"]], "inferno.neural.Synapse": [[58, 1, 1, "", "clear"], [58, 2, 1, "", "current"], [58, 1, 1, "", "current_at"], [58, 2, 1, "", "delay"], [58, 2, 1, "", "dt"], [58, 1, 1, "", "forward"], [58, 1, 1, "", "partialconstructor"], [58, 2, 1, "", "spike"], [58, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[60, 0, 1, "", "WeightBiasDelayMixin"], [61, 0, 1, "", "WeightBiasMixin"], [62, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[60, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[61, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[62, 2, 1, "", "weight"]], "inferno.neural.functional": [[63, 3, 1, "", "adaptive_currents_linear"], [64, 3, 1, "", "adaptive_thresholds_linear_spike"], [65, 3, 1, "", "adaptive_thresholds_linear_voltage"], [66, 3, 1, "", "apply_adaptive_currents"], [67, 3, 1, "", "apply_adaptive_thresholds"], [68, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [69, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [70, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [71, 3, 1, "", "enc_poisson_interval"], [72, 3, 1, "", "enc_poisson_interval_online"], [73, 3, 1, "", "trace_cumulative"], [74, 3, 1, "", "trace_cumulative_scaled"], [75, 3, 1, "", "trace_nearest"], [76, 3, 1, "", "trace_nearest_scaled"], [77, 3, 1, "", "voltage_integration_linear"], [78, 3, 1, "", "voltage_integration_quadratic"], [79, 3, 1, "", "voltage_thresholding"], [80, 3, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[81, 0, 1, "", "BatchMixin"], [82, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[81, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[82, 2, 1, "", "bshape"], [82, 2, 1, "", "bsize"], [82, 2, 1, "", "count"], [82, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[83, 0, 1, "", "AdaptationMixin"], [84, 0, 1, "", "CurrentMixin"], [85, 0, 1, "", "RefractoryMixin"], [86, 0, 1, "", "SpikeRefractoryMixin"], [87, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[83, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[84, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[85, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[86, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[87, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[88, 0, 1, "", "CurrentDerivedSpikeMixin"], [89, 0, 1, "", "CurrentMixin"], [90, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [91, 0, 1, "", "SpikeCurrentMixin"], [92, 0, 1, "", "SpikeDerivedCurrentMixin"], [93, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[88, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[89, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[90, 1, 1, "", "current_at"], [90, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[92, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[93, 2, 1, "", "spike"]], "inferno.observe": [[96, 0, 1, "", "CumulativeTraceReducer"], [97, 0, 1, "", "EMAReducer"], [98, 0, 1, "", "EventReducer"], [99, 0, 1, "", "FoldReducer"], [100, 0, 1, "", "FoldingReducer"], [101, 0, 1, "", "InputMonitor"], [102, 0, 1, "", "Monitor"], [103, 0, 1, "", "NearestTraceReducer"], [104, 0, 1, "", "OutputMonitor"], [105, 0, 1, "", "PassthroughReducer"], [106, 0, 1, "", "PostMonitor"], [107, 0, 1, "", "PreMonitor"], [108, 0, 1, "", "Reducer"], [109, 0, 1, "", "ScaledCumulativeTraceReducer"], [110, 0, 1, "", "ScaledNearestTraceReducer"], [111, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[96, 2, 1, "", "dt"], [96, 1, 1, "", "fold"], [96, 1, 1, "", "initialize"], [96, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[97, 1, 1, "", "fold"], [97, 1, 1, "", "initialize"], [97, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[98, 1, 1, "", "fold"], [98, 1, 1, "", "initialize"], [98, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[99, 1, 1, "", "clear"], [99, 2, 1, "", "data"], [99, 2, 1, "", "dt"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "forward"], [99, 2, 1, "", "hlen"], [99, 1, 1, "", "peek"], [99, 1, 1, "", "push"], [99, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[102, 1, 1, "", "clear"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "peek"], [102, 2, 1, "", "reducer"], [102, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[103, 2, 1, "", "dt"], [103, 1, 1, "", "fold"], [103, 1, 1, "", "initialize"], [103, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[105, 1, 1, "", "fold"], [105, 1, 1, "", "initialize"], [105, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[108, 1, 1, "", "clear"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "forward"], [108, 1, 1, "", "peek"], [108, 1, 1, "", "push"], [108, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[109, 2, 1, "", "dt"], [109, 1, 1, "", "fold"], [109, 1, 1, "", "initialize"], [109, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[110, 2, 1, "", "dt"], [110, 1, 1, "", "fold"], [110, 1, 1, "", "initialize"], [110, 1, 1, "", "interpolate"]], "inferno.stats": [[117, 0, 1, "", "LogNormal"], [118, 0, 1, "", "Normal"], [119, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[117, 1, 1, "", "cdf"], [117, 1, 1, "", "logcdf"], [117, 1, 1, "", "logpdf"], [117, 1, 1, "", "mean"], [117, 1, 1, "", "params_mv"], [117, 1, 1, "", "pdf"], [117, 1, 1, "", "sample"], [117, 1, 1, "", "sample_mv"], [117, 1, 1, "", "validate"], [117, 1, 1, "", "variance"]], "inferno.stats.Normal": [[118, 1, 1, "", "cdf"], [118, 1, 1, "", "logcdf"], [118, 1, 1, "", "logpdf"], [118, 1, 1, "", "mean"], [118, 1, 1, "", "params_mv"], [118, 1, 1, "", "pdf"], [118, 1, 1, "", "sample"], [118, 1, 1, "", "sample_mv"], [118, 1, 1, "", "validate"], [118, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[119, 1, 1, "", "cdf"], [119, 1, 1, "", "logcdf"], [119, 1, 1, "", "logpmf"], [119, 1, 1, "", "mean"], [119, 1, 1, "", "pmf"], [119, 1, 1, "", "sample"], [119, 1, 1, "", "validate"], [119, 1, 1, "", "variance"]], "inferno.typing": [[121, 0, 1, "", "ManyToMany"], [122, 0, 1, "", "ManyToManyMethod"], [123, 0, 1, "", "ManyToOne"], [124, 0, 1, "", "ManyToOneMethod"], [125, 0, 1, "", "OneToMany"], [126, 0, 1, "", "OneToManyMethod"], [127, 0, 1, "", "OneToOne"], [128, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 3, 134, 136], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 3, 133, 142], "simul": 0, "refractori": [0, 4], "period": [0, 4], "extend": 1, "inferno": [1, 5, 132, 133, 134, 135, 136, 137, 138, 139], "updat": [1, 133], "guidebook": 2, "mathemat": 3, "note": 3, "exponenti": [3, 145], "decai": 3, "constant": 3, "trace": [3, 136, 142], "cumul": 3, "nearest": 3, "scale": 3, "dirac": 3, "delta": [3, 146, 147], "heavisid": 3, "step": 3, "relationship": 3, "neuron": [4, 52, 135, 136, 140, 143, 144, 145], "system": 4, "dynam": [4, 136], "welcom": 5, "": 5, "document": 5, "configur": 6, "dimensionalmodul": 7, "historymodul": 8, "shape": [8, 24, 38, 39, 45, 49, 50, 51, 54, 63, 64, 65, 68, 69, 70, 71, 72, 90, 99], "hook": [9, 135], "interpol": [10, 132], "modul": [11, 142], "remotehook": 12, "statehook": 13, "empti": 14, "exp": 15, "full": 16, "holt_linear_smooth": 17, "interp_exp_decai": 18, "interp_linear": 19, "interp_nearest": 20, "interp_previ": 21, "hardweightdepend": 22, "layerwiseupdat": 23, "maxrateclassifi": 24, "stdp": [25, 142], "softweightdepend": 26, "weightdepend": 27, "updatebound": 28, "hard_lower_bound": 29, "hard_upper_bound": 30, "mult_lower_bound": 31, "mult_upper_bound": 32, "power_lower_bound": 33, "power_upper_bound": 34, "alif": [35, 144], "adex": [36, 145], "clamp": 37, "connect": [38, 135], "conv2d": 39, "deltacurr": 40, "deltapluscurr": 41, "eif": [42, 145], "glif1": [43, 144], "glif2": [44, 144], "homogeneouspoissonencod": 45, "izhikevich": [46, 145], "lif": [47, 144], "layer": 48, "lineardens": 49, "lineardirect": 50, "linearlater": 51, "normal": [53, 94, 95, 118], "poissonintervalencod": 54, "qif": [55, 145], "remoteclamp": 56, "remotenorm": 57, "synaps": [58, 135, 140, 146, 147], "synapseconstructor": 59, "weightbiasdelaymixin": 60, "weightbiasmixin": 61, "weightmixin": 62, "adaptive_currents_linear": 63, "adaptive_thresholds_linear_spik": 64, "adaptive_thresholds_linear_voltag": 65, "apply_adaptive_curr": 66, "apply_adaptive_threshold": 67, "enc_homogeneous_poisson_exp_interv": 68, "enc_homogeneous_poisson_exp_interval_onlin": 69, "enc_inhomogenous_poisson_bernoulli_approx": 70, "enc_poisson_interv": 71, "enc_poisson_interval_onlin": 72, "trace_cumul": 73, "trace_cumulative_sc": 74, "trace_nearest": 75, "trace_nearest_sc": 76, "voltage_integration_linear": 77, "voltage_integration_quadrat": 78, "voltage_threshold": 79, "voltage_thresholding_slope_intercept": 80, "batchmixin": 81, "shapemixin": 82, "adaptationmixin": 83, "currentmixin": [84, 89], "refractorymixin": 85, "spikerefractorymixin": 86, "voltagemixin": 87, "currentderivedspikemixin": 88, "delayedspikecurrentaccessormixin": 90, "spikecurrentmixin": 91, "spikederivedcurrentmixin": 92, "spikemixin": 93, "cumulativetracereduc": 96, "emareduc": 97, "eventreduc": 98, "foldreduc": 99, "foldingreduc": 100, "inputmonitor": 101, "monitor": [102, 137], "nearesttracereduc": 103, "outputmonitor": 104, "passthroughreduc": 105, "postmonitor": 106, "premonitor": 107, "reduc": [108, 137], "scaledcumulativetracereduc": 109, "scalednearesttracereduc": 110, "statemonitor": 111, "ones": 112, "rescal": 113, "scalar": 114, "simple_exponential_smooth": 115, "sqrt": 116, "lognorm": 117, "paramet": [117, 118, 119, 133, 134], "support": [117, 118, 119], "poisson": 119, "tensor": [120, 132], "manytomani": 121, "manytomanymethod": 122, "manytoon": 123, "manytoonemethod": 124, "onetomani": 125, "onetomanymethod": 126, "onetoon": 127, "onetoonemethod": 128, "uniform": 129, "zero": 130, "api": 131, "refer": [131, 143, 144, 145, 147], "infrastructur": 132, "gener": [132, 144], "math": 132, "learn": [133, 134, 140, 141, 142], "compon": [133, 135, 137], "spike": [133, 136, 142, 143], "depend": [133, 134, 142, 143], "plastic": [133, 142], "bound": [133, 142], "classifi": 133, "neural": [135, 136], "encod": [135, 136], "type": [135, 139], "mixin": 135, "observ": 137, "stat": 138, "distribut": 138, "callabl": 139, "model": [140, 144, 145, 146, 147], "method": [140, 141, 142], "zoo": 140, "overview": [140, 141, 142, 143], "resum": 141, "like": [141, 142], "formul": [142, 143, 144, 145, 146, 147], "delai": 142, "anti": 142, "hebbian": 142, "astdp": 142, "descript": [142, 144, 145, 147], "mstdp": 142, "elig": 142, "mstdpet": 142, "weight": 142, "soft": 142, "hard": 142, "adapt": [143, 144, 145], "current": [143, 147], "linear": [143, 144], "threshold": 143, "voltag": 143, "leaki": 144, "integr": [144, 145], "fire": [144, 145], "altern": 144, "1": 144, "2": 144, "3": 144, "glif3": 144, "4": 144, "glif4": 144, "5": 144, "glif5": 144, "nonlinear": 145, "quadrat": 145, "conduct": 146, "base": [146, 147], "coba": 146, "variant": [146, 147], "cuba": 147}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [4, "refractory-periods"]], "Extending Inferno": [[1, "extending-inferno"]], "Updaters": [[1, "updaters"]], "Guidebook": [[2, "guidebook"]], "Mathematical Notes": [[3, "mathematical-notes"]], "Exponential Decay and Time Constants": [[3, "exponential-decay-and-time-constants"]], "Trace": [[3, "trace"]], "Cumulative Trace": [[3, "cumulative-trace"]], "Nearest Trace": [[3, "nearest-trace"]], "Scaling Traces": [[3, "scaling-traces"]], "Cumulative Scaled Trace": [[3, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[3, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[3, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[3, "dirac-delta-function"]], "Heaviside Step Function": [[3, "heaviside-step-function"]], "Relationship": [[3, "relationship"]], "Neurons and Neuronal Systems": [[4, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[4, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[5, "welcome-to-infernos-documentation"]], "Configuration": [[6, "configuration"]], "DimensionalModule": [[7, "dimensionalmodule"]], "HistoryModule": [[8, "historymodule"]], "Shape": [[8, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [38, null], [38, null], [38, null], [38, null], [39, null], [39, null], [39, null], [39, null], [39, null], [39, null], [39, null], [45, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [49, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [50, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [51, null], [54, null], [63, null], [64, null], [65, null], [68, null], [69, null], [70, null], [71, null], [72, null], [90, null], [90, null], [99, null]], "Hook": [[9, "hook"]], "Interpolation": [[10, "interpolation"], [132, "interpolation"]], "Module": [[11, "module"]], "RemoteHook": [[12, "remotehook"]], "StateHook": [[13, "statehook"]], "empty": [[14, "empty"]], "exp": [[15, "exp"]], "full": [[16, "full"]], "holt_linear_smoothing": [[17, "holt-linear-smoothing"]], "interp_exp_decay": [[18, "interp-exp-decay"]], "interp_linear": [[19, "interp-linear"]], "interp_nearest": [[20, "interp-nearest"]], "interp_previous": [[21, "interp-previous"]], "HardWeightDependence": [[22, "hardweightdependence"]], "LayerwiseUpdater": [[23, "layerwiseupdater"]], "MaxRateClassifier": [[24, "maxrateclassifier"]], "STDP": [[25, "stdp"]], "SoftWeightDependence": [[26, "softweightdependence"]], "WeightDependence": [[27, "weightdependence"]], "UpdateBounding": [[28, "updatebounding"]], "hard_lower_bounding": [[29, "hard-lower-bounding"]], "hard_upper_bounding": [[30, "hard-upper-bounding"]], "mult_lower_bounding": [[31, "mult-lower-bounding"]], "mult_upper_bounding": [[32, "mult-upper-bounding"]], "power_lower_bounding": [[33, "power-lower-bounding"]], "power_upper_bounding": [[34, "power-upper-bounding"]], "ALIF": [[35, "alif"]], "AdEx": [[36, "adex"]], "Clamping": [[37, "clamping"]], "Connection": [[38, "connection"]], "Conv2D": [[39, "conv2d"]], "DeltaCurrent": [[40, "deltacurrent"]], "DeltaPlusCurrent": [[41, "deltapluscurrent"]], "EIF": [[42, "eif"]], "GLIF1": [[43, "glif1"]], "GLIF2": [[44, "glif2"]], "HomogeneousPoissonEncoder": [[45, "homogeneouspoissonencoder"]], "Izhikevich": [[46, "izhikevich"]], "LIF": [[47, "lif"]], "Layer": [[48, "layer"]], "LinearDense": [[49, "lineardense"]], "LinearDirect": [[50, "lineardirect"]], "LinearLateral": [[51, "linearlateral"]], "Neuron": [[52, "neuron"]], "Normalization": [[53, "normalization"]], "PoissonIntervalEncoder": [[54, "poissonintervalencoder"]], "QIF": [[55, "qif"]], "RemoteClamping": [[56, "remoteclamping"]], "RemoteNormalization": [[57, "remotenormalization"]], "Synapse": [[58, "synapse"]], "SynapseConstructor": [[59, "synapseconstructor"]], "WeightBiasDelayMixin": [[60, "weightbiasdelaymixin"]], "WeightBiasMixin": [[61, "weightbiasmixin"]], "WeightMixin": [[62, "weightmixin"]], "adaptive_currents_linear": [[63, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[64, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[65, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[66, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[67, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[68, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[69, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[70, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[71, "enc-poisson-interval"]], "enc_poisson_interval_online": [[72, "enc-poisson-interval-online"]], "trace_cumulative": [[73, "trace-cumulative"]], "trace_cumulative_scaled": [[74, "trace-cumulative-scaled"]], "trace_nearest": [[75, "trace-nearest"]], "trace_nearest_scaled": [[76, "trace-nearest-scaled"]], "voltage_integration_linear": [[77, "voltage-integration-linear"]], "voltage_integration_quadratic": [[78, "voltage-integration-quadratic"]], "voltage_thresholding": [[79, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[80, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[81, "batchmixin"]], "ShapeMixin": [[82, "shapemixin"]], "AdaptationMixin": [[83, "adaptationmixin"]], "CurrentMixin": [[84, "currentmixin"], [89, "currentmixin"]], "RefractoryMixin": [[85, "refractorymixin"]], "SpikeRefractoryMixin": [[86, "spikerefractorymixin"]], "VoltageMixin": [[87, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[88, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[90, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[91, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[92, "spikederivedcurrentmixin"]], "SpikeMixin": [[93, "spikemixin"]], "normal": [[94, "normal"]], "normalize": [[95, "normalize"]], "CumulativeTraceReducer": [[96, "cumulativetracereducer"]], "EMAReducer": [[97, "emareducer"]], "EventReducer": [[98, "eventreducer"]], "FoldReducer": [[99, "foldreducer"]], "FoldingReducer": [[100, "foldingreducer"]], "InputMonitor": [[101, "inputmonitor"]], "Monitor": [[102, "monitor"]], "NearestTraceReducer": [[103, "nearesttracereducer"]], "OutputMonitor": [[104, "outputmonitor"]], "PassthroughReducer": [[105, "passthroughreducer"]], "PostMonitor": [[106, "postmonitor"]], "PreMonitor": [[107, "premonitor"]], "Reducer": [[108, "reducer"]], "ScaledCumulativeTraceReducer": [[109, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[110, "scalednearesttracereducer"]], "StateMonitor": [[111, "statemonitor"]], "ones": [[112, "ones"]], "rescale": [[113, "rescale"]], "scalar": [[114, "scalar"]], "simple_exponential_smoothing": [[115, "simple-exponential-smoothing"]], "sqrt": [[116, "sqrt"]], "LogNormal": [[117, "lognormal"]], "Parameters": [[117, null], [118, null], [119, null]], "Support": [[117, null], [118, null], [119, null]], "Normal": [[118, "normal"]], "Poisson": [[119, "poisson"]], "tensorize": [[120, "tensorize"]], "ManyToMany": [[121, "manytomany"]], "ManyToManyMethod": [[122, "manytomanymethod"]], "ManyToOne": [[123, "manytoone"]], "ManyToOneMethod": [[124, "manytoonemethod"]], "OneToMany": [[125, "onetomany"]], "OneToManyMethod": [[126, "onetomanymethod"]], "OneToOne": [[127, "onetoone"]], "OneToOneMethod": [[128, "onetoonemethod"]], "uniform": [[129, "uniform"]], "zeros": [[130, "zeros"]], "API Reference": [[131, "api-reference"]], "inferno": [[132, "inferno"]], "Infrastructure": [[132, "infrastructure"]], "General Math": [[132, "general-math"]], "Tensors": [[132, "tensors"]], "inferno.learn": [[133, "module-inferno.learn"]], "Components": [[133, "components"], [135, "components"], [137, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[133, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[133, "parameter-update-bounding"]], "Classifiers": [[133, "classifiers"]], "inferno.learn.functional": [[134, "module-inferno.learn.functional"]], "Parameter Dependence": [[134, "parameter-dependence"]], "inferno.neural": [[135, "module-inferno.neural"]], "Neurons": [[135, "neurons"], [140, "neurons"]], "Synapses": [[135, "synapses"], [140, "synapses"]], "Connections": [[135, "connections"]], "Encoders": [[135, "encoders"]], "Hooks": [[135, "hooks"]], "Types": [[135, "types"]], "Mixins": [[135, "mixins"]], "inferno.neural.functional": [[136, "module-inferno.neural.functional"]], "Encodings": [[136, "encodings"]], "Neuronal Dynamics": [[136, "neuronal-dynamics"]], "Spike Trace": [[136, "spike-trace"]], "inferno.observe": [[137, "inferno-observe"]], "Monitors": [[137, "monitors"]], "Reducers": [[137, "reducers"]], "inferno.stats": [[138, "module-inferno.stats"]], "Distributions": [[138, "distributions"]], "inferno.typing": [[139, "inferno-typing"]], "Callable Types": [[139, "callable-types"]], "Model and Method Zoo": [[140, "model-and-method-zoo"]], "Overview": [[140, "overview"], [141, "overview"], [142, "overview"], [143, "overview"]], "Learning Methods": [[140, "learning-methods"]], "ReSuMe-Like Learning Methods": [[141, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[142, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[142, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[142, "formulation"], [142, "id1"], [142, "id2"], [142, "id3"], [142, "id5"], [143, "formulation"], [143, "id1"], [143, "id3"], [143, "id5"], [144, "formulation"], [144, "id1"], [144, "id4"], [145, "formulation"], [145, "id1"], [145, "id4"], [145, "id7"], [146, "formulation"], [147, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[142, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[142, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[142, "description"], [142, "id4"], [144, "description"], [144, "id2"], [144, "id5"], [145, "description"], [145, "id2"], [145, "id5"], [145, "id8"], [147, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[142, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[142, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[142, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[142, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[143, "neuronal-adaptation"]], "Adaptive Current, Linear": [[143, "adaptive-current-linear"]], "References": [[143, "references"], [143, "id2"], [143, "id4"], [143, "id6"], [144, "references"], [144, "id3"], [144, "id6"], [145, "references"], [145, "id3"], [145, "id6"], [145, "id9"], [147, "references"]], "Adaptive Current, Linear Spike-Dependent": [[143, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[143, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[143, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[144, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[144, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[144, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[144, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[144, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[144, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[144, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[144, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[144, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[145, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[145, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[145, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[145, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[145, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[146, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[146, "delta-coba-variant"]], "Synapse Models, Current-Based": [[147, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[147, "delta-cuba-variant"]]}, "indexentries": {"configuration (class in inferno)": [[6, "inferno.Configuration"]], "_asadict_() (configuration method)": [[6, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[7, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[8, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[8, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[8, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[8, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[8, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[8, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[8, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[8, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[8, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[8, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[8, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[8, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[8, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[9, "inferno.Hook"]], "deregister() (hook method)": [[9, "inferno.Hook.deregister"]], "evalexec (hook property)": [[9, "inferno.Hook.evalexec"]], "register() (hook method)": [[9, "inferno.Hook.register"]], "registered (hook property)": [[9, "inferno.Hook.registered"]], "trainexec (hook property)": [[9, "inferno.Hook.trainexec"]], "interpolation (class in inferno)": [[10, "inferno.Interpolation"]], "module (class in inferno)": [[11, "inferno.Module"]], "get_extra() (module method)": [[11, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[11, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[11, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[11, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[12, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[12, "inferno.RemoteHook.add_inner"]], "evalexec_inner (remotehook property)": [[12, "inferno.RemoteHook.evalexec_inner"]], "inner (remotehook property)": [[12, "inferno.RemoteHook.inner"]], "innerargs() (remotehook method)": [[12, "inferno.RemoteHook.innerargs"]], "innerhook() (remotehook method)": [[12, "inferno.RemoteHook.innerhook"]], "innerkwargs() (remotehook method)": [[12, "inferno.RemoteHook.innerkwargs"]], "remove_inner() (remotehook method)": [[12, "inferno.RemoteHook.remove_inner"]], "run() (remotehook method)": [[12, "inferno.RemoteHook.run"]], "trainexec_inner (remotehook property)": [[12, "inferno.RemoteHook.trainexec_inner"]], "statehook (class in inferno)": [[13, "inferno.StateHook"]], "hook() (statehook method)": [[13, "inferno.StateHook.hook"]], "module (statehook property)": [[13, "inferno.StateHook.module"]], "register() (statehook method)": [[13, "inferno.StateHook.register"]], "run() (statehook method)": [[13, "inferno.StateHook.run"]], "empty() (in module inferno)": [[14, "inferno.empty"]], "exp() (in module inferno)": [[15, "inferno.exp"]], "full() (in module inferno)": [[16, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[17, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[18, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[19, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[20, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[21, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[22, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[22, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[22, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[23, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[23, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[23, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[23, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[24, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[24, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[24, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[24, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[24, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[25, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[25, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[25, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[25, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[25, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[25, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[26, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[26, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[26, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[26, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[26, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[27, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[27, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[27, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[27, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[27, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[27, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[27, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[28, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[29, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[30, "inferno.learn.functional.hard_upper_bounding"]], "mult_lower_bounding() (in module inferno.learn.functional)": [[31, "inferno.learn.functional.mult_lower_bounding"]], "mult_upper_bounding() (in module inferno.learn.functional)": [[32, "inferno.learn.functional.mult_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[33, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[34, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[35, "inferno.neural.ALIF"]], "adaptation (alif property)": [[35, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[35, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[35, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[35, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[35, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[35, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[35, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[35, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[36, "inferno.neural.AdEx"]], "clear() (adex method)": [[36, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[36, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[36, "inferno.neural.AdEx.forward"]], "clamping (class in inferno.neural)": [[37, "inferno.neural.Clamping"]], "hook() (clamping method)": [[37, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[38, "inferno.neural.Connection"]], "bias (connection property)": [[38, "inferno.neural.Connection.bias"]], "biased (connection property)": [[38, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[38, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[38, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[38, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[38, "inferno.neural.Connection.clear"]], "delay (connection property)": [[38, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[38, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[38, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[38, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[38, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[38, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[38, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[38, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[38, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[38, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[38, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[38, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[38, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[38, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[38, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[38, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[38, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[39, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[39, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[39, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[39, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[39, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[39, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[39, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[39, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[39, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[39, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[39, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[39, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[39, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[39, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[39, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[39, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[39, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[39, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[39, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[39, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[39, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[39, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[39, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[40, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[40, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[40, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[40, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[41, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[41, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[41, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[41, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[42, "inferno.neural.EIF"]], "clear() (eif method)": [[42, "inferno.neural.EIF.clear"]], "dt (eif property)": [[42, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[42, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[43, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[43, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[43, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[43, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[43, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[43, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[43, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[43, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[44, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[44, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[44, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[44, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[44, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[44, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[44, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[44, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[44, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[45, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[45, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[45, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[45, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[45, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[46, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[46, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[46, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[46, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[47, "inferno.neural.LIF"]], "bsize (lif property)": [[47, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[47, "inferno.neural.LIF.clear"]], "dt (lif property)": [[47, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[47, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[47, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[47, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[47, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[48, "inferno.neural.Layer"]], "clear() (layer method)": [[48, "inferno.neural.Layer.clear"]], "connection (layer property)": [[48, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[48, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[48, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[48, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[49, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[49, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[49, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[49, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[49, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[49, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[49, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[49, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[49, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[49, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[49, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[49, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[49, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[49, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[49, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[49, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[49, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[49, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[49, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[49, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[49, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[49, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[49, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[50, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[50, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[50, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[50, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[50, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[50, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[50, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[50, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[50, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[50, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[50, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[50, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[50, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[50, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[50, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[50, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[50, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[50, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[50, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[50, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[50, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[50, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[50, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[51, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[51, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[51, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[51, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[51, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[51, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[51, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[51, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[51, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[51, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[51, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[51, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[51, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[51, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[51, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[51, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[51, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[51, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[51, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[51, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[51, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[51, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[51, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[52, "inferno.neural.Neuron"]], "bsize (neuron property)": [[52, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[52, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[52, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[52, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[52, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[52, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[52, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[52, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[53, "inferno.neural.Normalization"]], "hook() (normalization method)": [[53, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[54, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[54, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[54, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[55, "inferno.neural.QIF"]], "clear() (qif method)": [[55, "inferno.neural.QIF.clear"]], "dt (qif property)": [[55, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[55, "inferno.neural.QIF.forward"]], "remoteclamping (class in inferno.neural)": [[56, "inferno.neural.RemoteClamping"]], "add_inner() (remoteclamping method)": [[56, "inferno.neural.RemoteClamping.add_inner"]], "innerhook() (remoteclamping method)": [[56, "inferno.neural.RemoteClamping.innerhook"]], "remove_inner() (remoteclamping method)": [[56, "inferno.neural.RemoteClamping.remove_inner"]], "remotenormalization (class in inferno.neural)": [[57, "inferno.neural.RemoteNormalization"]], "add_inner() (remotenormalization method)": [[57, "inferno.neural.RemoteNormalization.add_inner"]], "innerhook() (remotenormalization method)": [[57, "inferno.neural.RemoteNormalization.innerhook"]], "remove_inner() (remotenormalization method)": [[57, "inferno.neural.RemoteNormalization.remove_inner"]], "synapse (class in inferno.neural)": [[58, "inferno.neural.Synapse"]], "clear() (synapse method)": [[58, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[58, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[58, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[58, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[58, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[58, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[58, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[58, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[58, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[59, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[60, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[60, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[61, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[61, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[62, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[62, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[78, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[79, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[80, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[81, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[81, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[82, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[82, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[82, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[82, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[82, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[83, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[83, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[84, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[84, "inferno.neural.neurons.mixins.CurrentMixin.current"], [89, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[85, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[85, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[86, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[86, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[87, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[87, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[88, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[88, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[89, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[90, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[90, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[90, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[91, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[92, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[92, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[93, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[93, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[94, "inferno.normal"]], "normalize() (in module inferno)": [[95, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[96, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[96, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[96, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[96, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[96, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[97, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[97, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[97, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[97, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[98, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[98, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[98, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[98, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[99, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[99, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[99, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[99, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[99, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[99, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[99, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[99, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[99, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[99, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[100, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[100, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[100, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[100, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[101, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[102, "inferno.observe.Monitor"]], "clear() (monitor method)": [[102, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[102, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[102, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[102, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[102, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[103, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[103, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[103, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[103, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[103, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[104, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[105, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[105, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[105, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[105, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[106, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[107, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[108, "inferno.observe.Reducer"]], "clear() (reducer method)": [[108, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[108, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[108, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[108, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[108, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[108, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[109, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[109, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[109, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[109, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[109, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[110, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[110, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[110, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[110, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[110, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[111, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[112, "inferno.ones"]], "rescale() (in module inferno)": [[113, "inferno.rescale"]], "scalar() (in module inferno)": [[114, "inferno.scalar"]], "simple_exponential_smoothing() (in module inferno)": [[115, "inferno.simple_exponential_smoothing"]], "sqrt() (in module inferno)": [[116, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[117, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[117, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[117, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[117, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[117, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[117, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[117, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[117, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[117, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[117, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[117, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[118, "inferno.stats.Normal"]], "cdf() (normal class method)": [[118, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[118, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[118, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[118, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[118, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[118, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[118, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[118, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[118, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[118, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[119, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[119, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[119, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[119, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[119, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[119, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[119, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[119, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[119, "inferno.stats.Poisson.variance"]], "tensorize() (in module inferno)": [[120, "inferno.tensorize"]], "manytomany (class in inferno.typing)": [[121, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[122, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[123, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[124, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[125, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[126, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[127, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[128, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[129, "inferno.uniform"]], "zeros() (in module inferno)": [[130, "inferno.zeros"]], "inferno.learn": [[133, "module-inferno.learn"]], "module": [[133, "module-inferno.learn"], [134, "module-inferno.learn.functional"], [135, "module-inferno.neural"], [136, "module-inferno.neural.functional"], [138, "module-inferno.stats"]], "inferno.learn.functional": [[134, "module-inferno.learn.functional"]], "inferno.neural": [[135, "module-inferno.neural"]], "inferno.neural.functional": [[136, "module-inferno.neural.functional"]], "inferno.stats": [[138, "module-inferno.stats"]]}})