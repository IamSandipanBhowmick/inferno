Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/bounding", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.StateHook", "reference/generated/inferno.bounding.HalfBounding", "reference/generated/inferno.bounding.lower_multiplicative_dependence", "reference/generated/inferno.bounding.lower_power_dependence", "reference/generated/inferno.bounding.lower_sharp_dependence", "reference/generated/inferno.bounding.upper_multiplicative_dependence", "reference/generated/inferno.bounding.upper_power_dependence", "reference/generated/inferno.bounding.upper_sharp_dependence", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.infernotypes.ManyToMany", "reference/generated/inferno.infernotypes.ManyToManyMethod", "reference/generated/inferno.infernotypes.ManyToOne", "reference/generated/inferno.infernotypes.ManyToOneMethod", "reference/generated/inferno.infernotypes.OneToMany", "reference/generated/inferno.infernotypes.OneToManyMethod", "reference/generated/inferno.infernotypes.OneToOne", "reference/generated/inferno.infernotypes.OneToOneMethod", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.mult_lower_bounding", "reference/generated/inferno.learn.functional.mult_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Trainable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.ManagedMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.tensorize", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/infernotypes", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/bounding.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.bounding.HalfBounding.rst", "reference/generated/inferno.bounding.lower_multiplicative_dependence.rst", "reference/generated/inferno.bounding.lower_power_dependence.rst", "reference/generated/inferno.bounding.lower_sharp_dependence.rst", "reference/generated/inferno.bounding.upper_multiplicative_dependence.rst", "reference/generated/inferno.bounding.upper_power_dependence.rst", "reference/generated/inferno.bounding.upper_sharp_dependence.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.infernotypes.ManyToMany.rst", "reference/generated/inferno.infernotypes.ManyToManyMethod.rst", "reference/generated/inferno.infernotypes.ManyToOne.rst", "reference/generated/inferno.infernotypes.ManyToOneMethod.rst", "reference/generated/inferno.infernotypes.OneToMany.rst", "reference/generated/inferno.infernotypes.OneToManyMethod.rst", "reference/generated/inferno.infernotypes.OneToOne.rst", "reference/generated/inferno.infernotypes.OneToOneMethod.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.mult_lower_bounding.rst", "reference/generated/inferno.learn.functional.mult_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Trainable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.ManagedMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.tensorize.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/infernotypes.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "inferno.bounding", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "StateHook", "HalfBounding", "lower_multiplicative_dependence", "lower_power_dependence", "lower_sharp_dependence", "upper_multiplicative_dependence", "upper_power_dependence", "upper_sharp_dependence", "empty", "exp", "full", "holt_linear_smoothing", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "mult_lower_bounding", "mult_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Biclique", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Trainable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "ManagedMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "simple_exponential_smoothing", "sqrt", "LogNormal", "Normal", "Poisson", "tensorize", "uniform", "zeros", "API Reference", "inferno", "inferno.infernotypes", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 116, 150, 154, 155], "provid": [0, 6, 9, 10, 11, 13, 42, 51, 71, 75, 131], "two": [0, 3, 7, 8, 10, 51, 53, 54, 74, 153, 155], "main": [0, 71], "wai": [0, 2, 11, 74], "interact": [0, 12], "through": [0, 3, 53, 54, 64, 65, 66, 75, 97, 98, 157], "its": [0, 2, 6, 7, 8, 11, 37, 51, 53, 60, 63, 74, 84, 85, 113, 155, 157], "interfac": 0, "The": [0, 2, 3, 7, 8, 12, 37, 38, 51, 54, 56, 63, 69, 71, 74, 75, 82, 83, 84, 85, 87, 88, 90, 92, 104, 108, 113, 115, 116, 118, 122, 127, 128, 129, 135, 137, 152, 153, 155], "latter": [0, 153, 155], "can": [0, 2, 3, 6, 7, 9, 11, 36, 39, 40, 41, 49, 50, 59, 61, 63, 74, 75, 99, 113, 118, 119, 120, 122, 124, 125, 129, 154, 155], "distinguish": 0, "have": [0, 3, 8, 37, 40, 41, 54, 63, 64, 65, 74, 75, 90, 92, 115, 116, 127, 128], "modul": [0, 7, 8, 9, 12, 25, 27, 29, 31, 37, 38, 51, 52, 53, 60, 63, 67, 68, 69, 71, 74, 75, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 118, 119, 120, 122, 124, 125, 129, 150], "name": [0, 6, 7, 8, 11, 37, 39, 51, 52, 63, 68, 71, 74, 102, 104, 106, 108, 135, 136, 137], "which": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 21, 32, 33, 34, 35, 37, 38, 39, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 134, 137, 139, 152, 153, 154, 155, 157], "end": [0, 2, 16, 19, 23, 34, 36, 39, 43, 44, 49, 50, 54, 55, 56, 58, 59, 61, 62, 74, 75, 89, 90, 91, 92, 102, 112, 114, 121, 127, 128, 133, 152, 153, 154, 155, 157], "In": [0, 2, 8, 11, 60, 69, 74, 116, 154, 157], "gener": [0, 2, 3, 7, 37, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 79, 80, 81, 84, 85, 86, 87, 88, 95, 96, 102, 110, 135, 136, 137, 139, 150, 153, 155], "i": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 36, 37, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 106, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 135, 136, 137, 138, 152, 153, 154, 155, 157], "great": 0, "get": [0, 37, 60, 84, 85], "off": [0, 102], "ground": [0, 38], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 11, 74], "tensor": [0, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140], "shape": [0, 7, 20, 22, 49, 50, 55, 56, 57, 58, 59, 61, 62, 67, 70, 72, 73, 98, 99, 110, 130, 132, 139, 140], "compat": [0, 7, 11], "automat": [0, 11, 38, 63, 79, 80, 81], "reduct": [0, 75], "batch": [0, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 79, 80, 81, 84, 85, 86, 87, 88, 97, 98, 99, 106, 116], "axi": 0, "done": [0, 74, 79, 80, 81], "you": [0, 11], "meanwhil": [0, 3], "more": [0, 3, 39, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 75, 79, 80, 81, 124, 125, 150, 153], "control": [0, 6, 59, 61, 70, 94, 96, 152, 155], "over": [0, 2, 8, 38, 39, 49, 50, 54, 59, 64, 65, 66, 99, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 155, 157], "flow": 0, "logic": [0, 8, 51, 63, 71, 75, 90, 92, 95, 96, 116], "allow": [0, 60, 75, 84, 85, 89, 91, 112, 116, 121, 153], "greater": [0, 41, 86], "custom": [0, 39, 49, 50, 59, 61, 99, 118, 122], "base": [0, 6, 7, 8, 9, 10, 11, 12, 13, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 139, 140, 150], "class": [0, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137], "extend": [0, 11, 110, 139], "implement": [0, 2, 8, 11, 12, 37, 41, 49, 50, 51, 53, 57, 61, 63, 67, 70, 71, 72, 74, 79, 81, 94, 95, 96, 116, 117, 118, 119, 122, 150, 152, 153, 154], "subclass": [0, 6, 9, 12, 37, 41, 53, 54, 63, 64, 65, 66, 67, 72, 74, 117, 119], "us": [0, 2, 3, 6, 7, 8, 9, 10, 11, 13, 36, 37, 38, 39, 40, 42, 49, 50, 51, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 70, 71, 73, 74, 75, 79, 81, 84, 90, 92, 93, 94, 106, 116, 118, 120, 122, 135, 136, 137, 138, 154, 155], "from": [0, 2, 7, 8, 9, 11, 20, 22, 32, 37, 38, 39, 51, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 84, 85, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 121, 122, 123, 127, 128, 130, 132, 135, 136, 137, 139, 140, 155, 157], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 36, 37, 39, 40, 41, 49, 50, 51, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 116, 118, 119, 120, 122, 124, 125, 129, 137, 139, 152, 153, 154, 155, 157], "certain": 0, "case": [0, 2, 16, 19, 34, 36, 39, 43, 44, 49, 55, 56, 58, 59, 62, 68, 89, 90, 91, 92, 102, 111, 112, 121, 127, 128, 152, 157], "mai": [0, 2, 7, 10, 11, 39, 51, 54, 74], "faster": [0, 60, 69], "less": [0, 41, 84, 85], "type": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "check": [0, 7, 74, 75, 90, 92], "need": [0, 11, 60, 84, 85], "paramet": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 152, 153, 155], "remain": [0, 49, 58, 59, 62, 67, 79, 80, 81, 95, 96, 101, 102, 114, 153], "same": [0, 2, 6, 8, 11, 24, 25, 26, 27, 28, 29, 30, 31, 49, 54, 59, 63, 74, 99, 112, 114, 115, 116, 119, 121, 123, 127, 128, 155], "multipl": [0, 2, 3, 14, 17, 45, 46, 54, 59, 63, 74, 75, 96, 116, 127, 128, 152], "call": [0, 8, 9, 11, 12, 37, 52, 53, 54, 63, 64, 65, 66, 68, 71, 74, 75, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 118, 119, 120, 122, 124, 125, 129, 137, 154, 155], "pre": [0, 39, 53, 54, 64, 65, 66, 152], "comput": [0, 2, 7, 14, 15, 16, 17, 18, 19, 38, 53, 54, 60, 63, 64, 65, 66, 69, 71, 131, 135, 136, 137], "initi": [0, 37, 54, 64, 65, 66, 67, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 121, 123, 126, 127, 128], "unlik": [0, 12], "artifici": 0, "neuron": [0, 38, 49, 50, 51, 53, 57, 58, 59, 61, 62, 63, 70, 71, 74, 79, 80, 81, 93, 94, 95, 96, 99, 100, 101, 102, 103, 152, 157], "typic": [0, 11, 153, 155], "found": [0, 11], "ann": 0, "snn": 0, "ar": [0, 2, 6, 7, 8, 37, 38, 39, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 79, 80, 81, 84, 85, 86, 87, 88, 90, 92, 95, 96, 102, 104, 106, 108, 116, 117, 118, 131, 135, 136, 137, 138, 150, 152, 153, 154, 155], "fundament": 0, "state": [0, 8, 11, 12, 23, 32, 33, 34, 35, 37, 38, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 89, 90, 91, 92, 95, 96, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 133], "biolog": [0, 2, 3, 154], "electr": [0, 153, 154, 155, 157], "potenti": [0, 2, 3, 17, 18, 19, 39, 44, 46, 48, 49, 50, 57, 58, 59, 61, 62, 67, 70, 74, 75, 79, 80, 81, 93, 94, 95, 96, 102, 152, 153, 154, 155, 157], "differ": [0, 8, 38, 39, 49, 50, 55, 56, 57, 59, 61, 62, 70, 75, 79, 81, 89, 91, 93, 94, 96, 106, 112, 113, 116, 121, 153, 154, 155], "between": [0, 8, 10, 32, 33, 34, 35, 51, 53, 55, 56, 60, 63, 69, 71, 84, 85, 86, 87, 88, 112, 114, 115, 116, 117, 121, 123, 127, 128, 152, 155], "interior": 0, "exterior": 0, "cell": [0, 49, 50, 57, 59, 61, 62, 70, 93, 94, 153, 154, 155], "drive": 0, "forc": [0, 12], "behind": [0, 2], "action": [0, 2, 3, 49, 50, 57, 58, 59, 61, 62, 67, 70, 74, 79, 80, 81, 95, 96, 102, 153, 154, 155, 157], "simplifi": [0, 157], "model": [0, 2, 3, 36, 40, 41, 43, 44, 45, 46, 47, 48, 74, 153], "when": [0, 2, 6, 8, 9, 11, 12, 38, 39, 49, 50, 51, 52, 53, 54, 59, 61, 64, 65, 66, 68, 71, 74, 79, 80, 81, 95, 96, 99, 106, 112, 113, 116, 118, 119, 120, 121, 122, 124, 125, 129, 138, 152, 153, 154], "": [0, 2, 7, 9, 11, 12, 23, 32, 33, 34, 35, 37, 50, 52, 57, 60, 61, 68, 69, 70, 71, 74, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 111, 113, 114, 116, 119, 120, 126, 127, 128, 129, 131, 133, 153, 154, 155], "import": [0, 2, 11, 51], "treat": [0, 2, 39, 55, 56, 106], "variabl": [0, 2, 11], "separ": [0, 54, 60, 69], "each": [0, 2, 7, 8, 9, 38, 51, 55, 56, 60, 63, 69, 116, 153, 154, 155, 157], "sampl": [0, 8, 10, 32, 33, 34, 35, 38, 60, 69, 84, 85, 87, 88, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 135, 136, 137, 139], "present": [0, 7, 8, 38, 39, 40, 41, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 76, 77, 78, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 116, 153], "dure": [0, 3, 49, 58, 59, 62, 67, 102], "fix": [0, 3, 49, 50, 51, 57, 58, 59, 61, 62, 70, 71, 137, 155], "hyperparamet": [0, 2, 150], "do": [0, 97, 98], "duplic": [0, 74], "instead": [0, 2, 154], "broadcast": [0, 53, 56, 79, 80, 81, 82, 83], "some": [0, 2, 8, 10, 75, 90, 92, 114], "includ": [0, 8, 10, 11, 13, 39, 42, 49, 50, 53, 54, 59, 61, 63, 64, 65, 66, 69, 75, 87, 88, 98, 99, 116, 124, 125, 150], "adapt": [0, 3, 49, 50, 59, 61, 79, 80, 81, 82, 83, 89, 90, 91, 92, 99, 150], "behavior": [0, 6, 38, 39, 49, 50, 59, 60, 61, 74, 75, 84, 85, 99, 150, 153, 154], "input": [0, 2, 7, 9, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 79, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 120, 121, 123, 126, 127, 128, 130, 132, 134, 138, 139, 140, 152, 153, 154, 155, 157], "A": [0, 2, 39, 49, 50, 59, 61, 74, 99, 137], "common": [0, 2, 55, 56, 67, 72, 73, 113, 119, 129], "exampl": [0, 51, 74, 75, 82, 83, 155], "an": [0, 2, 3, 7, 8, 9, 10, 11, 12, 14, 17, 20, 24, 25, 26, 27, 28, 29, 38, 39, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 94, 95, 96, 98, 99, 102, 106, 112, 113, 115, 117, 121, 129, 137, 153, 154, 155, 157], "threshold": [0, 49, 50, 59, 61, 80, 81, 83, 95, 96, 150, 154, 155], "where": [0, 2, 7, 8, 16, 19, 36, 38, 39, 40, 41, 44, 49, 51, 53, 54, 58, 59, 60, 62, 63, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 102, 106, 114, 116, 152, 153, 154, 155, 157], "defin": [0, 2, 6, 40, 41, 74, 154], "minimum": [0, 7, 13, 40, 41, 60, 84, 85, 131], "membran": [0, 3, 49, 50, 57, 58, 59, 61, 62, 67, 70, 74, 79, 80, 81, 93, 94, 95, 96, 99, 100, 103, 153, 154, 155], "spike": [0, 2, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 74, 79, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 102, 104, 106, 107, 108, 109, 150, 154, 155, 157], "These": [0, 38, 51, 56, 153, 154], "should": [0, 7, 8, 9, 11, 12, 37, 38, 39, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 79, 80, 81, 84, 85, 99, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129], "share": [0, 7, 74], "across": [0, 49, 50, 57, 59, 61, 62, 64, 65, 66, 70, 74, 93, 94, 153, 154, 155], "all": [0, 2, 37, 51, 63, 64, 66, 68, 74, 84, 85, 86, 87, 88, 89, 90, 111, 112, 116, 120, 126, 127, 131, 138, 154], "contribut": [0, 2, 127, 128], "portion": 0, "updat": [0, 2, 8, 13, 14, 15, 16, 17, 18, 19, 23, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 61, 63, 71, 74, 79, 80, 81, 89, 90, 91, 92, 95, 96, 99, 118, 122, 152], "also": [0, 3, 7, 8, 14, 15, 16, 17, 18, 19, 39, 49, 50, 53, 54, 59, 61, 63, 64, 65, 66, 71, 74, 75, 86, 90, 92, 99, 154, 155], "appli": [0, 3, 7, 12, 13, 14, 15, 16, 17, 18, 19, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 63, 64, 65, 66, 68, 71, 75, 79, 80, 81, 82, 83, 116, 124, 125, 152, 153, 154, 155, 157], "weight": [0, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 53, 54, 64, 65, 66, 75, 76, 77, 78, 150], "bias": [0, 53, 54, 64, 65, 66, 75, 76, 77], "handl": [0, 11], "either": [0, 2, 8, 38, 51, 63, 76, 81, 106, 118, 122, 153], "reduc": [0, 2, 38, 39, 49, 50, 51, 59, 75, 79, 80, 81, 99, 113, 116, 117, 118, 119, 120, 122, 124, 125, 129], "output": [0, 9, 12, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 51, 53, 54, 60, 63, 64, 65, 66, 69, 71, 74, 84, 85, 86, 87, 88, 90, 92, 95, 96, 110, 115, 120, 122, 124, 125, 127, 128, 130, 132, 139, 140, 152, 155], "along": [0, 51, 54, 68, 75, 79, 80, 81, 98, 111, 116, 131], "dimens": [0, 7, 8, 38, 39, 49, 50, 51, 53, 54, 59, 60, 61, 64, 65, 66, 68, 69, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 111, 116, 131], "former": [0, 153], "effici": 0, "make": [0, 7], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 6, 150], "perform": [0, 2, 9, 23, 38, 52, 54, 68, 75, 89, 90, 91, 92, 116, 117, 133, 137], "But": 0, "might": 0, "necessari": 0, "hand": [0, 116], "detail": [0, 39, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 70, 79, 80, 81, 150], "inform": [0, 9, 67, 74, 124, 125, 153], "process": [0, 37, 39, 51, 60, 63, 84, 85], "arxiv": [0, 153], "1909": 0, "02549": 0, "becaus": [0, 8, 74], "unit": [0, 8, 112, 114, 115, 116, 121, 123, 127, 128, 157], "relev": [0, 12], "match": [0, 2, 7, 64, 65, 66, 89, 90, 91, 92, 112, 115, 121, 127, 128], "theoret": 0, "continu": [0, 135], "descript": [0, 150], "specifi": [0, 7, 8, 9, 20, 22, 37, 38, 40, 68, 71, 72, 110, 111, 113, 118, 122, 129, 130, 132, 139, 140, 152], "length": [0, 2, 8, 10, 32, 33, 34, 35, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 79, 80, 81, 84, 85, 86, 87, 88, 93, 94, 95, 96, 102, 112, 114, 115, 116, 117, 121, 123, 127, 128, 152, 153, 154, 155, 157], "given": [0, 11, 36, 37, 38, 39, 40, 51, 63, 69, 72, 75, 87, 88, 95, 96, 116, 117, 120, 126, 135, 136, 137, 150, 153, 154, 157], "millisecond": [0, 39, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 72, 101, 112, 116, 121, 127, 128], "On": 0, "step": [0, 3, 8, 23, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 75, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 112, 114, 115, 116, 117, 121, 123, 127, 128, 133, 152, 153, 154, 155, 157], "amount": [0, 10, 38, 49, 50, 54, 59, 61, 79, 80, 137, 152], "ha": [0, 6, 8, 11, 36, 37, 40, 41, 49, 53, 54, 59, 64, 65, 66, 71, 75, 99, 102, 104, 106, 108, 113, 116, 129, 155, 157], "elaps": 0, "subtract": [0, 75], "inclus": [0, 52], "bound": [0, 13, 14, 15, 16, 17, 18, 19, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 56, 75, 81, 106, 150], "zero": [0, 54, 64, 65, 66, 68, 111, 112, 114, 116, 121, 123, 127, 128, 137], "equal": [0, 2, 51, 84, 85], "consid": [0, 2, 23, 89, 90, 91, 92, 112, 115, 116, 121, 127, 128, 133, 137, 154], "out": [0, 54, 55, 56, 106, 152], "therefor": [0, 7, 8, 116], "evenli": 0, "divis": 0, "simualt": [0, 49, 50, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 8, 33, 49, 75, 117], "integ": [0, 3, 7, 8, 75], "phenomenon": 2, "rate": [2, 38, 39, 41, 42, 59, 60, 69, 81, 84, 85, 87, 88, 137, 152, 153, 154, 155], "quantiti": 2, "decreas": [2, 153], "proport": [2, 38, 152, 153, 154], "current": [2, 3, 7, 8, 23, 37, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 74, 75, 79, 82, 89, 90, 91, 92, 93, 94, 95, 96, 100, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 133, 150, 152, 154, 155], "valu": [2, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 32, 38, 39, 40, 41, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 86, 89, 90, 91, 92, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 121, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 153, 154, 155, 157], "It": [2, 8, 63, 75, 155], "describ": [2, 150], "differenti": 2, "equat": 2, "tau": [2, 32, 39, 89, 90, 91, 92, 112, 114, 121, 127, 128], "frac": [2, 32, 33, 38, 49, 50, 54, 57, 59, 61, 62, 70, 79, 80, 84, 85, 89, 90, 91, 92, 94, 114, 135, 136, 137, 152, 153, 154, 155], "dn": 2, "dt": [2, 8, 39, 49, 50, 53, 54, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 112, 116, 121, 127, 128, 152, 153, 154, 155], "n": [2, 60, 64, 65, 66, 82, 83, 84, 85, 135, 136, 137], "solut": [2, 152, 153, 154], "t": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 75, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 102, 112, 114, 121, 127, 128, 133, 152, 153, 154, 155, 157], "n_0": [2, 8, 38, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 106, 116], "e": [2, 6, 11, 21, 41, 42, 63, 69, 86, 87, 88, 135, 136, 137, 155], "0": [2, 8, 16, 19, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 79, 80, 81, 97, 98, 102, 111, 112, 114, 115, 121, 123, 127, 128, 140, 152, 155, 157], "oft": 2, "neural": 2, "network": 2, "simul": [2, 3, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 73, 79, 80, 81, 93, 94, 95, 96, 112, 116, 121, 127, 128, 153, 154, 155, 157], "involv": 2, "discret": [2, 8, 112, 116, 121, 127, 128, 137, 155, 157], "timestep": [2, 49], "those": [2, 6, 49, 53, 54, 64, 65, 66], "thei": [2, 6, 74, 75, 86], "often": [2, 152, 155], "appear": 2, "form": [2, 9, 11], "exp": [2, 32, 38, 39, 49, 50, 57, 59, 62, 80, 89, 90, 91, 92, 93, 112, 114, 121, 127, 128, 135, 136, 152, 153, 154, 155], "left": [2, 32, 38, 49, 50, 54, 57, 59, 61, 62, 66, 70, 79, 80, 81, 89, 90, 91, 92, 93, 94, 96, 114, 116, 135, 136, 152, 153, 154, 155], "right": [2, 32, 38, 49, 50, 54, 57, 59, 61, 62, 66, 70, 79, 80, 81, 89, 90, 91, 92, 93, 94, 96, 114, 116, 135, 136, 152, 153, 154, 155], "underli": [2, 8, 54, 63, 71, 113, 114, 116, 118, 119, 120, 122, 124, 125, 129, 154, 155], "wa": [2, 10, 36, 37, 40, 49, 50, 57, 59, 61, 62, 70, 79, 80, 81], "solv": 2, "analyt": 2, "approxim": [2, 50, 57, 61, 70, 79, 81, 86, 94, 153, 155], "via": [2, 6, 63], "euler": [2, 50, 57, 61, 70, 79, 81, 94], "method": [2, 6, 8, 11, 37, 39, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 74, 79, 81, 84, 85, 86, 94, 104, 106, 108, 116, 117, 138], "both": [2, 74], "repres": [2, 6, 7, 51, 53, 56, 67, 72, 98, 102, 155], "select": [2, 8, 34, 35, 72, 106, 116, 118, 122], "term": [2, 75, 81, 152, 154], "long": [2, 152], "live": 2, "correspond": [2, 11, 40, 49, 50, 51, 57, 58, 59, 61, 62, 63, 67, 70, 79, 80, 81, 95, 96, 102, 135, 136], "under": [2, 8, 152, 155], "relat": [2, 116, 150, 155], "ne": 2, "k": [2, 25, 27, 29, 31, 38, 79, 80, 81, 82, 83, 90, 92, 127, 128, 137], "That": [2, 152], "after": [2, 8, 9, 10, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70, 72, 75, 76, 77, 78, 79, 80, 81, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 118, 119, 120, 122, 124, 125, 129, 131, 153, 154, 155], "repeat": 2, "applic": [2, 112, 114, 115, 121, 123, 127, 128], "1": [2, 8, 14, 16, 17, 19, 23, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 81, 82, 83, 84, 85, 86, 102, 111, 114, 130, 133, 135, 136, 137, 150, 152, 153, 155, 157], "start": [2, 74, 155], "To": [2, 12, 20, 22, 60, 84, 85, 110, 130, 139, 140, 153, 154], "outsid": [2, 63, 116], "notion": 2, "life": 2, "we": [2, 11], "ln": 2, "b": [2, 23, 38, 53, 54, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 106, 113, 129], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 137], "sometim": [2, 14, 15, 16, 17, 18, 19], "lambda": [2, 38, 137, 154], "context": [2, 153], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 8, 112, 114, 115, 116, 117, 121, 123, 127, 128], "activ": [2, 7], "formal": 2, "sum": [2, 38, 39, 49, 50, 51, 59, 61, 75, 99], "previou": [2, 8, 32, 33, 35, 38, 55, 56, 106, 117, 123], "occur": [2, 12, 38, 39, 52, 55, 56, 68, 106, 137, 153, 154, 155, 157], "howev": 2, "purpos": [2, 74, 127, 128], "comparison": 2, "grow": 2, "complex": [2, 21, 22, 23, 68, 89, 90, 91, 92, 111, 112, 121, 127, 128, 132, 133, 134], "quadrat": [2, 61, 70, 94, 150], "respect": [2, 12, 39, 51, 54, 63, 64, 65, 66, 71, 76, 119, 120], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 37, 38, 74, 75, 90, 92, 154], "than": [2, 37, 38, 41, 74, 75, 84, 85, 86, 90, 92, 154, 155], "everi": [2, 7, 8, 60, 63, 84, 85], "prior": [2, 8, 10, 12, 32, 33, 34, 35, 49, 58, 59, 62, 67, 89, 90, 102, 106, 112, 114, 115, 116, 117, 121, 123, 127, 128], "leav": [2, 154], "sort": [2, 7], "simplest": 2, "dx": 2, "x": [2, 16, 19, 21, 36, 39, 43, 44, 61, 64, 65, 66, 89, 90, 91, 92, 112, 114, 121, 127, 128, 133, 134, 135, 136, 157], "sum_f": 2, "f": [2, 39, 49, 54, 58, 59, 60, 62, 69, 84, 85, 86, 89, 90, 91, 92, 102, 112, 121, 127, 128], "amplitud": [2, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 89, 90, 91, 92, 112, 121, 127, 128], "construct": [2, 20, 22, 51, 55, 56, 63, 71, 72, 73, 74, 110, 113, 118, 119, 120, 122, 124, 125, 129, 130, 139, 140], "evalu": [2, 9, 12, 49, 50, 59, 61], "otherwis": [2, 11, 34, 49, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 75, 89, 90, 91, 92, 102, 112, 118, 121, 122, 127, 128], "interpret": 2, "follow": [2, 3, 8, 9, 63, 69, 75, 87, 88, 106, 114, 116, 135, 136, 152, 154], "whenev": 2, "add": [2, 11, 37, 39, 51, 63, 71, 74, 75, 89, 90, 92, 112, 127], "four": [2, 8, 39], "variant": [2, 55, 56, 150], "discuss": 2, "below": [2, 153, 155], "featur": 2, "beyond": 2, "just": 2, "being": [2, 11, 13, 14, 15, 16, 17, 18, 19, 38, 42, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 84, 85, 86, 87, 88, 98, 113, 118, 119, 120, 122, 124, 125, 129, 152], "previous": [2, 12, 52, 68, 116], "come": 2, "fact": 2, "factor": [2, 23, 114, 133, 155], "x_": [2, 23, 39, 89, 90, 91, 92, 112, 114, 121, 127, 128, 133, 152], "begin": [2, 16, 19, 23, 34, 36, 39, 43, 44, 49, 50, 54, 55, 56, 58, 59, 61, 62, 89, 90, 91, 92, 102, 112, 114, 121, 127, 128, 133, 152, 153, 154, 155, 157], "x_t": [2, 89, 90, 91, 92, 112, 121, 127, 128], "lvert": [2, 89, 91, 112, 121], "f_": [2, 39, 49, 58, 59, 62, 89, 90, 91, 92, 102, 112, 121, 127, 128, 152], "rvert": [2, 89, 91, 112, 121], "leq": [2, 89, 91, 112, 121, 135, 136, 137], "epsilon": [2, 68, 89, 91, 111, 112, 121], "text": [2, 14, 15, 16, 17, 18, 19, 34, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 112, 121, 127, 128, 135, 136, 137, 152, 153, 154, 155, 157], "here": [2, 12, 74, 75, 150], "target": [2, 8, 11, 75, 89, 91, 112, 113, 118, 119, 120, 121, 122, 124, 125, 129, 135, 136], "permiss": 2, "error": [2, 11], "For": [2, 10, 39, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 63, 70, 74, 79, 80, 81, 82, 83, 112, 113, 114, 121, 127, 128, 129], "set": [2, 7, 8, 20, 22, 49, 50, 51, 54, 59, 60, 61, 63, 64, 65, 69, 75, 79, 80, 81, 84, 85, 89, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 121, 123, 127, 128, 130, 139, 140, 152, 154, 155], "unspecifi": [2, 7, 51, 138], "test": [2, 7, 90, 92, 112, 115, 121, 127, 128, 135, 136, 137], "wherea": 2, "chang": [2, 6, 11, 39, 53, 54, 64, 65, 66, 97, 98, 114, 152, 153, 157], "addit": [2, 37, 54, 59, 60, 64, 65, 66, 75, 84, 85, 90, 92, 96, 153, 154], "replac": [2, 55, 56, 106], "modifi": [2, 7, 9, 20, 22, 36, 40, 41, 63, 110, 113, 118, 119, 120, 122, 124, 125, 129, 130, 132, 139, 140], "onli": [2, 6, 7, 9, 11, 12, 52, 54, 55, 63, 68, 74, 116, 118], "most": [2, 8, 10, 32, 33, 34, 35, 39, 51, 53, 54, 60, 64, 65, 66, 75, 84, 85, 112, 114, 115, 116, 117, 121, 123, 127, 128, 152, 153], "recent": [2, 8, 10, 32, 33, 34, 35, 39, 53, 54, 64, 65, 66, 112, 114, 115, 116, 117, 121, 123, 127, 128, 152], "event": [2, 115, 137], "chosen": 2, "depend": [2, 14, 15, 16, 17, 18, 19, 36, 39, 40, 43, 44, 45, 46, 47, 48, 49, 53, 54, 64, 65, 66, 80, 81, 83, 97, 98, 122, 150, 154], "desir": [2, 68, 111, 135, 136], "properti": [2, 7, 8, 9, 12, 20, 22, 37, 38, 39, 40, 41, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 116, 120, 121, 127, 128, 130, 132, 135, 136, 137, 139, 140, 154], "formul": 2, "abov": [2, 50, 57, 153, 155], "ani": [2, 3, 6, 8, 9, 11, 12, 53, 54, 56, 63, 64, 65, 66, 71, 74, 75, 76, 77, 116, 117, 119, 120, 122, 124, 125, 138, 154, 155, 157], "exactli": 2, "toler": [2, 8, 89, 90, 91, 92, 106, 112, 116, 121], "meet": [2, 8], "criterion": [2, 115, 127, 128], "compon": [2, 75, 90, 92, 153, 154], "ad": [2, 7, 8, 37, 39, 54, 60, 63, 68, 74, 75, 76, 77, 78, 84, 85, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 116], "sf": [2, 90, 92, 127, 128], "hold": 2, "align": [2, 23, 49, 50, 54, 59, 61, 114, 133, 152, 153, 154, 155], "neq": [2, 39, 157], "int_": 2, "infti": [2, 49, 59, 83, 153, 154, 155], "theta": [2, 16, 19, 36, 43, 44, 49, 59, 95, 96, 152, 153, 154, 155], "neg": [2, 7, 75], "argument": [2, 7, 8, 9, 10, 12, 37, 38, 42, 51, 53, 54, 63, 64, 65, 66, 71, 74, 75, 116, 119, 120, 124, 125, 135, 136, 137], "posit": [2, 7, 8, 63, 75], "geq": [2, 16, 19, 36, 43, 44, 95, 96], "deriv": [2, 104, 106, 108, 135, 155], "d": [2, 8, 106, 116, 153, 154], "And": [2, 54, 63, 152], "integr": [2, 49, 50, 57, 58, 59, 62, 67, 70, 72, 90, 92, 93, 94, 150, 157], "kind": 3, "absolut": [3, 49, 50, 57, 58, 59, 61, 62, 70, 79, 80, 81, 89, 91, 93, 94, 95, 96, 102, 112, 121], "arp": [3, 49, 58, 59, 62, 102], "rel": [3, 10, 32, 33, 34, 35, 74, 112, 114, 115, 117, 121, 123, 127, 128, 135, 136], "rrp": 3, "cannot": [3, 7, 8, 11, 36, 40, 74, 97, 98, 153], "presynapt": [3, 39, 49, 50, 55, 56, 57, 58, 59, 61, 62, 70, 82, 93, 94, 95, 96, 152, 153, 154, 157], "doe": [3, 7, 74, 75, 104, 108, 137, 157], "affect": [3, 90, 92, 150], "depolar": [3, 155], "repolar": 3, "hyperpolar": 3, "mean": [3, 39, 49, 50, 51, 59, 75, 99, 113, 118, 119, 120, 122, 124, 125, 129, 135, 136, 137], "while": [3, 49, 50, 57, 58, 59, 61, 62, 70, 95, 96], "difficult": 3, "fire": [3, 49, 50, 57, 58, 59, 62, 70, 83, 150, 153], "imposs": 3, "time": [3, 8, 10, 12, 23, 32, 33, 34, 35, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 137, 150, 153, 154, 155, 157], "voltag": [3, 49, 50, 57, 58, 59, 61, 62, 67, 70, 74, 79, 80, 81, 83, 93, 94, 95, 96, 103, 150, 154, 155], "reset": [3, 8, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 75, 81, 95, 96, 116, 153, 154, 155], "determin": [3, 20, 22, 54, 64, 65, 66, 87, 110, 112, 121, 130, 132, 138, 139, 140], "strongli": 3, "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "map": [6, 116, 118, 122, 124, 125], "unpack": [6, 63, 118], "function": [6, 8, 9, 10, 11, 12, 13, 21, 39, 42, 49, 50, 51, 52, 55, 56, 59, 61, 68, 71, 72, 75, 79, 80, 81, 90, 92, 95, 96, 99, 106, 110, 113, 115, 116, 119, 120, 124, 125, 127, 128, 129, 134, 135, 136, 137, 139, 152, 157], "conjunct": [6, 74], "attr": [6, 52, 63, 68, 74, 113, 129], "librari": [6, 8], "wrap": [6, 63, 71, 74, 75], "_asadict_": 6, "dict": [6, 7, 9, 11, 51, 63, 71, 119, 120, 135, 136, 137], "str": [6, 7, 8, 9, 11, 37, 51, 52, 63, 67, 68, 71, 74, 113, 119, 120, 129, 135, 136, 137], "field": [6, 154, 155], "converet": 6, "dictionari": [6, 7, 11, 51, 63, 71], "flatten": 6, "nest": [6, 113, 129], "object": [6, 9, 10, 11, 12, 37, 63, 71, 73, 74, 75, 78, 97, 99, 100, 101, 103, 105, 106, 109], "own": [6, 75], "If": [6, 8, 9, 37, 38, 40, 41, 49, 50, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 76, 79, 80, 81, 84, 85, 99, 118, 122, 138], "conflict": 6, "one": [6, 9, 26, 27, 28, 29, 30, 31, 39, 49, 50, 59, 61, 63, 65, 66, 74, 99, 118, 152, 153], "preserv": [6, 49, 50, 59, 61, 116], "overridden": [6, 37, 75], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "packag": 6, "attribut": [6, 7, 8, 38, 52, 63, 68, 74, 98, 99, 102, 106, 113, 129, 155], "were": [6, 37, 38, 39, 51], "regist": [6, 7, 8, 9, 11, 12, 37, 52, 53, 54, 63, 64, 65, 68, 71, 76, 77, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 118, 119, 120, 122, 124, 125, 129], "constraint": [7, 8, 97, 98, 116], "tupl": [7, 20, 22, 23, 37, 38, 39, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 95, 96, 98, 99, 110, 111, 118, 124, 125, 130, 131, 135, 136, 138, 139, 140], "int": [7, 8, 20, 21, 22, 23, 38, 39, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 84, 85, 87, 88, 89, 90, 91, 92, 97, 98, 99, 110, 111, 112, 121, 127, 128, 130, 131, 132, 133, 134, 139, 140], "support": [7, 54, 55, 56, 64, 65, 66, 72, 73], "dimension": [7, 54], "constrain": [7, 8, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "buffer": [7, 8, 11, 97, 106], "dim": [7, 67, 68, 72, 73, 75, 97, 98, 111, 131], "size": [7, 8, 20, 22, 38, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 79, 80, 81, 84, 85, 86, 87, 88, 97, 98, 106, 110, 130, 139, 140], "rais": [7, 8, 9, 11, 12, 21, 36, 37, 40, 41, 51, 53, 63, 67, 71, 72, 74, 117, 119, 153], "valueerror": [7, 8, 41], "must": [7, 8, 9, 11, 12, 37, 40, 41, 51, 53, 54, 56, 63, 64, 65, 66, 67, 72, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 122, 127, 128], "number": [7, 8, 21, 24, 25, 26, 27, 28, 29, 38, 51, 53, 54, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 98, 106, 110, 116, 134, 135, 136, 137, 139], "element": [7, 8, 38, 51, 54, 63, 64, 65, 66, 68, 71, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 111, 112, 115, 121, 127, 128, 138], "runtimeerror": [7, 8, 9, 36, 40, 51, 63, 71, 74, 119], "2": [7, 54, 59, 135, 136, 137, 150, 155], "first": [7, 51, 55, 56, 63, 71, 82, 83, 84, 86, 87, 154], "second": [7, 51, 63, 71, 154], "assign": [7, 11, 38, 39, 40, 41, 49, 59, 66, 99], "invalid": [7, 11], "reconstrain": 7, "bool": [7, 8, 9, 12, 20, 22, 37, 38, 39, 41, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 84, 85, 89, 90, 91, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 139, 140], "torch": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "classmethod": [7, 55, 56, 72, 113, 119, 129, 135, 136, 137], "compatible_": 7, "compatible_lik": 7, "like": [7, 11, 20, 22, 39, 49, 50, 53, 54, 59, 61, 64, 65, 66, 72, 74, 75, 99, 110, 119, 130, 132, 139, 140, 150], "none": [7, 8, 9, 12, 20, 22, 23, 36, 37, 38, 39, 40, 41, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140], "option": [7, 8, 9, 12, 20, 22, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140], "default": [7, 8, 9, 12, 20, 22, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140], "insuffici": 7, "contain": [7, 11, 23, 74, 95, 96], "nonposit": 7, "compatibl": 7, "compatible_like_": 7, "against": 7, "result": [7, 8, 38, 51, 53, 54, 71, 74, 112, 114, 115, 116, 121, 123, 124, 125, 127, 128, 135, 136, 137], "low": 7, "high": 7, "increas": [7, 49, 50, 57, 59, 61, 70, 79, 80, 94, 153, 155], "order": [7, 11, 51, 68, 111, 116, 152], "constraints_repr": 7, "string": [7, 11, 51, 52, 68, 74], "represent": [7, 63], "underscor": 7, "deregister_constrain": [7, 8], "deregist": [7, 9, 37], "fulli": [7, 11, 52, 68], "qualifi": [7, 11, 52, 68], "mindim": 7, "requir": [7, 10, 20, 22, 36, 37, 39, 40, 41, 54, 74, 76, 77, 78, 90, 92, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 116, 130, 132, 139, 140], "static": 7, "mindims_": 7, "edit": 7, "exist": [7, 11, 37, 38, 49, 63, 74, 75, 116, 119], "reshap": [7, 51, 53, 54, 64, 65, 66], "accordingli": [7, 137], "remov": [7, 74], "new": [7, 8, 38, 39, 40, 41, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 72, 74, 76, 77, 78, 89, 90, 91, 92, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 112, 116, 121, 127, 128], "had": 7, "extern": [7, 63, 157], "longer": [7, 119], "incompat": [7, 8], "register_constrain": [7, 8], "attributeerror": [7, 8, 11], "step_tim": [8, 32, 33, 34, 35, 39, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 72, 73, 79, 80, 81, 84, 85, 86, 87, 88, 93, 94, 95, 96, 112, 114, 115, 116, 117, 121, 123, 126, 127, 128, 155], "float": [8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 111, 112, 114, 115, 116, 117, 121, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137], "history_len": [8, 112, 114, 115, 116, 117, 121, 123, 126, 127, 128], "dimensionalmodul": [8, 67, 97, 98, 100, 101, 102, 103], "keep": [8, 39, 49, 50, 59, 61, 99, 119], "track": 8, "store": [8, 11, 37, 38, 39, 66, 75, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129], "nonneg": [8, 84, 85, 86, 87, 88], "unconstrain": 8, "impli": [8, 153], "freed": 8, "other": [8, 11, 38, 51, 52, 63, 68, 75, 113, 118, 119, 122, 124, 125, 129, 154], "self": [8, 116], "hlen": [8, 116], "offset": [8, 53, 54, 64, 65, 66, 74], "latest_first": 8, "true": [8, 9, 12, 37, 38, 49, 50, 52, 57, 58, 59, 60, 61, 62, 68, 69, 70, 84, 85, 113, 118, 119, 120, 122, 124, 125, 129, 137], "retriev": [8, 37, 106, 116], "record": [8, 113, 116, 118, 120, 122, 126, 129], "window": 8, "index": [8, 53, 54, 64, 65, 66, 116], "tick": 8, "back": [8, 154], "zeroth": 8, "fals": [8, 12, 37, 38, 39, 52, 54, 55, 56, 60, 63, 64, 65, 66, 68, 69, 71, 76, 77, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 116, 118, 122, 124, 125, 129], "observ": [8, 10, 32, 33, 34, 35, 39, 55, 56, 89, 90, 91, 92, 106, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 135, 136], "hsize": 8, "slice": [8, 60, 69, 85, 88], "latest": [8, 23, 89, 90, 91, 92, 121, 128, 133], "By": 8, "correct": 8, "configur": [8, 12], "normal": [8, 38, 52, 75, 131, 135, 157], "circumst": 8, "pushto": 8, "insert": [8, 51], "befor": [8, 9, 11, 37, 51, 52, 54, 63, 66, 68, 71, 75, 106, 113, 116, 117, 118, 119, 120, 122, 124, 125, 129, 131, 153, 155], "been": [8, 75, 116], "sinc": [8, 60, 84, 85, 115], "last": [8, 49, 53, 54, 58, 59, 62, 64, 65, 66, 67, 74, 79, 80, 81, 102, 115, 116, 119, 157], "data": [8, 10, 20, 22, 32, 33, 34, 35, 37, 39, 53, 54, 64, 65, 66, 99, 100, 103, 110, 111, 112, 114, 115, 116, 117, 121, 123, 127, 128, 130, 131, 132, 139, 140], "advanc": 8, "push": [8, 116, 126], "uniniti": [8, 20], "final": [8, 51, 63], "interpol": [8, 32, 33, 34, 35, 55, 56, 106, 112, 114, 115, 116, 117, 121, 123, 127, 128], "1e": [8, 68, 111, 116], "07": [8, 116, 153], "maximum": [8, 13, 38, 39, 40, 41, 54, 55, 56, 60, 64, 65, 66, 69, 72, 73, 86, 106, 116, 131], "onsid": 8, "7": [8, 116], "cdot": [8, 38, 54, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 106, 116, 152], "ldot": [8, 38, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 116], "enforc": [8, 74, 116], "gather": [8, 38, 116], "take": [8, 24, 25, 26, 27, 28, 29, 30, 31, 51, 74, 75, 86, 104, 108, 118, 122, 134, 152], "nearest": [8, 34, 39, 55, 56, 121, 128], "produc": [8, 51, 74], "scalar": [8, 20, 22, 110, 130, 135, 136, 137, 138, 139, 140], "within": [8, 11], "without": [8, 37, 41, 42, 74, 90, 92, 153, 154, 155], "ever": 8, "attempt": [8, 49, 59, 99], "regardless": [8, 12], "pass": [8, 9, 12, 36, 37, 39, 40, 41, 49, 50, 51, 53, 54, 59, 61, 63, 64, 65, 66, 71, 74, 75, 99, 116, 118, 119, 120, 124, 125, 157], "overwritten": 8, "exact": [8, 115], "manual": [8, 12, 75, 97, 98], "increment": 8, "specif": [8, 11, 74, 75, 135, 155], "prehook": [9, 12, 113, 118, 119, 120, 125, 129], "callabl": [9, 10, 13, 24, 25, 26, 27, 28, 29, 30, 31, 39, 42, 49, 50, 51, 59, 61, 71, 74, 75, 99, 116, 119, 120, 122, 124, 125, 138], "posthook": [9, 113, 119, 120, 122, 124, 129], "prehook_kwarg": [9, 119, 120], "posthook_kwarg": [9, 119, 120], "train_upd": [9, 12, 52, 68, 113, 118, 119, 120, 122, 124, 125, 129], "eval_upd": [9, 12, 52, 68, 113, 118, 119, 120, 122, 124, 125, 129], "forward": [9, 12, 37, 38, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 113, 116, 118, 119, 120, 122, 124, 125, 126, 129], "itself": [9, 12, 53, 54, 64, 65, 66], "nn": [9, 11, 12, 52, 68], "register_forward_hook": [9, 119, 120, 124], "manag": [9, 37, 74, 95, 96, 97, 98, 106, 119], "removablehandl": 9, "keyword": [9, 10, 37, 42, 53, 54, 63, 64, 65, 66, 71, 75, 119, 120, 124, 125], "register_forward_pre_hook": [9, 119, 120, 125], "run": [9, 12, 49, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 70, 72], "train": [9, 12, 37, 49, 50, 52, 59, 60, 61, 68, 69, 74, 84, 85, 86, 87, 88, 113, 118, 119, 120, 122, 124, 125, 129, 150], "mode": [9, 12, 49, 50, 52, 55, 56, 59, 61, 67, 68, 113, 118, 119, 120, 122, 124, 125, 129], "eval": [9, 12, 37, 52, 68, 113, 118, 119, 120, 122, 124, 125, 129], "inherit": [9, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "overrid": [9, 20, 22, 38, 51, 71, 75, 110, 130, 132, 139, 140], "__del__": 9, "signatur": [9, 36, 40, 41, 55, 56, 72, 74, 75, 113, 119, 129], "arg": [9, 10, 11, 13, 24, 25, 26, 27, 28, 29, 30, 31, 42, 51, 71, 72, 73, 119, 120, 126], "Or": 9, "with_kwarg": [9, 124, 125], "kwarg": [9, 10, 11, 13, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 37, 39, 42, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 113, 116, 119, 120, 126], "see": [9, 74, 110, 119, 120, 124, 125, 139, 154, 155], "further": 9, "least": [9, 51], "alreadi": [9, 39], "evalexec": 9, "pytorch": [9, 11, 39, 49, 50, 59, 61, 63, 75, 99, 137], "typeerror": [9, 11, 40], "instanc": [9, 11, 74, 113, 129], "warn": 9, "runtimewarn": 9, "ignor": [9, 12], "registr": [9, 37, 63], "trainexec": 9, "protocol": [10, 13, 24, 25, 26, 27, 28, 29, 30, 31, 42, 73], "prev_data": [10, 32, 33, 34, 35, 112, 114, 115, 117, 121, 123, 127, 128], "next_data": [10, 32, 33, 34, 35, 112, 114, 115, 117, 121, 123, 127, 128], "subsequ": [10, 32, 33, 34, 35, 56, 112, 114, 115, 117, 121, 123, 127, 128], "sample_at": [10, 32, 33, 34, 35, 112, 114, 115, 117, 121, 123, 127, 128], "step_data": [10, 32, 33, 34, 35, 112, 114, 115, 117, 121, 123, 127, 128], "measur": [10, 116], "interp_previ": 10, "interp_nearest": [10, 116], "interp_linear": 10, "interp_exp_decai": 10, "partial": [10, 13, 42, 54, 55, 56, 64, 65, 66, 72, 74, 113, 129], "fill": [10, 22, 42, 110, 112, 114, 115, 117, 121, 123, 127, 128, 130, 132, 139, 140], "extens": 11, "so": [11, 74, 114, 157], "extra": [11, 67], "similar": [11, 39, 49, 50, 59, 61, 90, 92, 99], "regular": 11, "g": [11, 41, 42, 63], "enabl": 11, "simpl": [11, 82, 83, 133], "export": 11, "__init__": 11, "made": [11, 116], "parent": 11, "child": 11, "constructor": [11, 54, 55, 56, 64, 65, 66, 72, 73, 74, 76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 119, 129], "get_extra": 11, "throw": 11, "similarli": 11, "get_submodul": 11, "look": 11, "referenc": [11, 119], "refer": [11, 14, 15, 16, 17, 18, 19, 39, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 70, 79, 80, 81, 119, 138, 150, 152], "path": [11, 74], "termin": 11, "resolv": 11, "someth": 11, "get_extra_st": 11, "state_dict": [11, 37], "set_extra_st": 11, "your": 11, "build": 11, "note": [11, 154, 157], "picklabl": 11, "work": [11, 74, 118, 122, 150], "serial": 11, "backward": 11, "guarante": [11, 75], "break": 11, "pickl": 11, "register_extra": 11, "manner": [11, 75, 117], "register_buff": 11, "except": [11, 12, 51, 52, 68, 90, 92, 154], "limit": [11, 13, 14, 15, 16, 17, 18, 19, 39, 49, 50, 55, 56, 59, 61, 75, 99, 106], "access": [11, 63, 74], "keyerror": 11, "empti": [11, 112, 114, 115, 117, 121, 123, 127, 128], "dot": [11, 74, 113, 129], "notat": [11, 113, 129], "valid": [11, 53, 54, 64, 65, 66, 74, 75, 119, 135, 136, 137], "python": [11, 51], "identifi": [11, 37, 51], "load_state_dict": 11, "as_prehook": [12, 52, 68, 129], "prepend": [12, 39, 52, 68, 113, 118, 122, 124, 125, 129], "always_cal": [12, 52, 68], "hook": [12, 37, 52, 63, 68, 75, 113, 119, 120, 124, 125, 129], "abc": [12, 37, 41, 53, 63, 67, 72, 117, 119, 126], "act": 12, "even": [12, 52, 68, 113, 129], "trigger": [12, 153, 154, 155], "singl": [12, 51, 71, 74, 116, 118, 122], "abstract": [12, 37, 41, 53, 63, 67, 72, 117, 119, 126], "notimplementederror": [12, 37, 41, 53, 63, 67, 72, 117, 119], "execut": 12, "unregist": 12, "lower": [13, 14, 15, 16, 36, 39, 40, 41, 43, 45, 47, 52, 75, 81, 152, 153], "upper": [13, 14, 15, 16, 17, 18, 19, 36, 40, 41, 44, 46, 48, 52, 75, 152], "param": [13, 14, 15, 16, 17, 18, 19], "scale": [13, 14, 15, 16, 17, 18, 19, 38, 60, 68, 69, 87, 88, 90, 92, 111, 127, 128, 135, 136], "half": 13, "upper_power_depend": 13, "upper_lower_depend": 13, "upper_multiplicative_depend": 13, "lower_multiplicative_depend": 13, "py": [13, 51, 53, 54, 63, 64, 65, 66, 71, 75], "func": [13, 75], "upper_sharp_depend": 13, "lower_sharp_depend": 13, "soft": [14, 15, 17, 18, 39, 40, 45, 46, 47, 48, 150], "equival": [14, 17, 45, 46, 63, 74, 116, 154], "power": [14, 15, 17, 18, 40, 45, 46, 47, 48, 152], "expon": [14, 15, 17, 18, 40, 47, 48], "u_": [14, 15, 16, 17, 18, 19], "p": [14, 15, 16, 17, 18, 19, 68, 111, 135, 136, 137], "p_": [14, 15, 16, 17, 18, 19], "min": [14, 15, 16, 36, 40, 43, 45, 47, 51, 52, 75, 131, 152], "depress": [14, 15, 16, 39, 43, 45, 47, 75, 152, 153], "mu_": [15, 18, 40, 47, 48, 152], "sharp": [16, 19, 50, 57, 155], "hard": [16, 19, 36, 39, 43, 44, 150], "max": [17, 18, 19, 36, 39, 40, 44, 46, 48, 49, 50, 51, 52, 59, 61, 75, 81, 99, 131, 152, 153], "dtype": [20, 22, 110, 115, 127, 128, 130, 132, 135, 136, 137, 139, 140], "layout": [20, 22, 37, 39, 110, 130, 132, 139, 140], "devic": [20, 22, 110, 130, 132, 139, 140], "requires_grad": [20, 22, 76, 77, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 130, 132, 139, 140], "gradient": [20, 22, 76, 77, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 130, 132, 139, 140], "ndarrai": [21, 134], "agnost": [21, 134], "exponenti": [21, 23, 32, 39, 49, 50, 57, 59, 60, 61, 62, 70, 79, 80, 81, 84, 85, 89, 90, 91, 92, 93, 94, 112, 114, 121, 127, 128, 133, 150, 153], "y": [21, 64, 65, 66, 134, 154], "numpi": [21, 134], "ob": [23, 112, 114, 115, 117, 121, 123, 127, 128, 133], "level": [23, 75, 133], "trend": 23, "alpha": [23, 114, 133], "beta": 23, "holt": 23, "linear": [23, 49, 64, 65, 66, 79, 80, 81, 82, 83, 93, 114, 150, 155], "smooth": [23, 114, 133], "s_0": [23, 114, 133], "x_0": [23, 114, 133], "b_0": 23, "x_1": 23, "s_": [23, 114, 133], "s_t": [23, 114, 133], "b_": 23, "b_t": 23, "revis": [23, 133], "arbitrari": [24, 25, 26, 27, 28, 29], "time_const": [32, 57, 58, 62, 70, 79, 80, 93, 94, 112, 121, 127, 128], "decai": [32, 38, 39, 49, 50, 57, 59, 61, 62, 70, 79, 80, 81, 89, 90, 91, 92, 93, 94, 112, 121, 127, 128, 153, 154], "d_": [32, 33, 34, 35, 152], "constant": [32, 39, 49, 50, 57, 59, 61, 62, 70, 79, 80, 81, 93, 94, 112, 114, 121, 127, 128, 152, 153, 154, 155], "linearlli": 33, "wmin": [36, 40, 41], "wmax": [36, 40, 41], "weightdepend": [36, 40], "w_": [36, 40, 54, 152], "a_": [36, 39, 40, 43, 44, 45, 46, 47, 48, 152], "w": [36, 39, 40, 43, 44, 45, 46, 47, 48, 54, 64, 65, 66, 152], "eta_": [36, 39, 40, 43, 44, 45, 46, 47, 48, 152], "exclud": [36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 53, 54, 64, 65, 66, 67, 72, 73, 98], "updatebound": [36, 39, 40, 41], "layer": [37, 39, 51, 71, 74], "interdepend": 37, "attach": 37, "detach": 37, "monitor": [37, 39, 63, 74, 113, 118, 119, 122, 124, 125, 129, 153], "_register_state_dict_hook": 37, "add_monitor": [37, 39, 74], "trainabl": [37, 39, 63, 71, 75], "associ": [37, 39, 60, 63, 69, 74], "successfulli": [37, 39], "add_train": 37, "clear": [37, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 75, 113, 116, 120, 126], "submodul": [37, 63, 74, 75], "delet": [37, 53, 54, 63, 64, 65, 66, 74], "well": [37, 40, 77, 150], "del_monitor": [37, 74], "dentifi": 37, "del_train": 37, "get_monitor": 37, "yield": [37, 60, 63, 69, 85, 88], "captur": [37, 74], "num_class": 38, "classifi": 38, "per": [38, 54, 106], "intern": [38, 66, 98], "calcul": [38, 39, 117, 154], "learn": [38, 39, 41, 42, 49, 50, 53, 54, 59, 61, 64, 65, 66], "multipli": [38, 90, 92, 154], "them": [38, 51, 63, 74, 75, 102, 113, 118, 119, 120, 122, 124, 125, 129, 150], "b_k": [38, 50, 61, 79, 81, 153, 155], "group": [38, 49, 50, 51, 53, 55, 56, 57, 58, 59, 61, 62, 67, 70, 71, 72, 73, 79, 80, 81, 98], "total": [38, 153, 154, 155, 157], "possibl": [38, 74, 116], "decay_r": 38, "logit": 38, "label": 38, "infer": [38, 75], "truth": 38, "predict": 38, "averag": [38, 79, 80, 81, 114], "nclass": 38, "ndim": 38, "l_1": 38, "raw": 38, "recalcul": 38, "lr_post": 39, "lr_pre": 39, "tc_post": 39, "tc_pre": 39, "delai": [39, 53, 54, 55, 56, 64, 65, 66, 72, 73, 74, 75, 76, 106, 150], "interp_toler": 39, "trace_mod": 39, "liter": [39, 51, 55, 56], "cumul": [39, 63, 112, 127, 135, 136, 137], "wd_lower": 39, "wd_upper": 39, "batch_reduct": [39, 49, 50, 59, 61, 99], "layerwiseupdat": 39, "plastic": [39, 150], "delta": [39, 49, 50, 55, 56, 57, 59, 60, 61, 62, 69, 70, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 112, 114, 121, 127, 128, 150, 152, 153, 154, 155], "bigl": 39, "post": [39, 53, 54, 64, 65, 66, 152], "bigr": 39, "trace": [39, 89, 90, 91, 92, 112, 121, 127, 128, 150], "vari": 39, "qquad": [39, 135, 136], "m": [39, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 72, 73, 79, 80, 81, 84, 85, 86, 87, 88, 93, 94, 95, 96, 101, 102, 106, 153, 154, 155, 157], "postsynapt": [39, 49, 53, 58, 59, 62, 67, 79, 80, 81, 102, 152, 153], "ltp": [39, 41, 152], "ltd": [39, 41, 152], "tau_": [39, 152], "assum": [39, 49, 51, 53, 54, 59, 64, 65, 66, 71, 99, 116], "co": [39, 55, 56, 106], "origin": [39, 49, 50, 59, 61, 99, 116], "visit": [39, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 70, 79, 80, 81, 82, 83], "zoo": [39, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 70, 79, 80, 81, 82, 83], "spike_post": 39, "spike_pr": 39, "trace_post": 39, "trace_pr": 39, "fail": [39, 116], "lrpost": 39, "lrpre": 39, "minpow": 40, "maxpow": 40, "effect": [40, 41, 54, 64, 65, 153, 155], "magnitud": [41, 152, 153], "hasmax": 41, "hasmin": 41, "power_upper_bound": [42, 46], "power_lower_bound": [42, 45], "hard_upper_bound": 42, "hard_lower_bound": 42, "v_": [43, 44, 45, 46, 47, 48, 49, 50, 57, 59, 61, 62, 70, 79, 81, 93, 94, 95, 96, 153, 154, 155], "v": [43, 44, 45, 46, 47, 48], "law": [47, 48, 152], "rest_v": [49, 50, 57, 58, 59, 61, 62, 70, 79, 81, 93, 94, 96], "reset_v": [49, 50, 57, 58, 61, 62, 70, 95], "thresh_eq_v": [49, 59, 155], "refrac_t": [49, 50, 57, 58, 59, 61, 62, 70, 95, 96, 102], "tc_membran": [49, 50, 59, 61], "tc_adapt": [49, 50, 61], "spike_incr": [49, 50, 59, 61, 79, 80], "resist": [49, 50, 57, 58, 59, 61, 62, 70, 93, 94, 154], "batch_siz": [49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 72, 73, 97, 98], "adaptationmixin": [49, 50, 59, 61], "voltagemixin": [49, 50, 57, 58, 59, 61, 62, 70], "spikerefractorymixin": [49, 50, 57, 58, 59, 61, 62, 70], "leaki": [49, 58, 59, 62, 150], "dynam": [49, 50, 55, 56, 57, 58, 59, 61, 62, 67, 70, 72, 93, 94, 95, 96, 153, 154, 155], "v_m": [49, 50, 57, 59, 61, 62, 70, 79, 81, 93, 94, 95, 96, 153, 154, 155], "rest": [49, 50, 55, 56, 57, 58, 59, 61, 62, 67, 70, 72, 79, 81, 93, 94, 96, 153, 154, 155], "r_mi": [49, 50, 57, 59, 61, 62, 70, 93, 94, 154, 155], "tau_m": [49, 50, 57, 59, 61, 62, 70, 93, 94, 154, 155], "theta_": [49, 59, 81, 83, 153, 154, 155], "sum_k": [49, 50, 59, 61, 153, 154, 155], "theta_k": [49, 59, 80, 81, 83, 153, 154], "tau_k": [49, 50, 61, 79, 80, 89, 90, 91, 92, 153, 154, 155], "leftarrow": [49, 50, 57, 59, 61, 62, 70, 79, 80, 81, 95, 96, 153, 154, 155], "d_k": [49, 59, 61, 153, 154, 155], "equilibrium": [49, 50, 57, 59, 61, 62, 70, 79, 81, 83, 93, 94, 96, 153, 154, 155], "mv": [49, 50, 57, 59, 61, 62, 70, 79, 80, 81, 83, 93, 94, 95, 96, 103, 153, 154, 155], "refractori": [49, 50, 57, 58, 59, 60, 61, 62, 67, 70, 79, 80, 81, 84, 85, 87, 88, 93, 94, 95, 96, 101, 102], "period": [49, 50, 57, 58, 59, 60, 61, 62, 67, 70, 79, 80, 81, 84, 85, 87, 88, 93, 94, 95, 96, 101, 102], "r_m": [49, 50, 57, 59, 61, 62, 70, 93, 94, 154], "omega": [49, 50, 57, 59, 61, 62, 70, 93, 94, 154], "keep_adapt": [49, 50, 59, 61], "refrac_lock": [49, 50, 57, 58, 59, 61, 62, 70], "na": [49, 50, 57, 58, 59, 61, 62, 70, 79, 82, 93, 94, 95, 96, 100, 104, 105, 107, 153, 154, 155, 157], "setter": [49, 59, 66, 75, 99, 104, 108], "additon": [49, 59, 99], "lead": [49, 59, 99], "unreduc": [49, 59, 99], "bsize": [49, 53, 54, 58, 59, 62, 64, 65, 66, 67, 97, 98], "refrac": [49, 58, 59, 60, 62, 67, 79, 80, 81, 84, 85, 95, 96, 101, 102], "t_": [49, 58, 59, 62, 102, 152], "millivolt": [49, 58, 59, 62, 67, 74, 103], "rheobase_v": [50, 57], "thresh_v": [50, 57, 58, 61, 62, 70, 95, 96, 155], "voltage_coupl": [50, 61, 79], "delta_t": [50, 57, 155], "v_t": [50, 57, 155], "i_x": [50, 56, 61, 153, 155, 157], "w_k": [50, 61, 79, 82, 153, 155], "a_k": [50, 79, 80, 81, 153, 155], "approach": [50, 57, 155], "rapidli": [50, 57], "steep": [50, 57, 155], "natur": [50, 57, 61, 70, 94, 135, 136, 137], "rheobas": [50, 57, 155], "strength": [50, 61, 70, 79, 94], "coupl": [50, 61, 79, 153, 155], "mu": [50, 61, 79, 135, 136, 153, 154, 155], "connect": [51, 54, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 152], "combin": 51, "stack": 51, "prod": [51, 64, 65, 66], "structur": 51, "complet": 51, "bipartit": 51, "graph": 51, "transform": [51, 64, 65, 66, 71], "three": 51, "uniqu": [51, 63, 74], "third": 51, "pad": [51, 54], "einop": 51, "receiv": [51, 63, 71, 118], "ouput": 51, "especi": 51, "add_input": [51, 63, 71, 74], "add_output": [51, 63, 71, 74], "wire": [51, 63, 71], "topologi": [51, 71], "again": 51, "ident": [51, 71], "statehook": [52, 68], "rang": [52, 116], "synaps": [53, 54, 55, 56, 63, 64, 65, 66, 71, 73, 74, 104, 105, 106, 107, 108, 109], "bia": [53, 54, 64, 65, 66, 75, 76, 77], "learnabl": [53, 54, 64, 65, 66, 76, 77, 78], "binshap": [53, 54, 64, 65, 66], "boutshap": [53, 54, 64, 65, 66], "clearabl": [53, 54, 64, 65, 66], "delayedbi": [53, 54, 64, 65, 66], "maxmimum": [53, 54, 64, 65, 66], "compos": [53, 74], "meth": [53, 54, 64, 65, 66], "inshap": [53, 54, 64, 65, 66], "insiz": [53, 54, 64, 65, 66], "cach": [53, 54, 64, 65, 66], "refresh": [53, 54, 64, 65, 66], "like_input": [53, 54, 64, 65, 66], "syncurr": [53, 54, 64, 65, 66, 74], "synspik": [53, 54, 64, 65, 66, 74], "like_synapt": [53, 54, 64, 65, 66], "outshap": [53, 54, 64, 65, 66], "outsiz": [53, 54, 64, 65, 66], "postsyn_recept": [53, 54, 64, 65, 66], "l": 53, "presyn_recept": [53, 54, 64, 65, 66], "selector": [53, 54, 55, 56, 64, 65, 66, 72, 106], "synapt": [53, 54, 55, 56, 64, 65, 66, 72, 74, 104, 105, 106, 107, 108], "height": 54, "width": 54, "channel": 54, "filter": 54, "kernel": 54, "stride": 54, "dilat": 54, "synapseconstructor": [54, 55, 56, 64, 65, 66, 72], "weight_init": [54, 64, 65, 66], "onetoon": [54, 64, 65, 66, 90, 92, 95, 96, 115, 116, 127, 128], "bias_init": [54, 64, 65, 66], "delay_init": [54, 64, 65, 66], "weightbiasdelaymixin": [54, 64, 65, 66], "convolut": 54, "spatial": 54, "plane": 54, "expect": [54, 60, 63, 64, 65, 66, 69, 84, 85, 86, 87, 88, 118, 122, 135, 136, 137], "inner": [54, 64, 65, 66], "c": 54, "h": 54, "kh": 54, "kw": 54, "delay_": [54, 64, 65, 76], "creat": [54, 64, 65, 74, 76, 77, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109], "alter": [54, 64, 65, 75, 116], "unless": [54, 64, 65, 74], "later": [54, 63, 64, 65], "uniform": [54, 64, 65, 66], "random": [54, 64, 65, 66, 110, 135, 136, 137, 139], "interv": [54, 60, 64, 65, 66, 69, 84, 85, 87, 88], "rand": [54, 64, 65, 66, 139], "still": [54, 60, 84, 85, 89, 91, 112, 121], "anoth": [54, 106], "h_": 54, "formula": 54, "document": 54, "lfloor": [54, 137], "p_h": 54, "d_h": 54, "k_h": 54, "s_h": 54, "rfloor": [54, 137], "p_w": 54, "d_w": 54, "k_w": 54, "s_w": 54, "ph": 54, "pw": 54, "side": [54, 154], "dh": 54, "dw": [54, 152], "sh": 54, "sw": 54, "oper": [54, 117], "reli": 54, "upon": [54, 75, 155], "expand": 54, "consequenti": 54, "memori": [54, 60, 69], "spike_q": [55, 56], "interp_mod": [55, 56], "interp_tol": [55, 56], "current_overbound": [55, 56], "spike_overbound": [55, 56], "delayedspikecurrentaccessormixin": [55, 56], "spikederivedcurrentmixin": 55, "memoryless": [55, 56], "respond": [55, 56, 153], "instantan": [55, 56], "q": [55, 56, 157], "charg": [55, 56, 157], "carri": [55, 56, 157], "pc": [55, 56, 157], "cuba": [55, 56, 150], "partialconstructor": [55, 56, 72, 113, 119, 129], "spikecurrentmixin": 56, "passthrough": [56, 123], "inject": 56, "glif": [58, 59, 150, 153, 154], "alia": [58, 74], "lif": [58, 150], "reset_v_add": 59, "reset_v_mul": 59, "rc_adapt": 59, "lambda_k": [59, 154], "m_v": [59, 96, 154], "b_v": [59, 96, 154], "unitless": [59, 61, 70, 89, 90, 91, 92, 94, 96, 155], "frequenc": [60, 69, 84, 85, 86, 87, 88, 153], "compens": [60, 84, 85, 87, 88, 137], "generatormixin": [60, 69], "refractorystepmixin": 60, "encod": [60, 69], "poisson": [60, 69, 84, 85, 86, 87, 88], "distribut": [60, 69, 84, 85, 86, 87, 88, 135, 136, 137], "randomli": [60, 84, 85], "point": [60, 84, 85, 137, 155], "hz": [60, 69, 84, 85, 86, 87, 88], "inter": [60, 84, 85, 106], "pseudorandom": [60, 69, 84, 85, 87, 88, 110, 135, 136, 137, 139], "distanc": [60, 84, 85], "th": [60, 71, 79, 80, 81, 84, 85], "onlin": [60, 69], "iter": [60, 63, 69, 85, 88], "intens": [60, 69], "hertz": [60, 69], "pin": 60, "crit_v": [61, 70, 94], "affin": [61, 70, 94], "crit": [61, 70, 94, 155], "drift": [61, 70, 94], "toward": [61, 70, 94, 154, 155], "awai": [61, 70, 75, 94, 155], "simultan": 63, "visibl": 63, "output_nam": 63, "intermedi": 63, "amongst": 63, "proxi": 63, "place": [63, 152], "etc": 63, "neither": 63, "nor": [63, 75], "reassign": 63, "safe": 63, "inkwarg": [63, 71], "outkwarg": [63, 71], "capture_intermedi": [63, 71], "kei": 63, "innam": 63, "outnam": 63, "__call__": 63, "turn": [63, 113, 129], "named_connect": 63, "named_neuron": 63, "named_synaps": 63, "named_train": 63, "named_updat": 63, "input_nam": 63, "_description_": [63, 86], "clamp": [63, 75, 86], "in_shap": 64, "out_shap": 64, "interc": [64, 66], "m_0": 64, "unbatch": [64, 65, 66], "odot": [65, 66], "inputoutput": [65, 66], "i_n": 66, "lineardens": 66, "creation": 66, "mask": [66, 90, 92, 93, 94], "shapemixin": [67, 72], "extra_repr": 67, "12": [68, 111, 153], "norm": [68, 111], "demonin": [68, 111], "stepmixin": 69, "replic": [69, 87, 88, 98], "bindsnet": [69, 87, 88], "parameter": [69, 87, 88, 152], "invers": [69, 87, 88, 154, 157], "historymodul": [72, 104, 105, 106, 107, 108, 109, 126], "nanoamper": [72, 100, 105, 106, 108], "current_at": [72, 106], "spike_at": [72, 106], "boolean": 72, "newli": 73, "add_monitor_callback": 74, "del_monitor_callback": 74, "pair": 74, "never": [74, 75, 87, 88, 118, 122], "user": 74, "directli": [74, 119, 123], "aler": 74, "callback": 74, "suppli": 74, "caller": 74, "monitorconstructor": [74, 113, 119, 129, 148], "managedmonitor": [74, 113, 129], "trainer": [74, 75], "unneed": 74, "non": [74, 135, 136, 137, 138], "goe": [74, 153], "chain": 74, "danger": 74, "caus": 74, "issu": 74, "lifecycl": 74, "seper": 74, "member": 74, "head": 74, "free": 74, "enclos": [74, 75], "postspik": 74, "postvoltag": 74, "precurr": 74, "prespik": 74, "weight_reduct": 75, "bias_reduct": 75, "delay_reduct": 75, "top": 75, "accumul": 75, "ti": [75, 113, 129], "update_weight": 75, "update_bia": 75, "update_delai": 75, "_updat": 75, "onc": 75, "until": 75, "_reduct": 75, "amin": [75, 131], "amax": [75, 131], "bias_bound": 75, "fullbound": 75, "full": [75, 132], "anyth": 75, "bias_upper_bound": 75, "bias_lower_bound": 75, "halfbound": 75, "appropri": 75, "kept": 75, "byt": 75, "bias_upd": 75, "pos_upd": 75, "neg_upd": 75, "delay_bound": 75, "delay_upper_bound": 75, "delay_lower_bound": 75, "delay_upd": 75, "behav": [75, 119], "silent": 75, "don": 75, "isn": 75, "3rd": 75, "parti": 75, "ones": 75, "neg_bias_upd": 75, "hasn": 75, "overwrit": 75, "neg_delay_upd": 75, "neg_weight_upd": 75, "pos_bias_upd": 75, "pos_delay_upd": 75, "pos_weight_upd": 75, "weight_bound": 75, "weight_upper_bound": 75, "weight_lower_bound": 75, "weight_upd": 75, "weightbiasmixin": 76, "mixin": [76, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "weight_": [76, 77, 78], "bias_": [76, 77], "weightmixin": 77, "maintain": [79, 80, 81, 95, 96], "doesn": [79, 80, 81], "adapt_r": 81, "rebound_r": 81, "adapt_reset_min": 81, "permit": [81, 90, 92], "adap": [82, 83], "i_": 82, "optioon": [84, 85], "nonsens": [84, 85], "1000": [84, 85], "inhomogen": 86, "exce": 86, "init": [89, 90, 91, 92], "condit": [89, 90, 91, 92, 155], "count": [89, 91, 98, 112, 121, 137], "incorpor": [89, 90, 91, 92, 112, 114, 115, 116, 117, 121, 123, 126, 127, 128, 154, 155], "matchfn": [90, 92], "trace_cumul": 90, "predic": [90, 92], "datatyp": [90, 92, 115, 127, 128], "trace_nearest": 92, "masked_input": [93, 94], "held": [95, 96], "v_slope": 96, "v_intercept": 96, "batchmixin": 98, "concept": 98, "_shape": 98, "bshape": 98, "adaptation_": 99, "adapt_batchreduc": 99, "current_": [100, 104, 105, 106, 107], "refrac_": [101, 102], "refractorymixin": 102, "driven": 103, "voltage_": 103, "currentmixin": [104, 107], "therefrom": [104, 108], "_to_spik": [104, 106], "noth": [104, 108], "primit": [105, 107, 109], "primitive_curr": 106, "primitive_spik": 106, "current_interp": 106, "spike_interp": 106, "current_overv": 106, "spike_overv": 106, "_to_curr": [106, 108], "spike_": [106, 107, 108, 109], "alwai": 106, "_current_interp": 106, "_spike_interp": 106, "_current_ob_v": 106, "_spike_ob_v": 106, "_primitive_curr": 106, "_primitive_spik": 106, "_interp_tol": 106, "spikemixin": [107, 108], "randn": 110, "foldingreduc": [112, 114, 115, 121, 123, 127, 128], "fold": [112, 114, 115, 117, 121, 123, 127, 128], "entir": [112, 114, 115, 121, 123, 127, 128], "reiniti": [113, 116, 120, 126], "move": 114, "decoupl": 114, "infin": 115, "fold_fn": 116, "mathop": 116, "infernotyp": 116, "map_fn": 116, "keepshap": 116, "storag": 116, "histor": 116, "dump": [116, 120, 126], "tempor": 116, "oldest": 116, "peek": [116, 120, 126], "view": [116, 120, 126], "fall": 116, "foldreduc": 117, "manytoon": 118, "statemonitor": [118, 122], "differencemonitor": [118, 122], "sent": 118, "weak": 119, "did": 119, "content": [124, 125], "resmin": 131, "resmax": 131, "srcmin": 131, "srcmax": 131, "unchang": 131, "shortcut": 132, "squar": 134, "root": 134, "continuousdistribut": [135, 136], "log": [135, 136, 137], "probabl": [135, 136, 137], "mathbb": [135, 136, 137], "r": [135, 136, 137, 154], "locat": [135, 136], "sigma": [135, 136], "_": [135, 136, 137], "cdf": [135, 136, 137], "loc": [135, 136], "erf": [135, 136], "sqrt": [135, 136], "standard": [135, 136], "deviat": [135, 136], "logcdf": [135, 136, 137], "logarithm": [135, 136, 137], "logpdf": [135, 136], "densiti": [135, 136], "pi": [135, 136], "likelihood": [135, 136], "mid": [135, 136, 137], "sim": [135, 136, 137], "params_mv": [135, 136], "varianc": [135, 136, 137], "mu_x": [135, 136], "sigma_x": [135, 136], "pdf": [135, 136], "variat": [135, 136, 137], "mathcal": [135, 136], "sample_mv": [135, 136], "var": [135, 136, 137], "lnormal": 136, "discretedistribut": 137, "_0": 137, "gamma": 137, "logpmf": 137, "mass": 137, "pmf": 137, "metal": 137, "shader": 137, "although": [137, 155], "strictli": 137, "degener": 137, "convers": 138, "convert": 138, "leftmost": 138, "uniformli": 139, "depth": 150, "academ": 150, "plan": 150, "futur": 150, "alif": 150, "3": [150, 155], "4": [150, 153, 155], "5": [150, 155], "nonlinear": 150, "qif": 150, "izhikevich": 150, "eif": 150, "adex": 150, "conduct": [150, 154], "coba": 150, "stdp": 150, "anti": 150, "hebbian": 150, "astdp": 150, "mstdp": 150, "elig": 150, "mstdpet": 150, "resum": 150, "tbd": 151, "categori": 152, "With": [152, 153, 154, 155], "w_t": 152, "dirac": [152, 157], "pp": 152, "adjust": 152, "neighbor": 152, "flip": 152, "sign": 152, "postsynpat": 152, "penal": 152, "penalti": 152, "heavisid": 152, "impos": 153, "regard": 153, "steadi": 153, "give": 153, "degre": 153, "freedom": 153, "modif": 153, "dampen": 153, "amplifi": 153, "addition": 153, "said": 153, "dw_k": [153, 155], "approx": [153, 155], "subthreshold": [153, 155], "doi": [153, 154, 155], "10": [153, 154, 155], "1017": [153, 154, 155], "cbo9781107447615": [153, 154, 155], "6": [153, 155], "1152": 153, "jn": 153, "00686": 153, "2005": 153, "Be": [153, 154], "1038": [153, 154], "s41467": [153, 154], "017": [153, 154], "02717": [153, 154], "allen": [153, 154], "institut": [153, 154], "whitepap": [153, 154], "rebound": 153, "1162": 153, "neco": 153, "2008": 153, "680": 153, "neco_a_00196": 153, "1803": 153, "09574": 153, "021": 153, "24427": 153, "8": [153, 155], "00234": 153, "2019": 153, "dv_m": [154, 155], "basic": 154, "rule": 154, "slope": [154, 155], "show": [154, 155], "v_r": [154, 155], "60": [154, 155], "plot": [154, 155], "c_m": 154, "g_l": 154, "capacit": 154, "nf": 154, "phrase": 154, "leak": 154, "expos": 154, "isbn": [154, 155, 157], "9780262548083": [154, 155, 157], "020": 154, "17236": 154, "fraction": 154, "intercept": 154, "convent": 154, "conting": 154, "reach": 154, "critic": 155, "tendenc": 155, "stabl": 155, "unstabl": 155, "attract": 155, "repel": 155, "v_c": 155, "50": 155, "depeend": 155, "3390": 155, "brainsci12070863": 155, "7551": 155, "mitpress": 155, "2526": 155, "001": 155, "0001": 155, "close": 155, "rapid": 155, "upsw": 155, "rightarrow": 155, "easi": 155, "confus": 155, "unrel": 155, "occasion": 155, "denot": 155, "vartheta_": 155, "rh": 155, "thresh": 155, "usual": 155, "simuat": 155, "illustr": 155, "4249": 155, "scholarpedia": 155, "8427": 155, "1523": 155, "jneurosci": 155, "23": 155, "37": 155, "11628": 155, "2003": 155, "t_f": 157, "veri": 157, "role": 157, "deliv": 157, "dramat": 157}, "objects": {"inferno": [[6, 0, 1, "", "Configuration"], [7, 0, 1, "", "DimensionalModule"], [8, 0, 1, "", "HistoryModule"], [9, 0, 1, "", "Hook"], [10, 0, 1, "", "Interpolation"], [11, 0, 1, "", "Module"], [12, 0, 1, "", "StateHook"], [5, 3, 0, "-", "bounding"], [20, 4, 1, "", "empty"], [21, 4, 1, "", "exp"], [22, 4, 1, "", "full"], [23, 4, 1, "", "holt_linear_smoothing"], [32, 4, 1, "", "interp_exp_decay"], [33, 4, 1, "", "interp_linear"], [34, 4, 1, "", "interp_nearest"], [35, 4, 1, "", "interp_previous"], [144, 3, 0, "-", "learn"], [146, 3, 0, "-", "neural"], [110, 4, 1, "", "normal"], [111, 4, 1, "", "normalize"], [130, 4, 1, "", "ones"], [131, 4, 1, "", "rescale"], [132, 4, 1, "", "scalar"], [133, 4, 1, "", "simple_exponential_smoothing"], [134, 4, 1, "", "sqrt"], [149, 3, 0, "-", "stats"], [138, 4, 1, "", "tensorize"], [139, 4, 1, "", "uniform"], [140, 4, 1, "", "zeros"]], "inferno.Configuration": [[6, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[7, 1, 1, "", "compatible"], [7, 1, 1, "", "compatible_"], [7, 1, 1, "", "compatible_like"], [7, 1, 1, "", "compatible_like_"], [7, 2, 1, "", "constraints"], [7, 2, 1, "", "constraints_repr"], [7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "mindims"], [7, 1, 1, "", "mindims_"], [7, 1, 1, "", "reconstrain"], [7, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[8, 1, 1, "", "deregister_constrained"], [8, 2, 1, "", "dt"], [8, 1, 1, "", "history"], [8, 2, 1, "", "hlen"], [8, 2, 1, "", "hsize"], [8, 1, 1, "", "latest"], [8, 1, 1, "", "pushto"], [8, 1, 1, "", "register_constrained"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "select"], [8, 1, 1, "", "tick"], [8, 1, 1, "", "update"]], "inferno.Hook": [[9, 1, 1, "", "deregister"], [9, 2, 1, "", "evalexec"], [9, 1, 1, "", "register"], [9, 2, 1, "", "registered"], [9, 2, 1, "", "trainexec"]], "inferno.Module": [[11, 1, 1, "", "get_extra"], [11, 1, 1, "", "get_extra_state"], [11, 1, 1, "", "register_extra"], [11, 1, 1, "", "set_extra_state"]], "inferno.StateHook": [[12, 1, 1, "", "hook"], [12, 2, 1, "", "module"], [12, 1, 1, "", "register"], [12, 1, 1, "", "run"]], "inferno.bounding": [[13, 0, 1, "", "HalfBounding"], [14, 4, 1, "", "lower_multiplicative_dependence"], [15, 4, 1, "", "lower_power_dependence"], [16, 4, 1, "", "lower_sharp_dependence"], [17, 4, 1, "", "upper_multiplicative_dependence"], [18, 4, 1, "", "upper_power_dependence"], [19, 4, 1, "", "upper_sharp_dependence"]], "inferno.infernotypes": [[24, 0, 1, "", "ManyToMany"], [25, 0, 1, "", "ManyToManyMethod"], [26, 0, 1, "", "ManyToOne"], [27, 0, 1, "", "ManyToOneMethod"], [28, 0, 1, "", "OneToMany"], [29, 0, 1, "", "OneToManyMethod"], [30, 0, 1, "", "OneToOne"], [31, 0, 1, "", "OneToOneMethod"]], "inferno.learn": [[36, 0, 1, "", "HardWeightDependence"], [37, 0, 1, "", "LayerwiseUpdater"], [38, 0, 1, "", "MaxRateClassifier"], [39, 0, 1, "", "STDP"], [40, 0, 1, "", "SoftWeightDependence"], [41, 0, 1, "", "WeightDependence"], [145, 3, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[36, 1, 1, "", "lower"], [36, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[37, 1, 1, "", "add_monitor"], [37, 1, 1, "", "add_monitors"], [37, 1, 1, "", "add_trainable"], [37, 1, 1, "", "attach"], [37, 1, 1, "", "clear"], [37, 1, 1, "", "del_monitor"], [37, 1, 1, "", "del_monitors"], [37, 1, 1, "", "del_trainable"], [37, 1, 1, "", "detach"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_monitor"], [37, 1, 1, "", "get_monitors"], [37, 2, 1, "", "monitors"], [37, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[38, 2, 1, "", "assignments"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "infer"], [38, 1, 1, "", "learn"], [38, 2, 1, "", "nclass"], [38, 2, 1, "", "ndim"], [38, 2, 1, "", "occurances"], [38, 2, 1, "", "proportional"], [38, 2, 1, "", "proportions"], [38, 2, 1, "", "rates"], [38, 2, 1, "", "shape"]], "inferno.learn.STDP": [[39, 1, 1, "", "add_monitors"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"], [39, 2, 1, "", "lrpost"], [39, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[40, 1, 1, "", "lower"], [40, 2, 1, "", "maxpow"], [40, 2, 1, "", "minpow"], [40, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[41, 2, 1, "", "hasmax"], [41, 2, 1, "", "hasmin"], [41, 1, 1, "", "lower"], [41, 1, 1, "", "upper"], [41, 2, 1, "", "wmax"], [41, 2, 1, "", "wmin"]], "inferno.learn.functional": [[42, 0, 1, "", "UpdateBounding"], [43, 4, 1, "", "hard_lower_bounding"], [44, 4, 1, "", "hard_upper_bounding"], [45, 4, 1, "", "mult_lower_bounding"], [46, 4, 1, "", "mult_upper_bounding"], [47, 4, 1, "", "power_lower_bounding"], [48, 4, 1, "", "power_upper_bounding"]], "inferno.neural": [[49, 0, 1, "", "ALIF"], [50, 0, 1, "", "AdEx"], [51, 0, 1, "", "Biclique"], [52, 0, 1, "", "Clamping"], [53, 0, 1, "", "Connection"], [54, 0, 1, "", "Conv2D"], [55, 0, 1, "", "DeltaCurrent"], [56, 0, 1, "", "DeltaPlusCurrent"], [57, 0, 1, "", "EIF"], [58, 0, 1, "", "GLIF1"], [59, 0, 1, "", "GLIF2"], [60, 0, 1, "", "HomogeneousPoissonEncoder"], [61, 0, 1, "", "Izhikevich"], [62, 0, 1, "", "LIF"], [63, 0, 1, "", "Layer"], [64, 0, 1, "", "LinearDense"], [65, 0, 1, "", "LinearDirect"], [66, 0, 1, "", "LinearLateral"], [67, 0, 1, "", "Neuron"], [68, 0, 1, "", "Normalization"], [69, 0, 1, "", "PoissonIntervalEncoder"], [70, 0, 1, "", "QIF"], [71, 0, 1, "", "Serial"], [72, 0, 1, "", "Synapse"], [73, 0, 1, "", "SynapseConstructor"], [74, 0, 1, "", "Trainable"], [75, 0, 1, "", "Updater"], [147, 3, 0, "-", "functional"]], "inferno.neural.ALIF": [[49, 2, 1, "", "adaptation"], [49, 2, 1, "", "bsize"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "refrac"], [49, 2, 1, "", "spike"], [49, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[50, 1, 1, "", "clear"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"]], "inferno.neural.Biclique": [[51, 1, 1, "", "add_input"], [51, 1, 1, "", "add_output"], [51, 1, 1, "", "wiring"]], "inferno.neural.Clamping": [[52, 1, 1, "", "hook"]], "inferno.neural.Connection": [[53, 2, 1, "", "bias"], [53, 2, 1, "", "biased"], [53, 2, 1, "", "binshape"], [53, 2, 1, "", "boutshape"], [53, 2, 1, "", "bsize"], [53, 1, 1, "", "clear"], [53, 2, 1, "", "delay"], [53, 2, 1, "", "delayedby"], [53, 2, 1, "", "dt"], [53, 1, 1, "", "forward"], [53, 2, 1, "", "inshape"], [53, 2, 1, "", "insize"], [53, 1, 1, "", "like_input"], [53, 1, 1, "", "like_synaptic"], [53, 2, 1, "", "outshape"], [53, 2, 1, "", "outsize"], [53, 1, 1, "", "postsyn_receptive"], [53, 1, 1, "", "presyn_receptive"], [53, 2, 1, "", "selector"], [53, 2, 1, "", "synapse"], [53, 2, 1, "", "syncurrent"], [53, 2, 1, "", "synspike"], [53, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[54, 2, 1, "", "bias"], [54, 2, 1, "", "biased"], [54, 2, 1, "", "binshape"], [54, 2, 1, "", "boutshape"], [54, 2, 1, "", "bsize"], [54, 1, 1, "", "clear"], [54, 2, 1, "", "delay"], [54, 2, 1, "", "delayedby"], [54, 2, 1, "", "dt"], [54, 1, 1, "", "forward"], [54, 2, 1, "", "inshape"], [54, 2, 1, "", "insize"], [54, 1, 1, "", "like_input"], [54, 1, 1, "", "like_synaptic"], [54, 2, 1, "", "outshape"], [54, 2, 1, "", "outsize"], [54, 1, 1, "", "postsyn_receptive"], [54, 1, 1, "", "presyn_receptive"], [54, 2, 1, "", "selector"], [54, 2, 1, "", "syncurrent"], [54, 2, 1, "", "synspike"], [54, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[55, 1, 1, "", "clear"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[56, 1, 1, "", "clear"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[57, 1, 1, "", "clear"], [57, 2, 1, "", "dt"], [57, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[58, 2, 1, "", "bsize"], [58, 1, 1, "", "clear"], [58, 2, 1, "", "dt"], [58, 1, 1, "", "forward"], [58, 2, 1, "", "refrac"], [58, 2, 1, "", "spike"], [58, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[59, 2, 1, "", "adaptation"], [59, 2, 1, "", "bsize"], [59, 1, 1, "", "clear"], [59, 2, 1, "", "dt"], [59, 1, 1, "", "forward"], [59, 2, 1, "", "refrac"], [59, 2, 1, "", "spike"], [59, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[60, 2, 1, "", "compensated"], [60, 1, 1, "", "forward"], [60, 2, 1, "", "frequency"], [60, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[61, 1, 1, "", "clear"], [61, 2, 1, "", "dt"], [61, 1, 1, "", "forward"]], "inferno.neural.LIF": [[62, 2, 1, "", "bsize"], [62, 1, 1, "", "clear"], [62, 2, 1, "", "dt"], [62, 1, 1, "", "forward"], [62, 2, 1, "", "refrac"], [62, 2, 1, "", "spike"], [62, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[63, 1, 1, "", "add_input"], [63, 1, 1, "", "add_output"], [63, 2, 1, "", "connections"], [63, 1, 1, "", "forward"], [63, 2, 1, "", "innames"], [63, 2, 1, "", "named_connections"], [63, 2, 1, "", "named_neurons"], [63, 2, 1, "", "named_synapses"], [63, 2, 1, "", "named_trainables"], [63, 2, 1, "", "named_updaters"], [63, 2, 1, "", "neurons"], [63, 2, 1, "", "outnames"], [63, 2, 1, "", "synapses"], [63, 2, 1, "", "trainables"], [63, 1, 1, "", "update"], [63, 2, 1, "", "updaters"], [63, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[64, 2, 1, "", "bias"], [64, 2, 1, "", "biased"], [64, 2, 1, "", "binshape"], [64, 2, 1, "", "boutshape"], [64, 2, 1, "", "bsize"], [64, 1, 1, "", "clear"], [64, 2, 1, "", "delay"], [64, 2, 1, "", "delayedby"], [64, 2, 1, "", "dt"], [64, 1, 1, "", "forward"], [64, 2, 1, "", "inshape"], [64, 2, 1, "", "insize"], [64, 1, 1, "", "like_input"], [64, 1, 1, "", "like_synaptic"], [64, 2, 1, "", "outshape"], [64, 2, 1, "", "outsize"], [64, 1, 1, "", "postsyn_receptive"], [64, 1, 1, "", "presyn_receptive"], [64, 2, 1, "", "selector"], [64, 2, 1, "", "syncurrent"], [64, 2, 1, "", "synspike"], [64, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[65, 2, 1, "", "bias"], [65, 2, 1, "", "biased"], [65, 2, 1, "", "binshape"], [65, 2, 1, "", "boutshape"], [65, 2, 1, "", "bsize"], [65, 1, 1, "", "clear"], [65, 2, 1, "", "delay"], [65, 2, 1, "", "delayedby"], [65, 2, 1, "", "dt"], [65, 1, 1, "", "forward"], [65, 2, 1, "", "inshape"], [65, 2, 1, "", "insize"], [65, 1, 1, "", "like_input"], [65, 1, 1, "", "like_synaptic"], [65, 2, 1, "", "outshape"], [65, 2, 1, "", "outsize"], [65, 1, 1, "", "postsyn_receptive"], [65, 1, 1, "", "presyn_receptive"], [65, 2, 1, "", "selector"], [65, 2, 1, "", "syncurrent"], [65, 2, 1, "", "synspike"], [65, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[66, 2, 1, "", "bias"], [66, 2, 1, "", "biased"], [66, 2, 1, "", "binshape"], [66, 2, 1, "", "boutshape"], [66, 2, 1, "", "bsize"], [66, 1, 1, "", "clear"], [66, 2, 1, "", "delay"], [66, 2, 1, "", "delayedby"], [66, 2, 1, "", "dt"], [66, 1, 1, "", "forward"], [66, 2, 1, "", "inshape"], [66, 2, 1, "", "insize"], [66, 1, 1, "", "like_input"], [66, 1, 1, "", "like_synaptic"], [66, 2, 1, "", "outshape"], [66, 2, 1, "", "outsize"], [66, 1, 1, "", "postsyn_receptive"], [66, 1, 1, "", "presyn_receptive"], [66, 2, 1, "", "selector"], [66, 2, 1, "", "syncurrent"], [66, 2, 1, "", "synspike"], [66, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[67, 2, 1, "", "bsize"], [67, 1, 1, "", "clear"], [67, 2, 1, "", "dt"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "forward"], [67, 2, 1, "", "refrac"], [67, 2, 1, "", "spike"], [67, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[68, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[69, 1, 1, "", "forward"], [69, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[70, 1, 1, "", "clear"], [70, 2, 1, "", "dt"], [70, 1, 1, "", "forward"]], "inferno.neural.Serial": [[71, 1, 1, "", "add_input"], [71, 1, 1, "", "add_output"], [71, 2, 1, "", "connection"], [71, 1, 1, "", "forward"], [71, 2, 1, "", "neuron"], [71, 2, 1, "", "synapse"], [71, 2, 1, "", "trainable"], [71, 2, 1, "", "updater"], [71, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[72, 1, 1, "", "clear"], [72, 2, 1, "", "current"], [72, 1, 1, "", "current_at"], [72, 2, 1, "", "delay"], [72, 2, 1, "", "dt"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "partialconstructor"], [72, 2, 1, "", "spike"], [72, 1, 1, "", "spike_at"]], "inferno.neural.Trainable": [[74, 1, 1, "", "add_monitor"], [74, 2, 1, "", "connection"], [74, 1, 1, "", "del_monitor"], [74, 1, 1, "", "forward"], [74, 2, 1, "", "neuron"], [74, 2, 1, "", "postspike"], [74, 2, 1, "", "postvoltage"], [74, 2, 1, "", "precurrent"], [74, 2, 1, "", "prespike"], [74, 2, 1, "", "synapse"], [74, 2, 1, "", "updater"]], "inferno.neural.Updater": [[75, 1, 1, "", "bias_bounding"], [75, 1, 1, "", "bias_lower_bounding"], [75, 2, 1, "", "bias_reduction"], [75, 1, 1, "", "bias_update"], [75, 1, 1, "", "bias_upper_bounding"], [75, 2, 1, "", "connection"], [75, 1, 1, "", "delay_bounding"], [75, 1, 1, "", "delay_lower_bounding"], [75, 2, 1, "", "delay_reduction"], [75, 1, 1, "", "delay_update"], [75, 1, 1, "", "delay_upper_bounding"], [75, 1, 1, "", "forward"], [75, 2, 1, "", "neg_bias_update"], [75, 2, 1, "", "neg_delay_update"], [75, 2, 1, "", "neg_weight_update"], [75, 2, 1, "", "pos_bias_update"], [75, 2, 1, "", "pos_delay_update"], [75, 2, 1, "", "pos_weight_update"], [75, 1, 1, "", "weight_bounding"], [75, 1, 1, "", "weight_lower_bounding"], [75, 2, 1, "", "weight_reduction"], [75, 1, 1, "", "weight_update"], [75, 1, 1, "", "weight_upper_bounding"]], "inferno.neural.connections.mixins": [[76, 0, 1, "", "WeightBiasDelayMixin"], [77, 0, 1, "", "WeightBiasMixin"], [78, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[76, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[77, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[78, 2, 1, "", "weight"]], "inferno.neural.functional": [[79, 4, 1, "", "adaptive_currents_linear"], [80, 4, 1, "", "adaptive_thresholds_linear_spike"], [81, 4, 1, "", "adaptive_thresholds_linear_voltage"], [82, 4, 1, "", "apply_adaptive_currents"], [83, 4, 1, "", "apply_adaptive_thresholds"], [84, 4, 1, "", "enc_homogeneous_poisson_exp_interval"], [85, 4, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [86, 4, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [87, 4, 1, "", "enc_poisson_interval"], [88, 4, 1, "", "enc_poisson_interval_online"], [89, 4, 1, "", "trace_cumulative"], [90, 4, 1, "", "trace_cumulative_scaled"], [91, 4, 1, "", "trace_nearest"], [92, 4, 1, "", "trace_nearest_scaled"], [93, 4, 1, "", "voltage_integration_linear"], [94, 4, 1, "", "voltage_integration_quadratic"], [95, 4, 1, "", "voltage_thresholding"], [96, 4, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[97, 0, 1, "", "BatchMixin"], [98, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[97, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[98, 2, 1, "", "bshape"], [98, 2, 1, "", "bsize"], [98, 2, 1, "", "count"], [98, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[99, 0, 1, "", "AdaptationMixin"], [100, 0, 1, "", "CurrentMixin"], [101, 0, 1, "", "RefractoryMixin"], [102, 0, 1, "", "SpikeRefractoryMixin"], [103, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[99, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[100, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[101, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[102, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[103, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[104, 0, 1, "", "CurrentDerivedSpikeMixin"], [105, 0, 1, "", "CurrentMixin"], [106, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [107, 0, 1, "", "SpikeCurrentMixin"], [108, 0, 1, "", "SpikeDerivedCurrentMixin"], [109, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[104, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[105, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[106, 1, 1, "", "current_at"], [106, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[108, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[109, 2, 1, "", "spike"]], "inferno.observe": [[112, 0, 1, "", "CumulativeTraceReducer"], [113, 0, 1, "", "DifferenceMonitor"], [114, 0, 1, "", "EMAReducer"], [115, 0, 1, "", "EventReducer"], [116, 0, 1, "", "FoldReducer"], [117, 0, 1, "", "FoldingReducer"], [118, 0, 1, "", "InputMonitor"], [119, 0, 1, "", "ManagedMonitor"], [120, 0, 1, "", "Monitor"], [121, 0, 1, "", "NearestTraceReducer"], [122, 0, 1, "", "OutputMonitor"], [123, 0, 1, "", "PassthroughReducer"], [124, 0, 1, "", "PostMonitor"], [125, 0, 1, "", "PreMonitor"], [126, 0, 1, "", "Reducer"], [127, 0, 1, "", "ScaledCumulativeTraceReducer"], [128, 0, 1, "", "ScaledNearestTraceReducer"], [129, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[112, 2, 1, "", "dt"], [112, 1, 1, "", "fold"], [112, 1, 1, "", "initialize"], [112, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[113, 1, 1, "", "clear"], [113, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[114, 1, 1, "", "fold"], [114, 1, 1, "", "initialize"], [114, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[115, 1, 1, "", "fold"], [115, 1, 1, "", "initialize"], [115, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[116, 1, 1, "", "clear"], [116, 2, 1, "", "data"], [116, 2, 1, "", "dt"], [116, 1, 1, "", "dump"], [116, 1, 1, "", "forward"], [116, 2, 1, "", "hlen"], [116, 1, 1, "", "peek"], [116, 1, 1, "", "push"], [116, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[117, 1, 1, "", "fold"], [117, 1, 1, "", "initialize"], [117, 1, 1, "", "interpolate"]], "inferno.observe.ManagedMonitor": [[119, 1, 1, "", "partialconstructor"], [119, 1, 1, "", "register"]], "inferno.observe.Monitor": [[120, 1, 1, "", "clear"], [120, 1, 1, "", "dump"], [120, 1, 1, "", "peek"], [120, 2, 1, "", "reducer"], [120, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[121, 2, 1, "", "dt"], [121, 1, 1, "", "fold"], [121, 1, 1, "", "initialize"], [121, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[123, 1, 1, "", "fold"], [123, 1, 1, "", "initialize"], [123, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[126, 1, 1, "", "clear"], [126, 1, 1, "", "dump"], [126, 1, 1, "", "forward"], [126, 1, 1, "", "peek"], [126, 1, 1, "", "push"], [126, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[127, 2, 1, "", "dt"], [127, 1, 1, "", "fold"], [127, 1, 1, "", "initialize"], [127, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[128, 2, 1, "", "dt"], [128, 1, 1, "", "fold"], [128, 1, 1, "", "initialize"], [128, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[129, 1, 1, "", "partialconstructor"]], "inferno.stats": [[135, 0, 1, "", "LogNormal"], [136, 0, 1, "", "Normal"], [137, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[135, 1, 1, "", "cdf"], [135, 1, 1, "", "logcdf"], [135, 1, 1, "", "logpdf"], [135, 1, 1, "", "mean"], [135, 1, 1, "", "params_mv"], [135, 1, 1, "", "pdf"], [135, 1, 1, "", "sample"], [135, 1, 1, "", "sample_mv"], [135, 1, 1, "", "validate"], [135, 1, 1, "", "variance"]], "inferno.stats.Normal": [[136, 1, 1, "", "cdf"], [136, 1, 1, "", "logcdf"], [136, 1, 1, "", "logpdf"], [136, 1, 1, "", "mean"], [136, 1, 1, "", "params_mv"], [136, 1, 1, "", "pdf"], [136, 1, 1, "", "sample"], [136, 1, 1, "", "sample_mv"], [136, 1, 1, "", "validate"], [136, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[137, 1, 1, "", "cdf"], [137, 1, 1, "", "logcdf"], [137, 1, 1, "", "logpmf"], [137, 1, 1, "", "mean"], [137, 1, 1, "", "pmf"], [137, 1, 1, "", "sample"], [137, 1, 1, "", "validate"], [137, 1, 1, "", "variance"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 145, 147], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 144, 152], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 155], "decai": 2, "constant": 2, "trace": [2, 147, 152], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 156, 157], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 67, 146, 147, 150, 153, 154, 155], "system": 3, "dynam": [3, 147], "welcom": 4, "inferno": [4, 5, 142, 143, 144, 145, 146, 147, 148, 149], "": 4, "document": 4, "bound": [5, 144, 152], "type": [5, 143, 146, 148], "upper": 5, "lower": 5, "configur": 6, "dimensionalmodul": 7, "historymodul": 8, "shape": [8, 38, 53, 54, 60, 64, 65, 66, 69, 79, 80, 81, 84, 85, 86, 87, 88, 106, 116], "hook": [9, 146], "interpol": [10, 142], "modul": [11, 152], "statehook": 12, "halfbound": 13, "lower_multiplicative_depend": 14, "lower_power_depend": 15, "lower_sharp_depend": 16, "upper_multiplicative_depend": 17, "upper_power_depend": 18, "upper_sharp_depend": 19, "empti": 20, "exp": 21, "full": 22, "holt_linear_smooth": 23, "manytomani": 24, "manytomanymethod": 25, "manytoon": 26, "manytoonemethod": 27, "onetomani": 28, "onetomanymethod": 29, "onetoon": 30, "onetoonemethod": 31, "interp_exp_decai": 32, "interp_linear": 33, "interp_nearest": 34, "interp_previ": 35, "hardweightdepend": 36, "layerwiseupdat": 37, "maxrateclassifi": 38, "stdp": [39, 152], "softweightdepend": 40, "weightdepend": 41, "updatebound": 42, "hard_lower_bound": 43, "hard_upper_bound": 44, "mult_lower_bound": 45, "mult_upper_bound": 46, "power_lower_bound": 47, "power_upper_bound": 48, "alif": [49, 154], "adex": [50, 155], "bicliqu": 51, "clamp": 52, "connect": [53, 146], "conv2d": 54, "deltacurr": 55, "deltapluscurr": 56, "eif": [57, 155], "glif1": [58, 154], "glif2": [59, 154], "homogeneouspoissonencod": 60, "izhikevich": [61, 155], "lif": [62, 154], "layer": 63, "lineardens": 64, "lineardirect": 65, "linearlater": 66, "normal": [68, 110, 111, 136], "poissonintervalencod": 69, "qif": [70, 155], "serial": 71, "synaps": [72, 146, 150, 156, 157], "synapseconstructor": 73, "trainabl": 74, "updat": [75, 144], "weightbiasdelaymixin": 76, "weightbiasmixin": 77, "weightmixin": 78, "adaptive_currents_linear": 79, "adaptive_thresholds_linear_spik": 80, "adaptive_thresholds_linear_voltag": 81, "apply_adaptive_curr": 82, "apply_adaptive_threshold": 83, "enc_homogeneous_poisson_exp_interv": 84, "enc_homogeneous_poisson_exp_interval_onlin": 85, "enc_inhomogenous_poisson_bernoulli_approx": 86, "enc_poisson_interv": 87, "enc_poisson_interval_onlin": 88, "trace_cumul": 89, "trace_cumulative_sc": 90, "trace_nearest": 91, "trace_nearest_sc": 92, "voltage_integration_linear": 93, "voltage_integration_quadrat": 94, "voltage_threshold": 95, "voltage_thresholding_slope_intercept": 96, "batchmixin": 97, "shapemixin": 98, "adaptationmixin": 99, "currentmixin": [100, 105], "refractorymixin": 101, "spikerefractorymixin": 102, "voltagemixin": 103, "currentderivedspikemixin": 104, "delayedspikecurrentaccessormixin": 106, "spikecurrentmixin": 107, "spikederivedcurrentmixin": 108, "spikemixin": 109, "cumulativetracereduc": 112, "differencemonitor": 113, "emareduc": 114, "eventreduc": 115, "foldreduc": 116, "foldingreduc": 117, "inputmonitor": 118, "managedmonitor": 119, "monitor": [120, 148], "nearesttracereduc": 121, "outputmonitor": 122, "passthroughreduc": 123, "postmonitor": 124, "premonitor": 125, "reduc": [126, 148], "scaledcumulativetracereduc": 127, "scalednearesttracereduc": 128, "statemonitor": 129, "ones": 130, "rescal": 131, "scalar": 132, "simple_exponential_smooth": 133, "sqrt": 134, "lognorm": 135, "paramet": [135, 136, 137, 144, 145], "support": [135, 136, 137], "poisson": 137, "tensor": [138, 142], "uniform": 139, "zero": 140, "api": 141, "refer": [141, 153, 154, 155, 157], "infrastructur": 142, "gener": [142, 154], "math": 142, "infernotyp": 143, "callabl": 143, "learn": [144, 145, 150, 151, 152], "compon": [144, 146, 148], "spike": [144, 147, 152, 153], "depend": [144, 145, 152, 153], "plastic": [144, 152], "classifi": 144, "neural": [146, 147], "model": [146, 150, 154, 155, 156, 157], "encod": [146, 147], "mixin": 146, "observ": 148, "stat": 149, "distribut": 149, "method": [150, 151, 152], "zoo": 150, "overview": [150, 151, 152, 153], "resum": 151, "like": [151, 152], "formul": [152, 153, 154, 155, 156, 157], "delai": 152, "anti": 152, "hebbian": 152, "astdp": 152, "descript": [152, 154, 155, 157], "mstdp": 152, "elig": 152, "mstdpet": 152, "weight": 152, "soft": 152, "hard": 152, "adapt": [153, 154, 155], "current": [153, 157], "linear": [153, 154], "threshold": 153, "voltag": 153, "leaki": 154, "integr": [154, 155], "fire": [154, 155], "altern": 154, "1": 154, "2": 154, "3": 154, "glif3": 154, "4": 154, "glif4": 154, "5": 154, "glif5": 154, "nonlinear": 155, "quadrat": 155, "conduct": 156, "base": [156, 157], "coba": 156, "variant": [156, 157], "cuba": 157}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "inferno.bounding": [[5, "module-inferno.bounding"]], "Types": [[5, "types"], [146, "types"], [148, "types"]], "Upper Bounding": [[5, "upper-bounding"]], "Lower Bounding": [[5, "lower-bounding"]], "Configuration": [[6, "configuration"]], "DimensionalModule": [[7, "dimensionalmodule"]], "HistoryModule": [[8, "historymodule"]], "Shape": [[8, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [53, null], [53, null], [53, null], [53, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [60, null], [64, null], [64, null], [64, null], [64, null], [64, null], [64, null], [64, null], [65, null], [65, null], [65, null], [65, null], [65, null], [65, null], [65, null], [66, null], [66, null], [66, null], [66, null], [66, null], [66, null], [66, null], [69, null], [79, null], [80, null], [81, null], [84, null], [85, null], [86, null], [87, null], [88, null], [106, null], [106, null], [116, null]], "Hook": [[9, "hook"]], "Interpolation": [[10, "interpolation"], [142, "interpolation"]], "Module": [[11, "module"]], "StateHook": [[12, "statehook"]], "HalfBounding": [[13, "halfbounding"]], "lower_multiplicative_dependence": [[14, "lower-multiplicative-dependence"]], "lower_power_dependence": [[15, "lower-power-dependence"]], "lower_sharp_dependence": [[16, "lower-sharp-dependence"]], "upper_multiplicative_dependence": [[17, "upper-multiplicative-dependence"]], "upper_power_dependence": [[18, "upper-power-dependence"]], "upper_sharp_dependence": [[19, "upper-sharp-dependence"]], "empty": [[20, "empty"]], "exp": [[21, "exp"]], "full": [[22, "full"]], "holt_linear_smoothing": [[23, "holt-linear-smoothing"]], "ManyToMany": [[24, "manytomany"]], "ManyToManyMethod": [[25, "manytomanymethod"]], "ManyToOne": [[26, "manytoone"]], "ManyToOneMethod": [[27, "manytoonemethod"]], "OneToMany": [[28, "onetomany"]], "OneToManyMethod": [[29, "onetomanymethod"]], "OneToOne": [[30, "onetoone"]], "OneToOneMethod": [[31, "onetoonemethod"]], "interp_exp_decay": [[32, "interp-exp-decay"]], "interp_linear": [[33, "interp-linear"]], "interp_nearest": [[34, "interp-nearest"]], "interp_previous": [[35, "interp-previous"]], "HardWeightDependence": [[36, "hardweightdependence"]], "LayerwiseUpdater": [[37, "layerwiseupdater"]], "MaxRateClassifier": [[38, "maxrateclassifier"]], "STDP": [[39, "stdp"]], "SoftWeightDependence": [[40, "softweightdependence"]], "WeightDependence": [[41, "weightdependence"]], "UpdateBounding": [[42, "updatebounding"]], "hard_lower_bounding": [[43, "hard-lower-bounding"]], "hard_upper_bounding": [[44, "hard-upper-bounding"]], "mult_lower_bounding": [[45, "mult-lower-bounding"]], "mult_upper_bounding": [[46, "mult-upper-bounding"]], "power_lower_bounding": [[47, "power-lower-bounding"]], "power_upper_bounding": [[48, "power-upper-bounding"]], "ALIF": [[49, "alif"]], "AdEx": [[50, "adex"]], "Biclique": [[51, "biclique"]], "Clamping": [[52, "clamping"]], "Connection": [[53, "connection"]], "Conv2D": [[54, "conv2d"]], "DeltaCurrent": [[55, "deltacurrent"]], "DeltaPlusCurrent": [[56, "deltapluscurrent"]], "EIF": [[57, "eif"]], "GLIF1": [[58, "glif1"]], "GLIF2": [[59, "glif2"]], "HomogeneousPoissonEncoder": [[60, "homogeneouspoissonencoder"]], "Izhikevich": [[61, "izhikevich"]], "LIF": [[62, "lif"]], "Layer": [[63, "layer"]], "LinearDense": [[64, "lineardense"]], "LinearDirect": [[65, "lineardirect"]], "LinearLateral": [[66, "linearlateral"]], "Neuron": [[67, "neuron"]], "Normalization": [[68, "normalization"]], "PoissonIntervalEncoder": [[69, "poissonintervalencoder"]], "QIF": [[70, "qif"]], "Serial": [[71, "serial"]], "Synapse": [[72, "synapse"]], "SynapseConstructor": [[73, "synapseconstructor"]], "Trainable": [[74, "trainable"]], "Updater": [[75, "updater"]], "WeightBiasDelayMixin": [[76, "weightbiasdelaymixin"]], "WeightBiasMixin": [[77, "weightbiasmixin"]], "WeightMixin": [[78, "weightmixin"]], "adaptive_currents_linear": [[79, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[80, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[81, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[82, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[83, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[84, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[85, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[86, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[87, "enc-poisson-interval"]], "enc_poisson_interval_online": [[88, "enc-poisson-interval-online"]], "trace_cumulative": [[89, "trace-cumulative"]], "trace_cumulative_scaled": [[90, "trace-cumulative-scaled"]], "trace_nearest": [[91, "trace-nearest"]], "trace_nearest_scaled": [[92, "trace-nearest-scaled"]], "voltage_integration_linear": [[93, "voltage-integration-linear"]], "voltage_integration_quadratic": [[94, "voltage-integration-quadratic"]], "voltage_thresholding": [[95, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[96, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[97, "batchmixin"]], "ShapeMixin": [[98, "shapemixin"]], "AdaptationMixin": [[99, "adaptationmixin"]], "CurrentMixin": [[100, "currentmixin"], [105, "currentmixin"]], "RefractoryMixin": [[101, "refractorymixin"]], "SpikeRefractoryMixin": [[102, "spikerefractorymixin"]], "VoltageMixin": [[103, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[104, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[106, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[107, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[108, "spikederivedcurrentmixin"]], "SpikeMixin": [[109, "spikemixin"]], "normal": [[110, "normal"]], "normalize": [[111, "normalize"]], "CumulativeTraceReducer": [[112, "cumulativetracereducer"]], "DifferenceMonitor": [[113, "differencemonitor"]], "EMAReducer": [[114, "emareducer"]], "EventReducer": [[115, "eventreducer"]], "FoldReducer": [[116, "foldreducer"]], "FoldingReducer": [[117, "foldingreducer"]], "InputMonitor": [[118, "inputmonitor"]], "ManagedMonitor": [[119, "managedmonitor"]], "Monitor": [[120, "monitor"]], "NearestTraceReducer": [[121, "nearesttracereducer"]], "OutputMonitor": [[122, "outputmonitor"]], "PassthroughReducer": [[123, "passthroughreducer"]], "PostMonitor": [[124, "postmonitor"]], "PreMonitor": [[125, "premonitor"]], "Reducer": [[126, "reducer"]], "ScaledCumulativeTraceReducer": [[127, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[128, "scalednearesttracereducer"]], "StateMonitor": [[129, "statemonitor"]], "ones": [[130, "ones"]], "rescale": [[131, "rescale"]], "scalar": [[132, "scalar"]], "simple_exponential_smoothing": [[133, "simple-exponential-smoothing"]], "sqrt": [[134, "sqrt"]], "LogNormal": [[135, "lognormal"]], "Parameters": [[135, null], [136, null], [137, null]], "Support": [[135, null], [136, null], [137, null]], "Normal": [[136, "normal"]], "Poisson": [[137, "poisson"]], "tensorize": [[138, "tensorize"]], "uniform": [[139, "uniform"]], "zeros": [[140, "zeros"]], "API Reference": [[141, "api-reference"]], "inferno": [[142, "inferno"]], "Infrastructure": [[142, "infrastructure"]], "General Math": [[142, "general-math"]], "Tensors": [[142, "tensors"]], "inferno.infernotypes": [[143, "inferno-infernotypes"]], "Callable Types": [[143, "callable-types"]], "inferno.learn": [[144, "module-inferno.learn"]], "Components": [[144, "components"], [146, "components"], [148, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[144, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[144, "parameter-update-bounding"]], "Classifiers": [[144, "classifiers"]], "inferno.learn.functional": [[145, "module-inferno.learn.functional"]], "Parameter Dependence": [[145, "parameter-dependence"]], "inferno.neural": [[146, "module-inferno.neural"]], "Modeling": [[146, "modeling"]], "Neurons": [[146, "neurons"], [150, "neurons"]], "Synapses": [[146, "synapses"], [150, "synapses"]], "Connections": [[146, "connections"]], "Encoders": [[146, "encoders"]], "Hooks": [[146, "hooks"]], "Mixins": [[146, "mixins"]], "inferno.neural.functional": [[147, "module-inferno.neural.functional"]], "Encodings": [[147, "encodings"]], "Neuronal Dynamics": [[147, "neuronal-dynamics"]], "Spike Trace": [[147, "spike-trace"]], "inferno.observe": [[148, "inferno-observe"]], "Monitors": [[148, "monitors"]], "Reducers": [[148, "reducers"]], "inferno.stats": [[149, "module-inferno.stats"]], "Distributions": [[149, "distributions"]], "Model and Method Zoo": [[150, "model-and-method-zoo"]], "Overview": [[150, "overview"], [151, "overview"], [152, "overview"], [153, "overview"]], "Learning Methods": [[150, "learning-methods"]], "ReSuMe-Like Learning Methods": [[151, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[152, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[152, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[152, "formulation"], [152, "id1"], [152, "id2"], [152, "id3"], [152, "id5"], [153, "formulation"], [153, "id1"], [153, "id3"], [153, "id5"], [154, "formulation"], [154, "id1"], [154, "id4"], [155, "formulation"], [155, "id1"], [155, "id4"], [155, "id7"], [156, "formulation"], [157, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[152, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[152, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[152, "description"], [152, "id4"], [154, "description"], [154, "id2"], [154, "id5"], [155, "description"], [155, "id2"], [155, "id5"], [155, "id8"], [157, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[152, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[152, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[152, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[152, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[153, "neuronal-adaptation"]], "Adaptive Current, Linear": [[153, "adaptive-current-linear"]], "References": [[153, "references"], [153, "id2"], [153, "id4"], [153, "id6"], [154, "references"], [154, "id3"], [154, "id6"], [155, "references"], [155, "id3"], [155, "id6"], [155, "id9"], [157, "references"]], "Adaptive Current, Linear Spike-Dependent": [[153, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[153, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[153, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[154, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[154, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[154, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[154, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[154, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[154, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[154, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[154, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[154, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[155, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[155, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[155, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[155, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[155, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[156, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[156, "delta-coba-variant"]], "Synapse Models, Current-Based": [[157, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[157, "delta-cuba-variant"]]}, "indexentries": {"inferno.bounding": [[5, "module-inferno.bounding"]], "module": [[5, "module-inferno.bounding"], [144, "module-inferno.learn"], [145, "module-inferno.learn.functional"], [146, "module-inferno.neural"], [147, "module-inferno.neural.functional"], [149, "module-inferno.stats"]], "configuration (class in inferno)": [[6, "inferno.Configuration"]], "_asadict_() (configuration method)": [[6, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[7, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[7, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[7, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[7, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[7, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[7, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[8, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[8, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[8, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[8, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[8, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[8, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[8, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[8, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[8, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[8, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[8, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[8, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[8, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[9, "inferno.Hook"]], "deregister() (hook method)": [[9, "inferno.Hook.deregister"]], "evalexec (hook property)": [[9, "inferno.Hook.evalexec"]], "register() (hook method)": [[9, "inferno.Hook.register"]], "registered (hook property)": [[9, "inferno.Hook.registered"]], "trainexec (hook property)": [[9, "inferno.Hook.trainexec"]], "interpolation (class in inferno)": [[10, "inferno.Interpolation"]], "module (class in inferno)": [[11, "inferno.Module"]], "get_extra() (module method)": [[11, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[11, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[11, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[11, "inferno.Module.set_extra_state"]], "statehook (class in inferno)": [[12, "inferno.StateHook"]], "hook() (statehook method)": [[12, "inferno.StateHook.hook"]], "module (statehook property)": [[12, "inferno.StateHook.module"]], "register() (statehook method)": [[12, "inferno.StateHook.register"]], "run() (statehook method)": [[12, "inferno.StateHook.run"]], "halfbounding (class in inferno.bounding)": [[13, "inferno.bounding.HalfBounding"]], "lower_multiplicative_dependence() (in module inferno.bounding)": [[14, "inferno.bounding.lower_multiplicative_dependence"]], "lower_power_dependence() (in module inferno.bounding)": [[15, "inferno.bounding.lower_power_dependence"]], "lower_sharp_dependence() (in module inferno.bounding)": [[16, "inferno.bounding.lower_sharp_dependence"]], "upper_multiplicative_dependence() (in module inferno.bounding)": [[17, "inferno.bounding.upper_multiplicative_dependence"]], "upper_power_dependence() (in module inferno.bounding)": [[18, "inferno.bounding.upper_power_dependence"]], "upper_sharp_dependence() (in module inferno.bounding)": [[19, "inferno.bounding.upper_sharp_dependence"]], "empty() (in module inferno)": [[20, "inferno.empty"]], "exp() (in module inferno)": [[21, "inferno.exp"]], "full() (in module inferno)": [[22, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[23, "inferno.holt_linear_smoothing"]], "manytomany (class in inferno.infernotypes)": [[24, "inferno.infernotypes.ManyToMany"]], "manytomanymethod (class in inferno.infernotypes)": [[25, "inferno.infernotypes.ManyToManyMethod"]], "manytoone (class in inferno.infernotypes)": [[26, "inferno.infernotypes.ManyToOne"]], "manytoonemethod (class in inferno.infernotypes)": [[27, "inferno.infernotypes.ManyToOneMethod"]], "onetomany (class in inferno.infernotypes)": [[28, "inferno.infernotypes.OneToMany"]], "onetomanymethod (class in inferno.infernotypes)": [[29, "inferno.infernotypes.OneToManyMethod"]], "onetoone (class in inferno.infernotypes)": [[30, "inferno.infernotypes.OneToOne"]], "onetoonemethod (class in inferno.infernotypes)": [[31, "inferno.infernotypes.OneToOneMethod"]], "interp_exp_decay() (in module inferno)": [[32, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[33, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[34, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[35, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[36, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[36, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[36, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[37, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[37, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[37, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[37, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[38, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[39, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[39, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[39, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[39, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[39, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[39, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[40, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[40, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[40, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[40, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[40, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[41, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[41, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[41, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[41, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[41, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[41, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[41, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[42, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[43, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[44, "inferno.learn.functional.hard_upper_bounding"]], "mult_lower_bounding() (in module inferno.learn.functional)": [[45, "inferno.learn.functional.mult_lower_bounding"]], "mult_upper_bounding() (in module inferno.learn.functional)": [[46, "inferno.learn.functional.mult_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[47, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[48, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[49, "inferno.neural.ALIF"]], "adaptation (alif property)": [[49, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[49, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[49, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[49, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[49, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[49, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[49, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[49, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[50, "inferno.neural.AdEx"]], "clear() (adex method)": [[50, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[50, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[50, "inferno.neural.AdEx.forward"]], "biclique (class in inferno.neural)": [[51, "inferno.neural.Biclique"]], "add_input() (biclique method)": [[51, "inferno.neural.Biclique.add_input"]], "add_output() (biclique method)": [[51, "inferno.neural.Biclique.add_output"]], "wiring() (biclique method)": [[51, "inferno.neural.Biclique.wiring"]], "clamping (class in inferno.neural)": [[52, "inferno.neural.Clamping"]], "hook() (clamping method)": [[52, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[53, "inferno.neural.Connection"]], "bias (connection property)": [[53, "inferno.neural.Connection.bias"]], "biased (connection property)": [[53, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[53, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[53, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[53, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[53, "inferno.neural.Connection.clear"]], "delay (connection property)": [[53, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[53, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[53, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[53, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[53, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[53, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[53, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[53, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[53, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[53, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[53, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[53, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[53, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[53, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[53, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[53, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[53, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[54, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[54, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[54, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[54, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[54, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[54, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[54, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[54, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[54, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[54, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[54, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[54, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[54, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[54, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[54, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[54, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[54, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[54, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[54, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[54, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[54, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[54, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[54, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[55, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[55, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[55, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[55, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[56, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[56, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[56, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[56, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[57, "inferno.neural.EIF"]], "clear() (eif method)": [[57, "inferno.neural.EIF.clear"]], "dt (eif property)": [[57, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[57, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[58, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[58, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[58, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[58, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[58, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[58, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[58, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[58, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[59, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[59, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[59, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[59, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[59, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[59, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[59, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[59, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[59, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[60, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[60, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[60, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[60, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[60, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[61, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[61, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[61, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[61, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[62, "inferno.neural.LIF"]], "bsize (lif property)": [[62, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[62, "inferno.neural.LIF.clear"]], "dt (lif property)": [[62, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[62, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[62, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[62, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[62, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[63, "inferno.neural.Layer"]], "add_input() (layer method)": [[63, "inferno.neural.Layer.add_input"]], "add_output() (layer method)": [[63, "inferno.neural.Layer.add_output"]], "connections (layer property)": [[63, "inferno.neural.Layer.connections"]], "forward() (layer method)": [[63, "inferno.neural.Layer.forward"]], "innames (layer property)": [[63, "inferno.neural.Layer.innames"]], "named_connections (layer property)": [[63, "inferno.neural.Layer.named_connections"]], "named_neurons (layer property)": [[63, "inferno.neural.Layer.named_neurons"]], "named_synapses (layer property)": [[63, "inferno.neural.Layer.named_synapses"]], "named_trainables (layer property)": [[63, "inferno.neural.Layer.named_trainables"]], "named_updaters (layer property)": [[63, "inferno.neural.Layer.named_updaters"]], "neurons (layer property)": [[63, "inferno.neural.Layer.neurons"]], "outnames (layer property)": [[63, "inferno.neural.Layer.outnames"]], "synapses (layer property)": [[63, "inferno.neural.Layer.synapses"]], "trainables (layer property)": [[63, "inferno.neural.Layer.trainables"]], "update() (layer method)": [[63, "inferno.neural.Layer.update"]], "updaters (layer property)": [[63, "inferno.neural.Layer.updaters"]], "wiring() (layer method)": [[63, "inferno.neural.Layer.wiring"]], "lineardense (class in inferno.neural)": [[64, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[64, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[64, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[64, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[64, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[64, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[64, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[64, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[64, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[64, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[64, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[64, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[64, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[64, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[64, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[64, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[64, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[64, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[64, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[64, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[64, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[64, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[64, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[65, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[65, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[65, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[65, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[65, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[65, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[65, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[65, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[65, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[65, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[65, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[65, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[65, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[65, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[65, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[65, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[65, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[65, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[65, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[65, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[65, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[65, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[65, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[66, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[66, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[66, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[66, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[66, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[66, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[66, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[66, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[66, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[66, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[66, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[66, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[66, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[66, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[66, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[66, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[66, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[66, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[66, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[66, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[66, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[66, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[66, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[67, "inferno.neural.Neuron"]], "bsize (neuron property)": [[67, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[67, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[67, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[67, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[67, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[67, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[67, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[67, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[68, "inferno.neural.Normalization"]], "hook() (normalization method)": [[68, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[69, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[69, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[69, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[70, "inferno.neural.QIF"]], "clear() (qif method)": [[70, "inferno.neural.QIF.clear"]], "dt (qif property)": [[70, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[70, "inferno.neural.QIF.forward"]], "serial (class in inferno.neural)": [[71, "inferno.neural.Serial"]], "add_input() (serial method)": [[71, "inferno.neural.Serial.add_input"]], "add_output() (serial method)": [[71, "inferno.neural.Serial.add_output"]], "connection (serial property)": [[71, "inferno.neural.Serial.connection"]], "forward() (serial method)": [[71, "inferno.neural.Serial.forward"]], "neuron (serial property)": [[71, "inferno.neural.Serial.neuron"]], "synapse (serial property)": [[71, "inferno.neural.Serial.synapse"]], "trainable (serial property)": [[71, "inferno.neural.Serial.trainable"]], "updater (serial property)": [[71, "inferno.neural.Serial.updater"]], "wiring() (serial method)": [[71, "inferno.neural.Serial.wiring"]], "synapse (class in inferno.neural)": [[72, "inferno.neural.Synapse"]], "clear() (synapse method)": [[72, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[72, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[72, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[72, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[72, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[72, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[72, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[72, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[72, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[73, "inferno.neural.SynapseConstructor"]], "trainable (class in inferno.neural)": [[74, "inferno.neural.Trainable"]], "add_monitor() (trainable method)": [[74, "inferno.neural.Trainable.add_monitor"]], "connection (trainable property)": [[74, "inferno.neural.Trainable.connection"]], "del_monitor() (trainable method)": [[74, "inferno.neural.Trainable.del_monitor"]], "forward() (trainable method)": [[74, "inferno.neural.Trainable.forward"]], "neuron (trainable property)": [[74, "inferno.neural.Trainable.neuron"]], "postspike (trainable property)": [[74, "inferno.neural.Trainable.postspike"]], "postvoltage (trainable property)": [[74, "inferno.neural.Trainable.postvoltage"]], "precurrent (trainable property)": [[74, "inferno.neural.Trainable.precurrent"]], "prespike (trainable property)": [[74, "inferno.neural.Trainable.prespike"]], "synapse (trainable property)": [[74, "inferno.neural.Trainable.synapse"]], "updater (trainable property)": [[74, "inferno.neural.Trainable.updater"]], "updater (class in inferno.neural)": [[75, "inferno.neural.Updater"]], "bias_bounding() (updater method)": [[75, "inferno.neural.Updater.bias_bounding"]], "bias_lower_bounding() (updater method)": [[75, "inferno.neural.Updater.bias_lower_bounding"]], "bias_reduction (updater property)": [[75, "inferno.neural.Updater.bias_reduction"]], "bias_update() (updater method)": [[75, "inferno.neural.Updater.bias_update"]], "bias_upper_bounding() (updater method)": [[75, "inferno.neural.Updater.bias_upper_bounding"]], "connection (updater property)": [[75, "inferno.neural.Updater.connection"]], "delay_bounding() (updater method)": [[75, "inferno.neural.Updater.delay_bounding"]], "delay_lower_bounding() (updater method)": [[75, "inferno.neural.Updater.delay_lower_bounding"]], "delay_reduction (updater property)": [[75, "inferno.neural.Updater.delay_reduction"]], "delay_update() (updater method)": [[75, "inferno.neural.Updater.delay_update"]], "delay_upper_bounding() (updater method)": [[75, "inferno.neural.Updater.delay_upper_bounding"]], "forward() (updater method)": [[75, "inferno.neural.Updater.forward"]], "neg_bias_update (updater property)": [[75, "inferno.neural.Updater.neg_bias_update"]], "neg_delay_update (updater property)": [[75, "inferno.neural.Updater.neg_delay_update"]], "neg_weight_update (updater property)": [[75, "inferno.neural.Updater.neg_weight_update"]], "pos_bias_update (updater property)": [[75, "inferno.neural.Updater.pos_bias_update"]], "pos_delay_update (updater property)": [[75, "inferno.neural.Updater.pos_delay_update"]], "pos_weight_update (updater property)": [[75, "inferno.neural.Updater.pos_weight_update"]], "weight_bounding() (updater method)": [[75, "inferno.neural.Updater.weight_bounding"]], "weight_lower_bounding() (updater method)": [[75, "inferno.neural.Updater.weight_lower_bounding"]], "weight_reduction (updater property)": [[75, "inferno.neural.Updater.weight_reduction"]], "weight_update() (updater method)": [[75, "inferno.neural.Updater.weight_update"]], "weight_upper_bounding() (updater method)": [[75, "inferno.neural.Updater.weight_upper_bounding"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[76, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[76, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[77, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[77, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[78, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[78, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[79, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[80, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[81, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[82, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[83, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[84, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[85, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[86, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[87, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[88, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[89, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[90, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[91, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[92, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[93, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[94, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[95, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[96, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[97, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[97, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[98, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[98, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[98, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[98, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[98, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[99, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[99, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[100, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[100, "inferno.neural.neurons.mixins.CurrentMixin.current"], [105, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[101, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[101, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[102, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[102, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[103, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[103, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[104, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[104, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[105, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[106, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[106, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[106, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[107, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[108, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[108, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[109, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[109, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[110, "inferno.normal"]], "normalize() (in module inferno)": [[111, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[112, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[112, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[112, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[112, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[112, "inferno.observe.CumulativeTraceReducer.interpolate"]], "differencemonitor (class in inferno.observe)": [[113, "inferno.observe.DifferenceMonitor"]], "clear() (differencemonitor method)": [[113, "inferno.observe.DifferenceMonitor.clear"]], "partialconstructor() (differencemonitor class method)": [[113, "inferno.observe.DifferenceMonitor.partialconstructor"]], "emareducer (class in inferno.observe)": [[114, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[114, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[114, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[114, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[115, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[115, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[115, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[115, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[116, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[116, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[116, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[116, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[116, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[116, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[116, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[116, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[116, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[116, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[117, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[117, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[117, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[117, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[118, "inferno.observe.InputMonitor"]], "managedmonitor (class in inferno.observe)": [[119, "inferno.observe.ManagedMonitor"]], "partialconstructor() (managedmonitor class method)": [[119, "inferno.observe.ManagedMonitor.partialconstructor"]], "register() (managedmonitor method)": [[119, "inferno.observe.ManagedMonitor.register"]], "monitor (class in inferno.observe)": [[120, "inferno.observe.Monitor"]], "clear() (monitor method)": [[120, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[120, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[120, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[120, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[120, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[121, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[121, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[121, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[121, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[121, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[122, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[123, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[123, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[123, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[123, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[124, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[125, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[126, "inferno.observe.Reducer"]], "clear() (reducer method)": [[126, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[126, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[126, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[126, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[126, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[126, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[127, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[127, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[127, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[127, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[127, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[128, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[128, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[128, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[128, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[128, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[129, "inferno.observe.StateMonitor"]], "partialconstructor() (statemonitor class method)": [[129, "inferno.observe.StateMonitor.partialconstructor"]], "ones() (in module inferno)": [[130, "inferno.ones"]], "rescale() (in module inferno)": [[131, "inferno.rescale"]], "scalar() (in module inferno)": [[132, "inferno.scalar"]], "simple_exponential_smoothing() (in module inferno)": [[133, "inferno.simple_exponential_smoothing"]], "sqrt() (in module inferno)": [[134, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[135, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[135, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[135, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[135, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[135, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[135, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[135, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[135, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[135, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[135, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[135, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[136, "inferno.stats.Normal"]], "cdf() (normal class method)": [[136, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[136, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[136, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[136, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[136, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[136, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[136, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[136, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[136, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[136, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[137, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[137, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[137, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[137, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[137, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[137, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[137, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[137, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[137, "inferno.stats.Poisson.variance"]], "tensorize() (in module inferno)": [[138, "inferno.tensorize"]], "uniform() (in module inferno)": [[139, "inferno.uniform"]], "zeros() (in module inferno)": [[140, "inferno.zeros"]], "inferno.learn": [[144, "module-inferno.learn"]], "inferno.learn.functional": [[145, "module-inferno.learn.functional"]], "inferno.neural": [[146, "module-inferno.neural"]], "inferno.neural.functional": [[147, "module-inferno.neural.functional"]], "inferno.stats": [[149, "module-inferno.stats"]]}})